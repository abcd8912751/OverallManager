Index: app/src/main/java/com/furja/devicemanager/databases/DeviceTrouble.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/DeviceTrouble.java	(date 1520392534000)
+++ app/src/main/java/com/furja/devicemanager/databases/DeviceTrouble.java	(date 1520392534000)
@@ -0,0 +1,119 @@
+package com.furja.devicemanager.databases;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+import org.greenrobot.greendao.DaoException;
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.NotNull;
+
+/*
+* GreenDao的 设备故障 基类
+*/
+@Entity(active = true)
+public class DeviceTrouble {
+    @Id(autoincrement = true)@JSONField(serialize = false)
+    private Long id;
+    private String repairNumber;  //维修单号
+    private int troubleLevelID;   //故障等级
+    private int troubleGradeID;   //故障类别
+    private String troubleDesp;   //设备问题描述
+    private int repairState;      // 1代表待派单,2代表待维修,3代表在维修,4代表已维修待验证,5代表已验证维修完成并结单
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+    /** Used for active entity operations. */
+    @Generated(hash = 1917772912)
+    private transient DeviceTroubleDao myDao;
+    @Generated(hash = 1012885075)
+    public DeviceTrouble(Long id, String repairNumber, int troubleLevelID,
+            int troubleGradeID, String troubleDesp, int repairState) {
+        this.id = id;
+        this.repairNumber = repairNumber;
+        this.troubleLevelID = troubleLevelID;
+        this.troubleGradeID = troubleGradeID;
+        this.troubleDesp = troubleDesp;
+        this.repairState = repairState;
+    }
+    @Generated(hash = 1263443191)
+    public DeviceTrouble() {
+    }
+    public Long getId() {
+        return this.id;
+    }
+    public void setId(Long id) {
+        this.id = id;
+    }
+    public String getRepairNumber() {
+        return this.repairNumber;
+    }
+    public void setRepairNumber(String repairNumber) {
+        this.repairNumber = repairNumber;
+    }
+    public int getTroubleLevelID() {
+        return this.troubleLevelID;
+    }
+    public void setTroubleLevelID(int troubleLevelID) {
+        this.troubleLevelID = troubleLevelID;
+    }
+    public int getTroubleGradeID() {
+        return this.troubleGradeID;
+    }
+    public void setTroubleGradeID(int troubleGradeID) {
+        this.troubleGradeID = troubleGradeID;
+    }
+    public String getTroubleDesp() {
+        return this.troubleDesp;
+    }
+    public void setTroubleDesp(String troubleDesp) {
+        this.troubleDesp = troubleDesp;
+    }
+    public int getRepairState() {
+        return this.repairState;
+    }
+    public void setRepairState(int repairState) {
+        this.repairState = repairState;
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 845718954)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getDeviceTroubleDao() : null;
+    }
+    
+    
+}
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/databases/InsepectRecord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/InsepectRecord.java	(date 1524554454000)
+++ app/src/main/java/com/furja/devicemanager/databases/InsepectRecord.java	(date 1524554454000)
@@ -0,0 +1,18 @@
+package com.furja.devicemanager.databases;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+import org.greenrobot.greendao.annotation.Convert;
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.DaoException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+
+public class InsepectRecord {
+
+}
Index: app/src/main/java/com/furja/devicemanager/databases/MaintainRecord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/MaintainRecord.java	(date 1528280622000)
+++ app/src/main/java/com/furja/devicemanager/databases/MaintainRecord.java	(date 1528280622000)
@@ -0,0 +1,9 @@
+package com.furja.devicemanager.databases;
+
+/**
+ * GreenDao的保养表格基类
+ */
+
+public class MaintainRecord {
+
+}
Index: app/src/main/java/com/furja/devicemanager/databases/TroubleBasicInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/TroubleBasicInfo.java	(date 1528280624000)
+++ app/src/main/java/com/furja/devicemanager/databases/TroubleBasicInfo.java	(date 1528280624000)
@@ -0,0 +1,52 @@
+package com.furja.devicemanager.databases;
+
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Generated;
+
+/**
+ * Created by zhangmeng on 2018/1/26.
+ */
+@Entity
+public class TroubleBasicInfo {
+    @Id(autoincrement = true)
+    private Long id;
+    private String fType;    //维修单号
+    private int fInfoID;    //故障等级
+    private String fInfoDetail;
+    @Generated(hash = 1059817559)
+    public TroubleBasicInfo(Long id, String fType, int fInfoID,
+            String fInfoDetail) {
+        this.id = id;
+        this.fType = fType;
+        this.fInfoID = fInfoID;
+        this.fInfoDetail = fInfoDetail;
+    }
+    @Generated(hash = 1881730970)
+    public TroubleBasicInfo() {
+    }
+    public Long getId() {
+        return this.id;
+    }
+    public void setId(Long id) {
+        this.id = id;
+    }
+    public String getFType() {
+        return this.fType;
+    }
+    public void setFType(String fType) {
+        this.fType = fType;
+    }
+    public int getFInfoID() {
+        return this.fInfoID;
+    }
+    public void setFInfoID(int fInfoID) {
+        this.fInfoID = fInfoID;
+    }
+    public String getFInfoDetail() {
+        return this.fInfoDetail;
+    }
+    public void setFInfoDetail(String fInfoDetail) {
+        this.fInfoDetail = fInfoDetail;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/databases/PlasticInjectCheckChild.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/PlasticInjectCheckChild.java	(date 1528287910000)
+++ app/src/main/java/com/furja/devicemanager/databases/PlasticInjectCheckChild.java	(date 1528287910000)
@@ -0,0 +1,186 @@
+package com.furja.devicemanager.databases;
+
+import android.text.TextUtils;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.beans.SpotCheckItem;
+
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Index;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+
+import java.text.SimpleDateFormat;
+
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.DaoException;
+/**
+ * 注塑车间机修开机检查清单的状态保存
+ */
+@Entity(active = true)
+public class PlasticInjectCheckChild {
+    @Id(autoincrement = true)@JSONField(serialize=false)
+    private Long id;
+    @NotNull
+    @Index@JSONField(serialize=false)
+    private long interID;   //作为与设备点检主题关联的ID
+    @JSONField(name="FCheckTitleID",ordinal = 1)
+    String check_TitleID;     //检查内容的titleID
+    @JSONField(name="FCheckResult",ordinal = 2)
+    String check_result;    //检查结果,true,false,temp和冷却、周期时间等
+    @JSONField(name="FRemarkContent",ordinal = 3)
+    String remark_content="";   //备注,默认为空
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+    /** Used for active entity operations. */
+    @Generated(hash = 2073915917)
+    private transient PlasticInjectCheckChildDao myDao;
+
+    
+    @Keep
+    public PlasticInjectCheckChild(long interID) {
+        this.id=null;
+        this.interID=interID;
+    }
+
+    @Generated(hash = 1319644777)
+    public PlasticInjectCheckChild(Long id, long interID, String check_TitleID,
+            String check_result, String remark_content) {
+        this.id = id;
+        this.interID = interID;
+        this.check_TitleID = check_TitleID;
+        this.check_result = check_result;
+        this.remark_content = remark_content;
+    }
+
+    @Generated(hash = 1284722365)
+    public PlasticInjectCheckChild() {
+    }
+
+    @Keep
+    public void setSpotCheckItem(SpotCheckItem item)
+    {
+        this.check_TitleID =item.getCheck_TitleId();
+        StringBuffer stringBuffer=new StringBuffer();
+        if(TextUtils.isEmpty(item.getTemperature()))
+            stringBuffer.append(item.getHave());
+        else
+            stringBuffer.append("温度:"+item.getTemperature()).append(" ℃");
+        if(!TextUtils.isEmpty(item.getCoolTime()))
+        {
+            stringBuffer.append(",冷却时间:").append(item.getCoolTime())
+                    .append("S,周期时间:").append(item.getCycleTime()).append("S");
+        }
+        if(!TextUtils.isEmpty(item.getSignTime()))
+        {
+            if(stringBuffer.length()!=0)
+                stringBuffer.delete(0,stringBuffer.length());
+            stringBuffer.append("签板时间:"+item.getSignTime());
+        }
+        check_result=stringBuffer.toString();
+        this.remark_content=item.getRemark_content();
+
+    }
+
+
+
+
+
+
+    @Keep
+    @Override
+    public String toString() {
+        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+
+        return "PlasticInjectCheckChild{" +
+                " check_TitleID='" + check_TitleID + '\'' +
+                ", check_Result='" + check_result + '\'' +
+                ", remark_content='" + remark_content+"}" ;
+    }
+
+    public Long getId() {
+        return this.id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public long getInterID() {
+        return this.interID;
+    }
+
+    public void setInterID(long interID) {
+        this.interID = interID;
+    }
+
+    public String getCheck_TitleID() {
+        return this.check_TitleID;
+    }
+
+    public void setCheck_TitleID(String check_TitleID) {
+        this.check_TitleID = check_TitleID;
+    }
+
+    public String getCheck_result() {
+        return this.check_result;
+    }
+
+    public void setCheck_result(String check_result) {
+        this.check_result = check_result;
+    }
+
+    public String getRemark_content() {
+        return this.remark_content;
+    }
+
+    public void setRemark_content(String remark_content) {
+        this.remark_content = remark_content;
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 578808865)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getPlasticInjectCheckChildDao() : null;
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/databases/PlasticInjectCheck.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/PlasticInjectCheck.java	(date 1528287910000)
+++ app/src/main/java/com/furja/devicemanager/databases/PlasticInjectCheck.java	(date 1528287910000)
@@ -0,0 +1,133 @@
+package com.furja.devicemanager.databases;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.NotNull;
+
+import java.util.Date;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.DaoException;
+
+/**
+ * 注塑设备点检
+ */
+@Entity(active = true)
+public class PlasticInjectCheck {
+    @Id(autoincrement = true)
+    private Long id;
+    private long interID;
+    @NotNull
+    private String barCode;  // 设备条码
+    @NotNull
+    private String personnelID;   //人员
+    @JSONField(serialize=false)
+    private boolean pass; //点检是否通过
+    @JSONField(serialize=false)
+    private boolean isUpload;   //是否上传
+    private Date date;
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+    /** Used for active entity operations. */
+    @Generated(hash = 804763398)
+    private transient PlasticInjectCheckDao myDao;
+    @Generated(hash = 498317323)
+    public PlasticInjectCheck(Long id, long interID, @NotNull String barCode,
+            @NotNull String personnelID, boolean pass, boolean isUpload, Date date) {
+        this.id = id;
+        this.interID = interID;
+        this.barCode = barCode;
+        this.personnelID = personnelID;
+        this.pass = pass;
+        this.isUpload = isUpload;
+        this.date = date;
+    }
+    @Generated(hash = 1956356987)
+    public PlasticInjectCheck() {
+    }
+    public Long getId() {
+        return this.id;
+    }
+    public void setId(Long id) {
+        this.id = id;
+    }
+    public long getInterID() {
+        return this.interID;
+    }
+    public void setInterID(long interID) {
+        this.interID = interID;
+    }
+    public String getBarCode() {
+        return this.barCode;
+    }
+    public void setBarCode(String barCode) {
+        this.barCode = barCode;
+    }
+    public String getPersonnelID() {
+        return this.personnelID;
+    }
+    public void setPersonnelID(String personnelID) {
+        this.personnelID = personnelID;
+    }
+    public boolean getPass() {
+        return this.pass;
+    }
+    public void setPass(boolean pass) {
+        this.pass = pass;
+    }
+    public Date getDate() {
+        return this.date;
+    }
+    public void setDate(Date date) {
+        this.date = date;
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+    public boolean getIsUpload() {
+        return this.isUpload;
+    }
+    public void setIsUpload(boolean isUpload) {
+        this.isUpload = isUpload;
+    }
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 1902336237)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getPlasticInjectCheckDao() : null;
+    }
+
+    
+}
Index: app/src/main/java/com/furja/devicemanager/databases/RepairRecord.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/RepairRecord.java	(date 1519628156000)
+++ app/src/main/java/com/furja/devicemanager/databases/RepairRecord.java	(date 1519628156000)
@@ -0,0 +1,234 @@
+package com.furja.devicemanager.databases;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.DaoException;
+
+/**
+ * GreenDao的维修表格基类
+ */
+@Entity(active = true)
+public class RepairRecord {
+
+    @Id(autoincrement = true)@JSONField(serialize = false)
+    private Long id;
+    @NotNull
+    private String barCode;      // 设备条码
+    @NotNull
+    private String personnelID;  //维修人员
+    @NotNull
+    private int repairState;     //1代表待派单,2代表待维修,3代表在维修,4代表已维修待验证,5代表已验证维修完成并结单
+    private String repairNumber;   //设备故障单号
+    private String repairDetail;      //维修工作描述
+    private String stopDuration;    //停机时长
+    private String repairDuration;  //维修时长
+    private Date date;              //日期
+    @JSONField(serialize = false)
+    private boolean isUpload;       //是否上传
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+    /** Used for active entity operations. */
+    @Generated(hash = 1294683811)
+    private transient RepairRecordDao myDao;
+
+
+    @Keep
+    public RepairRecord(@NotNull String barCode,
+                        @NotNull String personnelID, boolean isNormal,
+                        String repairNumber, String workDetail, String stopDuration,
+                        String repairDuration)
+    {
+		this.id = null;
+        this.barCode=barCode;
+        this.personnelID=personnelID;
+        if(isNormal)
+            setRepairState(3);
+        else
+            setRepairState(2);
+        setRepairNumber(repairNumber);
+        setRepairDetail(workDetail);
+        setStopDuration(stopDuration);
+        setRepairDuration(repairDuration);
+        this.date=new Date(System.currentTimeMillis());
+    }
+
+
+    @Generated(hash = 1925562452)
+    public RepairRecord(Long id, @NotNull String barCode,
+            @NotNull String personnelID, int repairState, String repairNumber,
+            String repairDetail, String stopDuration, String repairDuration,
+            Date date, boolean isUpload) {
+        this.id = id;
+        this.barCode = barCode;
+        this.personnelID = personnelID;
+        this.repairState = repairState;
+        this.repairNumber = repairNumber;
+        this.repairDetail = repairDetail;
+        this.stopDuration = stopDuration;
+        this.repairDuration = repairDuration;
+        this.date = date;
+        this.isUpload = isUpload;
+    }
+
+    @Generated(hash = 1280592811)
+    public RepairRecord() {
+    }
+
+
+    public Long getId() {
+        return this.id;
+    }
+
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+
+    public String getBarCode() {
+        return this.barCode;
+    }
+
+
+    public void setBarCode(String barCode) {
+        this.barCode = barCode;
+    }
+
+
+    public String getPersonnelID() {
+        return this.personnelID;
+    }
+
+
+    public void setPersonnelID(String personnelID) {
+        this.personnelID = personnelID;
+    }
+
+
+    public int getRepairState() {
+        return this.repairState;
+    }
+
+
+    public void setRepairState(int repairState) {
+        this.repairState = repairState;
+    }
+
+
+    public String getRepairNumber() {
+        return this.repairNumber;
+    }
+
+
+    public void setRepairNumber(String repairNumber) {
+        this.repairNumber = repairNumber;
+    }
+
+
+    public String getRepairDetail() {
+        return this.repairDetail;
+    }
+
+
+    public void setRepairDetail(String repairDetail) {
+        this.repairDetail = repairDetail;
+    }
+
+
+    public String getStopDuration() {
+        return this.stopDuration;
+    }
+
+
+    public void setStopDuration(String stopDuration) {
+        this.stopDuration = stopDuration;
+    }
+
+
+    public String getRepairDuration() {
+        return this.repairDuration;
+    }
+
+
+    public void setRepairDuration(String repairDuration) {
+        this.repairDuration = repairDuration;
+    }
+
+
+    public Date getDate() {
+        return this.date;
+    }
+
+
+    public void setDate(Date date) {
+        this.date = date;
+    }
+
+
+    public boolean getIsUpload() {
+        return this.isUpload;
+    }
+
+
+    public void setIsUpload(boolean isUpload) {
+        this.isUpload = isUpload;
+    }
+
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+
+
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 1341885959)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getRepairRecordDao() : null;
+    }
+
+
+}
Index: app/src/main/java/com/furja/devicemanager/databases/DeviceTroubleConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/databases/DeviceTroubleConverter.java	(date 1528280626000)
+++ app/src/main/java/com/furja/devicemanager/databases/DeviceTroubleConverter.java	(date 1528280626000)
@@ -0,0 +1,24 @@
+package com.furja.devicemanager.databases;
+
+import com.alibaba.fastjson.JSON;
+
+import org.greenrobot.greendao.converter.PropertyConverter;
+
+/**
+ * 将DeviceTrouble的JsonString存储.
+ */
+
+public class DeviceTroubleConverter implements PropertyConverter<DeviceTrouble,String>
+{
+
+    @Override
+    public DeviceTrouble convertToEntityProperty(String databaseValue) {
+
+        return JSON.parseObject(databaseValue,DeviceTrouble.class);
+    }
+
+    @Override
+    public String convertToDatabaseValue(DeviceTrouble entityProperty) {
+        return JSON.toJSONString(entityProperty);
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/presenter/OwnRecordPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/presenter/OwnRecordPresenter.java	(date 1528280626000)
+++ app/src/main/java/com/furja/devicemanager/presenter/OwnRecordPresenter.java	(date 1528280626000)
@@ -0,0 +1,9 @@
+package com.furja.devicemanager.presenter;
+
+/**
+ * 连接OwnRecordActivity的桥
+ */
+
+public class OwnRecordPresenter {
+
+}
Index: app/src/main/java/com/furja/devicemanager/presenter/PIViewPagerPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/presenter/PIViewPagerPresenter.java	(date 1576829481650)
+++ app/src/main/java/com/furja/devicemanager/presenter/PIViewPagerPresenter.java	(date 1576829481650)
@@ -0,0 +1,421 @@
+package com.furja.devicemanager.presenter;
+
+import android.app.TimePickerDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AlertDialog;
+import android.text.InputType;
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.CompoundButton;
+import android.widget.EditText;
+import android.widget.TextView;
+import android.widget.TimePicker;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.SpotCheckItem;
+import com.furja.devicemanager.view.PIViewPagerAdapter;
+import com.kyleduo.switchbutton.SwitchButton;
+
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.List;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * 连接数据及PISpotCheckActivity之间的桥,主要通过ViewPagerAdapter关联
+ */
+
+public class PIViewPagerPresenter {
+    private List<SpotCheckItem> spotCheckItems; //19个条目检查集合
+    private int currPosition=-1;
+    ScanListener scanListener;
+    final SimpleDateFormat dateFormat=new SimpleDateFormat("yyyy-MM-dd HH:mm");
+
+    public PIViewPagerPresenter(ScanListener listener) {
+        this.scanListener=listener;
+    }
+
+
+    /**
+     * 设置签板时间的界面,针对检查条目第4条
+     * @param curView
+     * @param item
+     */
+    public void setSignTimeView(View curView, final SpotCheckItem item) {
+        TextView signTime=curView.findViewById(R.id.sign_Time);
+        final Calendar calendar=Calendar.getInstance();
+        Date date=calendar.getTime();
+        if(TextUtils.isEmpty(item.getSignTime()))
+        {
+            item.setSignTime(dateFormat.format(date));
+        }
+        signTime.setText(item.getSignTime());
+        signTime.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                showTimePickerDialog(view.getContext(),item);
+            }
+        });
+    }
+
+    /**
+     * 显示TimerPickerDialog
+     * @param context
+     * @param item
+     */
+    private void showTimePickerDialog(Context context,final SpotCheckItem item) {
+        final Calendar calendar=Calendar.getInstance();
+        int hourOfDay=calendar.get(Calendar.HOUR_OF_DAY);
+        int minute=calendar.get(Calendar.MINUTE);
+        TimePickerDialog.OnTimeSetListener timeSetListener
+                =new TimePickerDialog.OnTimeSetListener() {
+            @Override
+            public void onTimeSet(TimePicker timePicker, int hour, int minute) {
+                calendar.set(Calendar.HOUR_OF_DAY,hour);
+                calendar.set(Calendar.MINUTE,minute);
+                Date date=calendar.getTime();
+                showLog("TimeSet hour:"+hour+",minute:"+minute);
+                item.setSignTime(dateFormat.format(date));
+                scanListener.freshViewPager();
+            }
+        };
+
+        TimePickerDialog timePickerDialog
+                =new TimePickerDialog(context,timeSetListener,hourOfDay,minute,true);
+        timePickerDialog.show();
+    }
+
+    /**
+     * 设置温度的界面,针对检查条目第14、15条
+     * @param curView
+     * @param item
+     */
+    public void setTemperatureView(View curView, final SpotCheckItem item)
+    {
+        TextView timeLabel=(TextView)curView.findViewById(R.id.temp_Label);
+        timeLabel.setText("温度:"+item.getTemperature()+" ℃");
+        timeLabel.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                showTempInputDialog(view.getContext(),item);
+            }
+        });
+    }
+
+    /**
+     * 设置时间和温度 的界面,针对检查条目第16条
+     * @param curView
+     * @param item
+     */
+    public void setTimeAndTempView(View curView, final SpotCheckItem item)
+    {
+        TextView timeLabel=(TextView)curView.findViewById(R.id.temp_Label);
+        timeLabel.setText("温度:"+item.getTemperature()+" ℃");
+        timeLabel.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                showTempInputDialog(view.getContext(), item);
+            }
+        });
+        TextView coolTime_Label=(TextView)curView.findViewById(R.id.coolTime_Label);
+        coolTime_Label.setText("冷却:"+item.getCoolTime()+" S");
+        coolTime_Label.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                showCoolTimeDialog(view.getContext(),item);
+            }
+        });
+        TextView cycleTime_Label=(TextView)curView.findViewById(R.id.cycleTime_Label);
+        cycleTime_Label.setText("周期:"+item.getCycleTime()+" S");
+        cycleTime_Label.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                showCycleTimeDialog(view.getContext(),item);
+            }
+        });
+    }
+
+    /**
+     * 只需要确定检查结果正常与否
+     * @param curView
+     * @param item
+     */
+    public void setOnlyHaveView(View curView, final SpotCheckItem item)
+    {
+        SwitchButton switchButton
+                =(SwitchButton)curView.findViewById(R.id.check_has_Switch);
+        switchButton.setChecked(item.getHave());
+        switchButton.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
+                item.setHave(b);
+                int currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+                spotCheckItems.set(currPosition,item);
+                showLog(currPosition+">"+item.toString());
+
+                scanListener.focusOnBarCodeEdit();
+            }
+        });
+    }
+
+    public void setTitleAndRemarkView(final SpotCheckItem item, View curView) {
+        TextView view=curView.findViewById(R.id.label_remark);
+        if(TextUtils.isEmpty(item.getRemark_content()))
+            view.setCompoundDrawablesWithIntrinsicBounds(0,0,R.mipmap.ic_remark,0);
+        else
+            view.setCompoundDrawablesWithIntrinsicBounds(0,0,R.mipmap.ic_remark_have,0);
+        view.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                showRemarkInputDialog(view.getContext(),item);
+            }
+        });
+        TextView title=curView.findViewById(R.id.check_Title);
+        currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+        title.setText(item.getCheck_TitleId()+":"+item.getCheck_Title());
+    }
+
+
+    /**
+     * 显示温度输入对话框
+     */
+    private void showTempInputDialog(Context context, final SpotCheckItem item) {
+        new MaterialDialog.Builder(context)
+                .iconRes(R.mipmap.ic_temp_left)
+                .inputType(InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_DECIMAL)
+                .title("现在温度")
+                .input("填写温度", item.getTemperature(), new MaterialDialog.InputCallback() {
+                    @Override
+                    public void onInput(@NonNull MaterialDialog dialog, CharSequence input) {
+                        if(TextUtils.isEmpty(input))
+                        {
+                            showToast("需填写内容");
+                        }
+                        else
+                        {
+                            showLog("你做的是:"+input);
+                            if(item.getItemType()==SpotCheckItem.TYPE_TEMPERATURE)
+                                item.setChecked(true);
+                            else
+                            {
+                                if(!TextUtils.isEmpty(item.getCoolTime())
+                                        &&!TextUtils.isEmpty(item.getCycleTime()))
+                                    item.setChecked(true);
+                            }
+                            item.setTemperature(input+"");
+                            currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+                            spotCheckItems.set(currPosition,item);
+                            showLog(currPosition+">"+item.toString());
+                            scanListener.freshViewPager();
+                            dialog.cancel();
+                            if(item.isChecked())
+                                scanListener.focusOnBarCodeEdit();
+                        }
+                    }})
+                .autoDismiss(false)
+                .show();
+    }
+
+    /**
+     * 显示周期时间输入框
+     */
+    private void showCycleTimeDialog(Context context, final SpotCheckItem item) {
+        new MaterialDialog.Builder(context)
+                .iconRes(R.mipmap.ic_cycletime_left)
+                .title("周期时间")
+                .inputType(InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_DECIMAL)
+                .input("填写时间/S", item.getCycleTime(), new MaterialDialog.InputCallback() {
+                    @Override
+                    public void onInput(@NonNull MaterialDialog dialog, CharSequence input) {
+                        if(TextUtils.isEmpty(input))
+                        {
+                            showToast("需填写内容");
+                        }
+                        else
+                        {
+                            if(!TextUtils.isEmpty(item.getTemperature())
+                                    &&!TextUtils.isEmpty(item.getCoolTime()))
+                                item.setChecked(true);
+                            showLog("你做的是:"+input);
+                            item.setCycleTime(input+"");
+                            currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+                            spotCheckItems.set(currPosition,item);
+                            scanListener.freshViewPager();
+                            dialog.cancel();
+                            if(item.isChecked())
+                                scanListener.focusOnBarCodeEdit();
+                        }
+                    }})
+                .autoDismiss(false)
+                .show();
+    }
+
+    /**
+     * 显示冷却时间对话框
+     */
+    private void showCoolTimeDialog(Context context, final SpotCheckItem item) {
+        new MaterialDialog.Builder(context)
+                .iconRes(R.mipmap.ic_cooltime_left)
+                .title("冷却时间")
+                .inputType(InputType.TYPE_CLASS_NUMBER|InputType.TYPE_NUMBER_FLAG_DECIMAL)
+                .input("填写时间/S", item.getCoolTime(), new MaterialDialog.InputCallback() {
+                    @Override
+                    public void onInput(@NonNull MaterialDialog dialog, CharSequence input) {
+                        if(TextUtils.isEmpty(input))
+                        {
+                            showToast("需填写内容");
+                        }
+                        else
+                        {
+                            if(!TextUtils.isEmpty(item.getTemperature())
+                                    &&!TextUtils.isEmpty(item.getCycleTime()))
+                                item.setChecked(true);
+                            showLog("你做的是:"+input);
+                            item.setCoolTime(input+"");
+                            item.setChecked(true);
+                            currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+                            spotCheckItems.set(currPosition,item);
+                            scanListener.freshViewPager();
+                            dialog.cancel();
+                            if(item.isChecked())
+                                scanListener.focusOnBarCodeEdit();
+                        }
+                    }})
+                .autoDismiss(false)
+                .show();
+    }
+
+    /**
+     * 显示备注输入对话框
+     */
+    private void showRemarkInputDialog(Context context, final SpotCheckItem item)
+    {
+        AlertDialog.Builder builder
+                =new AlertDialog.Builder(context);
+        builder.setTitle("备注内容");
+        builder.setIcon(R.mipmap.ic_remark);
+        AlertDialog dialog=builder.create();
+        View view= LayoutInflater.from(context).inflate(R.layout.dialog_remarkcontent, null);
+        final EditText editText= (EditText)view.findViewById(R.id.dialog_input);
+        dialog.setView(view);
+        if(editText!=null)
+        {
+            editText.setText(item.getRemark_content());
+            editText.setSelection(item.getRemark_content().length());
+        }
+        dialog.setButton(DialogInterface.BUTTON_POSITIVE, "确定",
+                new DialogInterface.OnClickListener() {
+                    @Override
+                    public void onClick(DialogInterface dialogInterface, int i) {
+                        CharSequence charSequence=editText.getText();
+                        if(TextUtils.isEmpty(charSequence))
+                            charSequence="";
+                        item.setRemark_content(charSequence+"");
+                        currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+                        spotCheckItems.set(currPosition,item);
+                        scanListener.freshViewPager();
+                    }
+                });
+        dialog.setOnCancelListener(new DialogInterface.OnCancelListener() {
+            @Override
+            public void onCancel(DialogInterface dialogInterface) {
+                CharSequence charSequence=editText.getText();
+                if(TextUtils.isEmpty(charSequence))
+                    charSequence="";
+                item.setRemark_content(charSequence+"");
+                currPosition=Integer.valueOf(item.getCheck_TitleId())-1;
+                spotCheckItems.set(currPosition,item);
+                scanListener.freshViewPager();
+            }
+        });
+        dialog.show();
+        editText.requestFocus();
+    }
+
+    /**
+     * 目前扫描进入这一条
+     * @param i
+     */
+    public void setScanItem(int i) {
+        showLog("setScanItem:"+i);
+        if(spotCheckItems==null)
+        {
+            showLog("没有检查条目清单");
+        }
+        //获取未跳转时的ITEM信息
+        if(currPosition!=-1)
+        {
+            currPosition=scanListener.getCurrentItem();
+            SpotCheckItem curItem=spotCheckItems.get(currPosition);
+            showLog("currPosition:"+currPosition+">"+curItem.toString());
+            if(!curItem.isChecked())
+                {
+                    showToast("请填写必填项如温度/冷却时间/周期时间");
+                    return;
+                }
+        }
+        try
+        {
+            SpotCheckItem item=spotCheckItems.get(i);
+            if(item.getItemType()==SpotCheckItem.TYPE_ONLYHAVE
+                    ||item.getItemType()==SpotCheckItem.TYPE_LOG_DATE)
+            {
+                item.setChecked(true);
+                showLog(i+">更新:"+spotCheckItems.get(i).isChecked());
+            }
+            scanListener.switchToItem(i);
+            scanListener.showViewPager();
+            scanListener.clearBarCodeEdit();
+            setCurrPosition(i);
+        } catch (Exception e) {
+            showToast("没有该点检条目");
+            e.printStackTrace();
+        }
+    }
+
+
+    public interface ScanListener
+    {
+        void switchToItem(int position);
+        void setScanOverLister(PIViewPagerAdapter.ScanOverListener lister);
+        /**
+         * 获取条码框录入的文本
+         * @return
+         */
+        CharSequence getScanedBarCode();
+        Context getContext();
+        void requestDeviceInfo(String barCode);
+        void showViewPager();
+        int getCurrentItem();
+        void freshViewPager();
+        String getDeviceBarCode();
+        /**
+         * 点检下一个
+         */
+        void spotCheckNext();
+        void clearBarCodeEdit();
+        void focusOnBarCodeEdit();
+    }
+
+
+    public List<SpotCheckItem> getSpotCheckItems() {
+        return spotCheckItems;
+    }
+
+    public void setSpotCheckItems(List<SpotCheckItem> spotCheckItems) {
+        this.spotCheckItems = spotCheckItems;
+    }
+
+
+    public void setCurrPosition(int currPosition) {
+        this.currPosition = currPosition;
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/presenter/RepairDetailPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/presenter/RepairDetailPresenter.java	(date 1576829482076)
+++ app/src/main/java/com/furja/devicemanager/presenter/RepairDetailPresenter.java	(date 1576829482076)
@@ -0,0 +1,165 @@
+package com.furja.devicemanager.presenter;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.view.View;
+
+import com.alibaba.fastjson.JSON;
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.RepairProjectItem;
+import com.furja.devicemanager.utils.JSONParser;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import java.util.Collections;
+import java.util.List;
+
+import okhttp3.Call;
+
+import static com.furja.devicemanager.utils.Constants.FURJA_GET_REPAIRPROJECT;
+import static com.furja.devicemanager.utils.Constants.KEY_PROJECT_ITEMS;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * 连接RepairFragment的桥
+ */
+public class RepairDetailPresenter {
+    private RepairFragmentView repairView;
+    private List<RepairProjectItem> repairProjectItems;
+    RepairItemAdapter repairItemAdapter;
+    String repairWOID;
+    public RepairDetailPresenter(RepairFragmentView view)
+    {
+        this.repairView=view;
+        repairItemAdapter=new RepairItemAdapter(R.layout.repair_short_item);
+        repairView.setRecyclerAdapter(repairItemAdapter);
+        repairItemAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {
+            @Override
+            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {
+                showLog("Item的Click");
+                Intent intent
+                        =new Intent();
+                if(repairProjectItems!=null
+                        &&!repairProjectItems.isEmpty())
+                {
+                    intent.putExtra(KEY_PROJECT_ITEMS,JSON.toJSONString(repairProjectItems));
+                }
+                intent.setData(Uri.parse("editRepairItem:"+position));
+                repairView.switchActivity(intent);
+            }
+        });
+        repairView.addTextWatcher(new TextWatcherListener());
+    }
+
+    /**
+     * 获取维修项目列表,主要获取维修项目的名称显示
+     */
+    public void requestProjectItems() {
+        OkHttpUtils
+                .get()
+                .url(FURJA_GET_REPAIRPROJECT)
+                .addParams("WOID",repairWOID)
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+
+                    }
+
+                    @Override
+                    public void onResponse(String s, int i) {
+                        try {
+                            s= JSONParser.parserArray(s);
+                            repairProjectItems=
+                                    JSON.parseArray(s,RepairProjectItem.class);
+                            if(repairProjectItems!=null
+                                    &&!repairProjectItems.isEmpty())
+                            {
+                                showLog("获取内容:"+JSON.toJSONString(repairProjectItems));
+                                repairItemAdapter.setNewData(repairProjectItems);
+                            }
+                            else
+                            {
+                                showToast("该维修单没有录入维修项目");
+                            }
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            repairItemAdapter.setNewData(Collections.<RepairProjectItem>emptyList());
+                            showToast("该维修单没有录入维修项目");
+                        }
+                    }
+                });
+    }
+
+
+    public List<RepairProjectItem> getRepairProjectItems() {
+        return repairProjectItems;
+    }
+
+    public void setRepairProjectItems(List<RepairProjectItem> repairProjectItems) {
+        this.repairProjectItems = repairProjectItems;
+    }
+
+
+    /**
+     * 维修项目适配器
+     */
+    public class RepairItemAdapter extends BaseQuickAdapter<RepairProjectItem, BaseViewHolder> {
+
+
+        public RepairItemAdapter(int layoutResId) {
+            super(layoutResId);        }
+
+        @Override
+        protected void convert(BaseViewHolder helper, RepairProjectItem item) {
+            helper.setText(R.id.item_title,item.getFProjectName());
+        }
+    }
+
+    public class TextWatcherListener implements TextWatcher
+    {
+
+        @Override
+        public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
+
+        }
+
+        @Override
+        public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
+
+        }
+
+        @Override
+        public void afterTextChanged(Editable editable) {
+            repairView.setUploadEnableOrNot();
+        }
+    }
+
+    public String getRepairWOID() {
+        return repairWOID;
+    }
+
+    /**
+     * 设置维修工单ID和请求维修项目
+     * @param repairWOID
+     */
+    public void setRepairWOID(String repairWOID) {
+        this.repairWOID = repairWOID;
+        requestProjectItems();
+    }
+
+    public interface RepairFragmentView
+    {
+        void setUploadEnableOrNot();
+        boolean isCatched();
+        int getRepairState();
+        void setRecyclerAdapter(RepairItemAdapter adapter);
+        void switchActivity(Intent intent);
+        void addTextWatcher(TextWatcher textWatcher);
+    }
+}
Index: app/src/main/java/com/furja/fixturemanager/beans/Fixture.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/fixturemanager/beans/Fixture.java	(date 1538813710000)
+++ app/src/main/java/com/furja/fixturemanager/beans/Fixture.java	(date 1538813710000)
@@ -0,0 +1,8 @@
+package com.furja.fixturemanager.beans;
+
+/**
+ * 工装夹具
+ */
+public class Fixture {
+
+}
Index: app/src/main/java/com/furja/fixturemanager/ui/WorkFixActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/fixturemanager/ui/WorkFixActivity.java	(date 1576286946981)
+++ app/src/main/java/com/furja/fixturemanager/ui/WorkFixActivity.java	(date 1576286946981)
@@ -0,0 +1,36 @@
+package com.furja.fixturemanager.ui;
+
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.AppCompatEditText;
+import com.furja.overall.R;
+import com.furja.utils.TextInputListener;
+import com.furja.fixturemanager.contract.WorkFixContract;
+import com.furja.fixturemanager.presenter.WorkFixPresenter;
+import butterknife.BindView;
+import butterknife.ButterKnife;
+
+/**
+ * 工装管理模块
+ */
+public class WorkFixActivity extends AppCompatActivity implements WorkFixContract.View {
+    @BindView(R.id.edit_barCode)
+    AppCompatEditText edit_barCode;
+    WorkFixPresenter workFixPresenter;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_workfix);
+        ButterKnife.bind(this);
+        setInputListener();
+        workFixPresenter=new WorkFixPresenter();
+    }
+
+    private void setInputListener() {
+        TextInputListener listener=new TextInputListener();
+        edit_barCode.setOnKeyListener(listener);
+        edit_barCode.setOnEditorActionListener(listener);
+    }
+
+}
Index: app/src/main/java/com/furja/fixturemanager/contract/WorkFixContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/fixturemanager/contract/WorkFixContract.java	(date 1538813710000)
+++ app/src/main/java/com/furja/fixturemanager/contract/WorkFixContract.java	(date 1538813710000)
@@ -0,0 +1,15 @@
+package com.furja.fixturemanager.contract;
+
+public interface WorkFixContract {
+    interface Model {
+
+    }
+
+    interface View {
+
+    }
+
+    interface Presenter {
+
+    }
+}
Index: app/src/main/java/com/furja/fixturemanager/model/WorkFixModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/fixturemanager/model/WorkFixModel.java	(date 1538813710000)
+++ app/src/main/java/com/furja/fixturemanager/model/WorkFixModel.java	(date 1538813710000)
@@ -0,0 +1,6 @@
+package com.furja.fixturemanager.model;
+
+import com.furja.fixturemanager.contract.WorkFixContract;
+
+public class WorkFixModel implements WorkFixContract.Model {
+}
Index: app/src/main/java/com/furja/fixturemanager/presenter/WorkFixPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/fixturemanager/presenter/WorkFixPresenter.java	(date 1576286948037)
+++ app/src/main/java/com/furja/fixturemanager/presenter/WorkFixPresenter.java	(date 1576286948037)
@@ -0,0 +1,33 @@
+package com.furja.fixturemanager.presenter;
+
+import com.furja.utils.SharpBus;
+import com.furja.utils.TextInputListener;
+import com.furja.fixturemanager.contract.WorkFixContract;
+
+import static com.furja.utils.Constants.TAG_SCAN_BARCODE;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+public class WorkFixPresenter implements WorkFixContract.Presenter {
+    SharpBus sharpBus=SharpBus.getInstance();
+    public WorkFixPresenter()
+    {
+
+        sharpBus.register(TAG_SCAN_BARCODE,String.class)
+                .subscribe((scanString->{
+                    if(scanString.contains(TextInputListener.INPUT_ERROR))
+                        showToast(scanString);
+                    else
+                        showLog("收到:"+scanString);
+                }));
+    }
+
+    /**
+     *
+     * @param fixtureNumber
+     */
+    private void acquireFixture(String fixtureNumber)
+    {
+
+    }
+}
Index: app/src/main/java/com/furja/overall/ui/BadLogActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/BadLogActivity.java	(date 1576461050978)
+++ app/src/main/java/com/furja/overall/ui/BadLogActivity.java	(date 1576461050978)
@@ -0,0 +1,260 @@
+package com.furja.overall.ui;
+
+import android.content.Intent;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentTransaction;
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.view.Menu;
+import android.view.MenuItem;
+import android.widget.BaseAdapter;
+import android.widget.ListView;
+
+
+import com.furja.overall.FurjaApp;
+import com.furja.overall.R;
+import com.furja.common.Preferences;
+import com.furja.overall.contract.WorkOrderContract;
+import com.furja.common.BaseFragment;
+import com.furja.overall.fragment.LogBadWithBtnFragment;
+import com.furja.overall.fragment.LogBadWithKeyFragment;
+import com.furja.overall.presenter.WorkOrderPresenter;
+import com.furja.utils.SharpBus;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import io.reactivex.Observer;
+import io.reactivex.disposables.Disposable;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Constants.BADLOG_FRAGMENT_INITFINISH;
+import static com.furja.utils.Constants.RESET_CONFIG;
+import static com.furja.utils.Constants.TYPE_BADLOG_EMPTY;
+import static com.furja.utils.Constants.TYPE_BADLOG_WITHKEY;
+import static com.furja.utils.Constants.UPDATE_BAD_COUNT;
+
+
+/**
+ * 记录异常类型的活动
+ */
+
+public class BadLogActivity extends AppCompatActivity implements WorkOrderContract.View {
+    private BaseFragment tempFragment;
+    private FragmentManager fm;
+    //工单信息ListView与数据交互使用的presenter
+    private WorkOrderPresenter mWorkOrderPresenter;
+    @BindView(R.id.workinfo_list)
+    ListView workinfoList;
+    private LogBadWithBtnFragment logBadWithBtnFragment;
+    private LogBadWithKeyFragment logBadWithKeyFragment;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_defectivelog);
+        ButterKnife.bind(this);
+        fm=getSupportFragmentManager();
+
+        logBadWithBtnFragment =new LogBadWithBtnFragment();
+        logBadWithKeyFragment =new LogBadWithKeyFragment();
+
+        initMvpUnit();
+        if(Preferences.getSourceType()!=TYPE_BADLOG_WITHKEY)
+            transferFragment(logBadWithBtnFragment,"TYPE_BADLOG_WITHBTN");
+        else
+            transferFragment(logBadWithKeyFragment,"TYPE_BADLOG_WITHKEY");
+
+    }
+
+
+    private void initMvpUnit() {
+        mWorkOrderPresenter=new WorkOrderPresenter(this);
+        //将工单信息传入 录入 显示品质异常button的视图
+        SharpBus sharpBus= SharpBus.getInstance();
+        sharpBus.register(BADLOG_FRAGMENT_INITFINISH)
+          .subscribe(new Observer<Object>() {
+              @Override
+              public void onSubscribe(Disposable d) {
+
+              }
+
+              @Override
+              public void onNext(Object value) {
+                  showLog(getClass()+"->收到了"+value.toString());
+                  syncAndUpdateBadData();
+              }
+
+              @Override
+              public void onError(Throwable e) {
+              }
+
+              @Override
+              public void onComplete() {
+
+              }
+          });
+
+    }
+
+    /**
+     * 切换Fragment
+     * @param to
+     * @param tag
+     */
+    private void transferFragment(BaseFragment to,String tag) {
+        BaseFragment from=tempFragment;
+        FragmentTransaction fts = fm.beginTransaction();
+        if(from!=null)
+        {
+            if(from==to)
+                return;
+            fts.hide(from).commit();
+        }
+        this.tempFragment=to;
+        showFragment(to, tag);
+    }
+
+    /**
+     * 显示Fragment
+     * @param to
+     * @param tag
+     */
+    private void showFragment(BaseFragment to,String tag) {
+        FragmentTransaction fts = fm.beginTransaction();
+        if(to.isAdded())
+        {
+            fts.show(to);
+        }
+        else
+        {
+            fts.add(R.id.button_frame, to,tag);
+        }
+        fts.commit();
+    }
+
+    /**
+     * 设置工单信息适配器并设置监听模块录入特定信息
+     * @param baseAdapter
+     */
+    @Override
+    public void setListAdapter(BaseAdapter baseAdapter) {
+        workinfoList.setAdapter(baseAdapter);
+        workinfoList.setItemsCanFocus(true);
+    }
+
+    @Override
+    public ListView getAdapterView() {
+        return workinfoList;
+    }
+
+
+
+    /**
+     * 以新录入的数据更新
+     * 显示品质异常button的视图
+     */
+    @Override
+    public void syncAndUpdateBadData()
+    {
+        if(Preferences.getSourceType()!=TYPE_BADLOG_WITHKEY)
+            logBadWithBtnFragment.syncAndUpdateBtnBadData(
+                    mWorkOrderPresenter.getWorkOrderInfo());
+        else
+            logBadWithKeyFragment.syncAndUpdateKeyBadData
+                    (mWorkOrderPresenter.getWorkOrderInfo());
+    }
+
+    @Override
+    public void setSelection(int position) {
+        workinfoList.setSelection(position);
+    }
+
+    @Override
+    public void requestFocus() {
+        workinfoList.requestFocus();
+    }
+
+    @Override
+    public void clearFocus() {
+        workinfoList.clearFocus();
+    }
+
+    @Override
+    public void onBackPress() {
+        onBackPressed();
+    }
+
+    /**
+     * 销毁Activity时注销SharpBus
+     */
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        SharpBus sharpBus=SharpBus.getInstance();
+        sharpBus.unregister(BADLOG_FRAGMENT_INITFINISH);
+        sharpBus.unregister(UPDATE_BAD_COUNT);
+    }
+
+
+
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        // Inflate the menu; this adds items to the action bar if it is present.
+        getMenuInflater()
+			.inflate(R.menu.menu_badlog, menu);
+
+        return true;
+    }
+
+
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+
+        int id = item.getItemId();
+        //noinspection SimplifiableIfStatement
+        if (id == R.id.action_logOut)
+        {
+            syncAndUpdateBadData();
+            Preferences.saveAutoLogin(false);
+            FurjaApp.getInstance().setUserAndSave(null);
+            toLogin();
+        }
+        else if(id==R.id.action_switchScene)
+        {   //切换工作场景的
+            syncAndUpdateBadData();
+            Preferences.saveSourceType(""+TYPE_BADLOG_EMPTY);
+            toLogin();
+        }
+        if(id==R.id.action_resetConfig)
+        {
+            syncAndUpdateBadData();
+            Intent intent=new Intent(this,SplashActivity.class);
+            intent.setAction(RESET_CONFIG);
+            startActivity(intent);
+            finish();
+        }
+        else if(id==R.id.action_viewReport)
+        {
+            Intent intent=new Intent(this,ChartActivity.class);
+            startActivity(intent);
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    private void toLogin() {
+        Intent intent=new Intent(this,LoginActivity.class);
+        startActivity(intent);
+        finish();
+    }
+
+
+    @Override
+    public void onBackPressed() {
+        showLog("你按了:"+"onBackPressed");
+        syncAndUpdateBadData();
+        super.onBackPressed();
+    }
+
+}
Index: app/src/main/java/com/furja/overall/ui/WebSurfActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/WebSurfActivity.java	(date 1576657050448)
+++ app/src/main/java/com/furja/overall/ui/WebSurfActivity.java	(date 1576657050448)
@@ -0,0 +1,59 @@
+package com.furja.overall.ui;
+
+import android.content.Intent;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+
+import android.text.TextUtils;
+import android.view.ViewGroup;
+import android.webkit.WebView;
+import android.widget.LinearLayout;
+
+import com.furja.overall.R;
+import com.just.agentweb.AgentWeb;
+import com.just.agentweb.DefaultWebClient;
+
+import static com.furja.utils.Constants.EXTRA_WEBVIEW_TITLE;
+import static com.furja.utils.Constants.EXTRA_WEBVIEW_URL;
+
+public class WebSurfActivity extends BaseActivity {
+    AgentWeb mAgentWeb;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.layout_websurf);
+        analyseIntent();
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+    }
+
+    private void analyseIntent() {
+        Intent intent=getIntent();
+        String url="";
+        if(intent!=null) {
+            url = intent.getStringExtra(EXTRA_WEBVIEW_URL);
+            String title=intent.getStringExtra(EXTRA_WEBVIEW_TITLE);
+            if(!TextUtils.isEmpty(title))
+                setTitle(title);
+        }
+        LinearLayout linearLayout=findViewById(R.id.linear_layout);
+        if(TextUtils.isEmpty(url))
+            url="http://192.168.8.46:8378";
+        mAgentWeb = AgentWeb.with(this)//
+                .setAgentWebParent((LinearLayout) linearLayout, -1, new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT))//传入AgentWeb的父控件。
+                .useDefaultIndicator(-1, 2)//设置进度条颜色与高度，-1为默认值，高度为2，单位为dp。
+                .setMainFrameErrorView(R.layout.agentweb_error_page, -1)
+                .setOpenOtherPageWays(DefaultWebClient.OpenOtherPageWays.DISALLOW)
+                .interceptUnkownUrl()
+                .createAgentWeb()
+                .ready()
+                .go(url);
+    }
+
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        if(mAgentWeb!=null)
+            mAgentWeb.destroy();
+    }
+}
Index: app/src/main/java/com/furja/overall/ui/BaseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/BaseActivity.java	(date 1577003403391)
+++ app/src/main/java/com/furja/overall/ui/BaseActivity.java	(date 1577003403391)
@@ -0,0 +1,243 @@
+package com.furja.overall.ui;
+
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.text.TextUtils;
+import android.util.DisplayMetrics;
+import android.view.KeyEvent;
+import android.view.MenuItem;
+import android.view.MotionEvent;
+import android.view.WindowManager;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.alibaba.fastjson.JSON;
+import com.furja.common.CloudUserWithOrg;
+import com.furja.common.Preferences;
+import com.furja.common.User;
+import com.furja.overall.FurjaApp;
+import com.furja.utils.RetrofitBuilder;
+import com.furja.utils.RetrofitHelper;
+import com.furja.utils.RetryWhenUtils;
+
+import java.util.List;
+
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.schedulers.Schedulers;
+
+import static android.view.KeyEvent.KEYCODE_F7;
+import static com.furja.utils.Constants.INTERNET_ABNORMAL;
+import static com.furja.utils.Constants.VERTX_TEST_URL;
+import static com.furja.utils.Constants.getVertxUrl;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ *基础Activity,手势控制 返回
+ */
+
+public class BaseActivity extends AppCompatActivity {
+    private static Object TAG_MARGIN_ADDED="TAG_MARGIN_ADDED";
+    float lastY,lastX;
+    int screenY;
+    int screenX;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if(!isFisrtStart())
+            return;
+        screenX=getScreenWidth();
+        screenY=getScreenHeight();
+    }
+
+    /**
+     * 更改系统状态栏颜色
+     */
+    public void changeStatusColor() {
+    }
+
+    public  int getScreenWidth() {
+        WindowManager wm = (WindowManager) this
+                .getSystemService(Context.WINDOW_SERVICE);
+        DisplayMetrics outMetrics = new DisplayMetrics();
+        wm.getDefaultDisplay().getMetrics(outMetrics);
+        return outMetrics.widthPixels; //横屏时使用高度
+    }
+
+    public  int getScreenHeight() {
+        WindowManager wm = (WindowManager) this
+                .getSystemService(Context.WINDOW_SERVICE);
+        DisplayMetrics outMetrics = new DisplayMetrics();
+        wm.getDefaultDisplay().getMetrics(outMetrics);
+        return outMetrics.heightPixels; //横屏时使用高度
+    }
+
+    /**
+     * 静默登录
+     */
+    public void silentLogin(){
+        if(FurjaApp.getUser()==null) {
+            String password = Preferences.getPassword();
+            String username = Preferences.getUsername();
+            if (!TextUtils.isEmpty(username))
+                login(username, password);
+            else
+                jumpToLogin();
+        }
+    }
+
+
+    public  void login(String userName, String password) {
+        RetrofitHelper helper= RetrofitBuilder.getHelperByUrl(getVertxUrl());
+        helper.login(userName,password)
+                .subscribeOn(Schedulers.io())
+                .retryWhen(RetryWhenUtils.create())
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(response->{
+                    if(response.getCode()>0){
+                        User user =new User(userName,password);
+                        showLog(JSON.toJSONString(user)+"->登录成功");
+                        String result=response.getResult();
+                        if(!TextUtils.isEmpty(result)) {
+                            try {
+                                List<CloudUserWithOrg> data=JSON.parseArray(result,CloudUserWithOrg.class);
+                                user.setData(data);
+                            } catch (Exception e) { }
+                        }
+                        FurjaApp.setUserAndSave(user);
+                        Preferences.saveAutoLogin(true);
+                        switchToHome();
+                    }
+                    else {
+                        showToast(response.getResult());
+                        jumpToLogin();
+                    }
+                },error->{
+                    showToast(INTERNET_ABNORMAL);
+                    jumpToLogin();
+                });
+    }
+
+    protected void jumpToLogin(){
+        if(this instanceof LoginActivity)
+            resumeView();
+        else {
+            Intent intent= new Intent(this,LoginActivity.class);
+            startActivity(intent);
+            finish();
+        }
+    }
+
+    protected void resumeView() {
+    }
+
+    protected void switchToHome() {
+
+    }
+
+    /**
+     * 是否是第一次启动,如果不是直接finish
+     */
+    protected boolean isFisrtStart() {
+        if (!this.isTaskRoot()) {   // 判断当前activity是不是所在任务栈的根
+            Intent intent = getIntent();
+            if (intent != null) {
+                String action = intent.getAction(); //因为重新配置数据时会跳转至这一界面故判断action
+                if (Intent.ACTION_MAIN.equals(action)) {
+                    showLog("任务栈根");
+                    finish();
+                    return false;
+                }
+            }
+        }
+        return true;
+    }
+
+    @Override
+    public void finish() {
+        super.finish();
+        overridePendingTransition(0,0);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if(item.getItemId()==android.R.id.home) {
+            onBackPressed();
+            return true;
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+    }
+
+    @Override
+    public boolean dispatchTouchEvent(MotionEvent motionEvent) {
+        int action = motionEvent.getAction();
+        int offsetX=this.screenX/3;
+        int offsetY=this.screenY/3;
+        switch (action) {
+            case MotionEvent.ACTION_DOWN:
+                lastY = motionEvent.getY();
+                lastX = motionEvent.getX();
+                break;
+            case MotionEvent.ACTION_UP:
+            case MotionEvent.ACTION_CANCEL:
+                float currY = motionEvent.getY();
+                float currX = motionEvent.getX();
+                if(lastY-currY>screenY/4){
+                    if(screenY-lastY<100){
+                        showSheetDialog();
+                        return true;
+                    }else if(lastY - currY > offsetY){
+                        pageDown();
+                        return super.dispatchTouchEvent(motionEvent);
+                    }
+                }
+                else if (currY - lastY > offsetY) {
+                    pageUp();
+                    return super.dispatchTouchEvent(motionEvent);
+                } else if(currX-lastX>offsetX){
+                    onBackPressed();
+                    return true;
+                }
+                break;
+        }
+        return super.dispatchTouchEvent(motionEvent);
+    }
+
+    @Override
+    public boolean dispatchKeyEvent(KeyEvent event) {
+        if(event!=null) {
+            int keyCode = event.getKeyCode();
+            if(keyCode == KeyEvent.KEYCODE_BRIGHTNESS_DOWN
+                    || keyCode == KeyEvent.KEYCODE_BRIGHTNESS_UP
+                    || keyCode == KEYCODE_F7) {
+                focusBarCode();
+                return true;
+            }
+        }
+        return super.dispatchKeyEvent(event);
+    }
+
+    protected void focusBarCode() {
+    }
+
+    protected void pageDown(){
+
+    }
+
+    protected void pageUp(){
+
+    }
+
+    protected void showSheetDialog() {
+
+    }
+}
+
+
Index: app/src/main/java/com/furja/overall/ui/SplashActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/SplashActivity.java	(date 1576294190504)
+++ app/src/main/java/com/furja/overall/ui/SplashActivity.java	(date 1576294190504)
@@ -0,0 +1,173 @@
+package com.furja.overall.ui;
+
+import android.content.Intent;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import android.text.TextUtils;
+import android.view.View;
+import android.view.animation.Animation;
+import android.view.animation.AnimationUtils;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.furja.overall.FurjaApp;
+import com.furja.overall.R;
+import com.furja.common.Preferences;
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+import com.furja.utils.Utils;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import io.reactivex.Observer;
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.disposables.Disposable;
+
+/**
+ * 启动配置页
+ */
+
+public class SplashActivity extends BaseActivity {
+    @BindView(R.id.image_setting_splash)
+    ImageView image_Setting;
+    @BindView(R.id.splash_operatorLabel)
+    TextView loadingLabel;
+    @BindView(R.id.splash_startLoginBtn)
+    Button startLoginBtn;
+    @BindView(R.id.splash_switchOperatorBtn)
+    Button switchOperatorBtn;
+    int callCount=0;
+    boolean isResetConfig;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_splash);
+        ButterKnife.bind(this);
+
+        Intent fromIntent=getIntent();
+        isResetConfig =false;
+        if(fromIntent!=null)
+        {
+            if(!TextUtils.isEmpty(fromIntent.getAction())
+                    &&fromIntent.getAction().equals(Constants.RESET_CONFIG))
+                isResetConfig =true;
+        }
+        Utils.showLog("isReset:->"+isResetConfig);
+        if(!isResetConfig)
+        {
+//            checkFisrtStart();
+            if(FurjaApp.getUser()!=null)
+            {
+                if(Preferences.getSourceType()!= Constants.TYPE_BADLOG_EMPTY)
+                {
+                    Utils.showLog(getClass()+"阻止不了我去LogBad");
+                    toLogBad();
+                }
+            }
+
+        }
+        else
+        {
+            Utils.showLog("重置配置");
+            syncLogConfigAndLogin();
+        }
+
+    }
+
+    /**
+     * 是否是第一次启动,如果不是直接finish
+     */
+    private void checkFisrtStart() {
+        if (!this.isTaskRoot()) { // 判断当前activity是不是所在任务栈的根
+            Intent intent = getIntent();
+            if (intent != null) {
+                String action = intent.getAction();
+                if (intent.hasCategory(Intent.CATEGORY_LAUNCHER) && Intent.ACTION_MAIN.equals(action)) {
+                    finish();
+                }
+            }
+        }
+    }
+
+    /**
+     * 从服务器同步异常类型配置至本地数据库
+     */
+    private void syncLogConfigAndLogin() {
+        rotateSettingImage();
+        SharpBus.getInstance().register(Constants.SYNCOVER_BADTYPE_CONFIG)
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Observer<Object>() {
+                    @Override
+                    public void onSubscribe(Disposable d) {
+
+                    }
+
+                    @Override
+                    public void onNext(Object value) {
+                        Utils.showLog(getClass()+"->"+value.toString());
+                        if(value.toString().contains("true"))
+                        {
+                            callCount=0;
+                            image_Setting.clearAnimation();
+                            loadingLabel.setVisibility(View.GONE);
+                            toLogBad();
+                        }
+                        else
+                        {
+                            callCount++;
+                            if(callCount<3)
+                                Utils.syncBadTypeConfig(isResetConfig);
+                            else
+                            {
+                                image_Setting.clearAnimation();
+                                loadingLabel.setVisibility(View.GONE);
+                                toLogBad();
+                            }
+                        }
+                    }
+
+                    @Override
+                    public void onError(Throwable e) {
+
+                    }
+
+                    @Override
+                    public void onComplete() {
+
+                    }
+                });
+        Utils.syncBadTypeConfig(isResetConfig);
+    }
+
+    /**
+     * 旋转Setting的 ImageView
+     */
+    private void rotateSettingImage() {
+        Animation circle_anim = AnimationUtils.loadAnimation(this, R.anim.anim_round_rotate);
+        if (circle_anim != null) {
+            image_Setting.startAnimation(circle_anim);  //开始动画
+        }
+    }
+
+    /**
+     * 跳转至记录异常的界面
+     */
+    private void toLogBad() {
+        Intent intent
+                =new Intent(SplashActivity.this, BadLogActivity.class);
+        startActivity(intent);
+        finish();
+    }
+
+    /**
+     * 跳转页面登录
+     */
+    private void switchToLogin() {
+        Intent intent
+                =new Intent(SplashActivity.this, LoginActivity.class);
+        startActivity(intent);
+        finish();
+    }
+
+}
Index: app/src/main/java/com/furja/overall/json/LoginJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/LoginJson.java	(date 1576067818483)
+++ app/src/main/java/com/furja/overall/json/LoginJson.java	(date 1576067818483)
@@ -0,0 +1,25 @@
+package com.furja.overall.json;
+
+/**
+ * 登录后反馈的字符串
+ */
+
+public class LoginJson {
+
+    /**
+     * LoginInfo : 16396,1,1,1,1,1,1,1,1,1,1
+     */
+    private String LoginInfo;
+
+    public String getLoginInfo() {
+        return LoginInfo;
+    }
+
+    public void setLoginInfo(String LoginInfo) {
+        this.LoginInfo = LoginInfo;
+    }
+    public LoginJson()
+    {
+
+    }
+}
Index: app/src/main/java/com/furja/overall/json/MaterialJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/MaterialJson.java	(date 1576067823544)
+++ app/src/main/java/com/furja/overall/json/MaterialJson.java	(date 1576067823544)
@@ -0,0 +1,188 @@
+package com.furja.overall.json;
+
+import android.text.TextUtils;
+
+
+/**
+ * 根据成品的条码获取
+ */
+
+public class MaterialJson {
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 条码信息获取成功!
+     * ErrData : {"FBCDate":"2017-09-12T08:08:57","FItemID":"140908","FNumber":"3.020.702.0251000201","FShortNumber":"0251000201","FName":"IR101吸尘器","FModel":"EB1","FQty":0,"FTranType":"成品","FSCDNO":"170727-720","FBatteryBarCodeNO1":"http://www.registeryourshark.com/reg/?m=XBAT200&s=S22FA115J2K5","FBatteryBarCodeNO2":""}
+     */
+
+    private int ErrCode;
+    private String ErrMsg;
+    private ErrDataBean ErrData;
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public String getErrMsg() {
+        return ErrMsg;
+    }
+
+    public void setErrMsg(String ErrMsg) {
+        this.ErrMsg = ErrMsg;
+    }
+
+    public ErrDataBean getErrData() {
+        return ErrData;
+    }
+
+    public void setErrData(ErrDataBean ErrData) {
+        this.ErrData = ErrData;
+    }
+
+    public static class ErrDataBean {
+        /**
+         * FBCDate : 2017-09-12T08:08:57
+         * FItemID : 140908
+         * FNumber : 3.020.702.0251000201
+         * FShortNumber : 0251000201
+         * FName : IR101吸尘器
+         * FModel : EB1
+         * FQty : 0
+         * FTranType : 成品
+         * FSCDNO : 170727-720
+         * FBatteryBarCodeNO1 : http://www.registeryourshark.com/reg/?m=XBAT200&s=S22FA115J2K5
+         * FBatteryBarCodeNO2 :
+         */
+
+        private String FBCDate;
+        private String FItemID;
+        private String FNumber;
+        private String FShortNumber;
+        private String FName;
+        private String FModel;
+        private int FQty;
+        private String FTranType;
+        private String FSCDNO;
+        private String FBatteryBarCodeNO1;
+        private String FBatteryBarCodeNO2;
+
+        public String getFBCDate() {
+            return FBCDate;
+        }
+
+        public void setFBCDate(String FBCDate) {
+            this.FBCDate = FBCDate;
+        }
+
+        public String getFItemID() {
+            return FItemID;
+        }
+
+        public void setFItemID(String FItemID) {
+            this.FItemID = FItemID;
+        }
+
+        public String getFNumber() {
+            return FNumber;
+        }
+
+        public void setFNumber(String FNumber) {
+            this.FNumber = FNumber;
+        }
+
+        public String getFShortNumber() {
+            return FShortNumber;
+        }
+
+        public void setFShortNumber(String FShortNumber) {
+            this.FShortNumber = FShortNumber;
+        }
+
+        public String getFName() {
+            return FName;
+        }
+
+        public void setFName(String FName) {
+            this.FName = FName;
+        }
+
+        public String getFModel() {
+            return FModel;
+        }
+
+        public void setFModel(String FModel) {
+            this.FModel = FModel;
+        }
+
+        public int getFQty() {
+            return FQty;
+        }
+
+        public void setFQty(int FQty) {
+            this.FQty = FQty;
+        }
+
+        public String getFTranType() {
+            return FTranType;
+        }
+
+        public void setFTranType(String FTranType) {
+            this.FTranType = FTranType;
+        }
+
+        public String getFSCDNO() {
+            return FSCDNO;
+        }
+
+        public void setFSCDNO(String FSCDNO) {
+            this.FSCDNO = FSCDNO;
+        }
+        /**
+         * 获取电池包2号条码
+         */
+        public String getFBatteryBarCodeNO1() {
+            return FBatteryBarCodeNO1;
+        }
+
+        public void setFBatteryBarCodeNO1(String FBatteryBarCodeNO1) {
+            this.FBatteryBarCodeNO1 = FBatteryBarCodeNO1;
+        }
+        /**
+         * 获取电池包2号条码
+         */
+        public String getFBatteryBarCodeNO2() {
+            return FBatteryBarCodeNO2;
+        }
+
+        public void setFBatteryBarCodeNO2(String FBatteryBarCodeNO2) {
+            this.FBatteryBarCodeNO2 = FBatteryBarCodeNO2;
+        }
+
+
+        public String toString(String mainBarCode) {
+            String lineSeparator= System.getProperty("line.separator", "\n");
+            return
+                    "     生产单号:      " + FSCDNO + lineSeparator +
+                    "     物料代码:      " + FShortNumber + lineSeparator +
+                    "     物料名称:      " + FName +lineSeparator +
+                    "     物料规格:      " + FModel + lineSeparator +
+                    "     主机条码:      " + mainBarCode + lineSeparator +
+                    "1号电池包条码:     " + getTailString(FBatteryBarCodeNO1) + lineSeparator +
+                    "2号电池包条码:     " + getTailString(FBatteryBarCodeNO2);
+        }
+
+        /**
+         * @return 尾部的12位短条码
+         */
+        public String getTailString(String string)
+        {
+            if(TextUtils.isEmpty(string)||string.length()<12)
+                return "无";
+            return string.substring(string.length()-12);
+        }
+    }
+}
Index: app/src/main/java/com/furja/overall/json/BadBeanJSON.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/BadBeanJSON.java	(date 1576067823481)
+++ app/src/main/java/com/furja/overall/json/BadBeanJSON.java	(date 1576067823481)
@@ -0,0 +1,117 @@
+package com.furja.overall.json;
+
+import java.util.List;
+
+/**
+ * 异常类型的JSON解析实体
+ */
+
+public class BadBeanJSON {
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 异常统计信息获取成功!
+     * ErrData : [{"CheckDate":"2018-01-02","FNumber":"5303350102","FName":"NV350电机罩-改模后(花岗岩灰50%珠光)","FModel":"ABS121","BadType":"气纹","Machine":"D03","Count":36},{"CheckDate":"2018-01-02","FNumber":"5303350102","FName":"NV350电机罩-改模后(花岗岩灰50%珠光)","FModel":"ABS121","BadType":"缺料","Machine":"D03","Count":36},{"CheckDate":"2018-01-02","FNumber":"5303350102","FName":"NV350电机罩-改模后(花岗岩灰50%珠光)","FModel":"ABS121","BadType":"料花","Machine":"D03","Count":329},{"CheckDate":"2018-01-02","FNumber":"5303350102","FName":"NV350电机罩-改模后(花岗岩灰50%珠光)","FModel":"ABS121","BadType":"混色","Machine":"D04","Count":2},{"CheckDate":"2018-01-02","FNumber":"5202370101","FName":"NV350电机罩(鲨鱼白)","FModel":"ABS 750/121鲨鱼白","BadType":"杂料","Machine":"D04","Count":3},{"CheckDate":"2018-01-02","FNumber":"5202370101","FName":"NV350电机罩(鲨鱼白)","FModel":"ABS 750/121鲨鱼白","BadType":"混色","Machine":"D04","Count":5},{"CheckDate":"2018-01-02","FNumber":"5202370101","FName":"NV350电机罩(鲨鱼白)","FModel":"ABS 750/121鲨鱼白","BadType":"油污","Machine":"D04","Count":21},{"CheckDate":"2018-01-02","FNumber":"5202370101","FName":"NV350电机罩(鲨鱼白)","FModel":"ABS 750/121鲨鱼白","BadType":"烧焦","Machine":"D04","Count":50},{"CheckDate":"2018-01-02","FNumber":"5202370101","FName":"NV350电机罩(鲨鱼白)","FModel":"ABS 750/121鲨鱼白","BadType":"碰伤","Machine":"D04","Count":105},{"CheckDate":"2018-01-02","FNumber":"5303550201","FName":"NV470地刷底座(花岗岩灰50%珠光)-加胶","FModel":"ABS750/121","BadType":"混色","Machine":"D05","Count":21},{"CheckDate":"2018-01-02","FNumber":"5268980101","FName":"NV470地刷上盖(花岗岩灰带50%的珠光)","FModel":"ABS750","BadType":"料花","Machine":"D06","Count":26},{"CheckDate":"2018-01-02","FNumber":"5268980101","FName":"NV470地刷上盖(花岗岩灰带50%的珠光)","FModel":"ABS750","BadType":"混色","Machine":"D06","Count":70},{"CheckDate":"2018-01-02","FNumber":"5268980101","FName":"NV470地刷上盖(花岗岩灰带50%的珠光)","FModel":"ABS750","BadType":"缺料","Machine":"D06","Count":205},{"CheckDate":"2018-01-02","FNumber":"5305390204","FName":"HV380地刷底座(灰白色)改模","FModel":"ABS747","BadType":"水口修整","Machine":"D07","Count":28},{"CheckDate":"2018-01-02","FNumber":"5305390204","FName":"HV380地刷底座(灰白色)改模","FModel":"ABS747","BadType":"白芯","Machine":"D07","Count":238},{"CheckDate":"2018-01-02","FNumber":"5300290101","FName":"NV470地刷装饰板2(本色)","FModel":"ABS750","BadType":"水口修整","Machine":"D09","Count":32},{"CheckDate":"2018-01-02","FNumber":"5300290101","FName":"NV470地刷装饰板2(本色)","FModel":"ABS750","BadType":"碰伤","Machine":"D09","Count":46},{"CheckDate":"2018-01-02","FNumber":"5233350101","FName":"NV470地刷透明窗(透明)","FModel":"透明ABS TR558A","BadType":"碰伤","Machine":"D18","Count":4},{"CheckDate":"2018-01-02","FNumber":"5233350101","FName":"NV470地刷透明窗(透明)","FModel":"透明ABS TR558A","BadType":"缺料","Machine":"D18","Count":21},{"CheckDate":"2018-01-02","FNumber":"5240560101","FName":"HV300小电动地刷上盖(DC35灰)","FModel":"ABS747","BadType":"冷料","Machine":"D22","Count":22},{"CheckDate":"2018-01-02","FNumber":"5303140101","FName":"UV540左右手柄(花岗岩灰50%珠光+花岗岩灰50%珠光)","FModel":"ABS PA-747(+)","BadType":"水口修整","Machine":"D23","Count":15},{"CheckDate":"2018-01-02","FNumber":"5303140101","FName":"UV540左右手柄(花岗岩灰50%珠光+花岗岩灰50%珠光)","FModel":"ABS PA-747(+)","BadType":"冷料","Machine":"D23","Count":90},{"CheckDate":"2018-01-02","FNumber":"5236980105","FName":"HV300尘杯A(透明)-改模","FModel":"透明ABS\r\nTR558A","BadType":"料花","Machine":"D36","Count":44},{"CheckDate":"2018-01-02","FNumber":"5303350102","FName":"NV350电机罩-改模后(花岗岩灰50%珠光)","FModel":"ABS121","BadType":"混色","Machine":"DO4","Count":12},{"CheckDate":"2018-01-02","FNumber":"5303550201","FName":"NV470地刷底座(花岗岩灰50%珠光)-加胶","FModel":"ABS750/121","BadType":"混色","Machine":"DO5","Count":12},{"CheckDate":"2018-01-02","FNumber":"5268980101","FName":"NV470地刷上盖(花岗岩灰带50%的珠光)","FModel":"ABS750","BadType":"混色","Machine":"DO6","Count":18},{"CheckDate":"2018-01-02","FNumber":"5305140404","FName":"HV380地刷上盖-改模后20170821(木炭灰)","FModel":"ABS750","BadType":"料花","Machine":"E19","Count":33},{"CheckDate":"2018-01-02","FNumber":"5305140404","FName":"HV380地刷上盖-改模后20170821(木炭灰)","FModel":"ABS750","BadType":"料花","Machine":"E21","Count":110},{"CheckDate":"2018-01-02","FNumber":"5208410102","FName":"NV355地刷上盖(鲨鱼白）-优化","FModel":"ABS 750/121鲨鱼白","BadType":"油污","Machine":"E22","Count":33},{"CheckDate":"2018-01-02","FNumber":"5314110301","FName":"NV480Y手柄连接管（本色）","FModel":"ABS747","BadType":"缺料","Machine":"E24","Count":21},{"CheckDate":"2018-01-02","FNumber":"5304210101","FName":"NV350左右手柄（可调）2#3#4#5#6#(宝马蓝+宝马蓝)","FModel":"ABS747","BadType":"水口修整","Machine":"E25","Count":33},{"CheckDate":"2018-01-02","FNumber":"5203490201","FName":"NV350地刷底座(9C)-优化","FModel":"ABS750/121","BadType":"其他","Machine":"E28","Count":1},{"CheckDate":"2018-01-02","FNumber":"5203490201","FName":"NV350地刷底座(9C)-优化","FModel":"ABS750/121","BadType":"水口修整","Machine":"E28","Count":6},{"CheckDate":"2018-01-02","FNumber":"5203490301","FName":"NV350地刷底座(10397C)-优化","FModel":"ABS750/121","BadType":"缺料","Machine":"E28","Count":8},{"CheckDate":"2018-01-02","FNumber":"5203490701","FName":"NV350地刷底座(DC35灰)-优化","FModel":"ABS750/121","BadType":"缺料","Machine":"E29","Count":136},{"CheckDate":"2018-01-02","FNumber":"5236980105","FName":"HV300尘杯A(透明)-改模","FModel":"透明ABS\r\nTR558A","BadType":"碰伤","Machine":"E30","Count":8},{"CheckDate":"2018-01-02","FNumber":"5221050101","FName":"NV100尘杯(透明)","FModel":"透明ABS TR588A","BadType":"杂料","Machine":"E34","Count":13},{"CheckDate":"2018-01-02","FNumber":"5221050101","FName":"NV100尘杯(透明)","FModel":"透明ABS TR588A","BadType":"混色","Machine":"E34","Count":28},{"CheckDate":"2018-01-02","FNumber":"5221050101","FName":"NV100尘杯(透明)","FModel":"透明ABS TR588A","BadType":"其他","Machine":"E34","Count":50},{"CheckDate":"2018-01-02","FNumber":"5221050101","FName":"NV100尘杯(透明)","FModel":"透明ABS TR588A","BadType":"料花","Machine":"E34","Count":88},{"CheckDate":"2018-01-02","FNumber":"5236980105","FName":"HV300尘杯A(透明)-改模","FModel":"透明ABS\r\nTR558A","BadType":"碰伤","Machine":"E36","Count":15},{"CheckDate":"2018-01-02","FNumber":"5221050101","FName":"NV100尘杯(透明)","FModel":"透明ABS TR588A","BadType":"料花","Machine":"E36","Count":40},{"CheckDate":"2018-01-02","FNumber":"5236980105","FName":"HV300尘杯A(透明)-改模","FModel":"透明ABS\r\nTR558A","BadType":"流痕","Machine":"E36","Count":45},{"CheckDate":"2018-01-02","FNumber":"5236980105","FName":"HV300尘杯A(透明)-改模","FModel":"透明ABS\r\nTR558A","BadType":"热光影","Machine":"E36","Count":72},{"CheckDate":"2018-01-02","FNumber":"5236980105","FName":"HV300尘杯A(透明)-改模","FModel":"透明ABS\r\nTR558A","BadType":"料花","Machine":"E36","Count":405}]
+     */
+
+    private int ErrCode;
+    private List<ErrDataBean> ErrData;
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public List<ErrDataBean> getErrData() {
+        return ErrData;
+    }
+
+    public void setErrData(List<ErrDataBean> ErrData) {
+        this.ErrData = ErrData;
+    }
+
+    public static class ErrDataBean {
+        /**
+         * CheckDate : 2018-01-02
+         * FNumber : 5303350102
+         * FName : NV350电机罩-改模后(花岗岩灰50%珠光)
+         * FModel : ABS121
+         * BadType : 气纹
+         * Machine : D03
+         * Count : 36
+         */
+
+        private String CheckDate;
+        private String FNumber;
+        private String FName;
+        private String FModel;
+        private String BadType;
+        private String Machine;
+        private int Count;
+
+        public String getCheckDate() {
+            return CheckDate;
+        }
+
+        public void setCheckDate(String CheckDate) {
+            this.CheckDate = CheckDate;
+        }
+
+        public String getFNumber() {
+            return FNumber;
+        }
+
+        public void setFNumber(String FNumber) {
+            this.FNumber = FNumber;
+        }
+
+        public String getFName() {
+            return FName;
+        }
+
+        public void setFName(String FName) {
+            this.FName = FName;
+        }
+
+        public String getFModel() {
+            return FModel;
+        }
+
+        public void setFModel(String FModel) {
+            this.FModel = FModel;
+        }
+
+        public String getBadType() {
+            return BadType;
+        }
+
+        public void setBadType(String BadType) {
+            this.BadType = BadType;
+        }
+
+        public String getMachine() {
+            return Machine;
+        }
+
+        public void setMachine(String Machine) {
+            this.Machine = Machine;
+        }
+
+        public int getCount() {
+            return Count;
+        }
+
+        public void setCount(int Count) {
+            this.Count = Count;
+        }
+
+        @Override
+        public String toString() {
+            return CheckDate+":物料 " + FName +" 的规格是 "+FModel+ ",其异常类型为 "  +BadType +
+                    " 的数目是:" + Count;
+        }
+    }
+}
Index: app/src/main/java/com/furja/overall/json/UploadDataJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/UploadDataJson.java	(date 1576067824141)
+++ app/src/main/java/com/furja/overall/json/UploadDataJson.java	(date 1576067824141)
@@ -0,0 +1,35 @@
+package com.furja.overall.json;
+
+/**
+ * 上传数据返回的JSON解析
+ */
+
+public class UploadDataJson {
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 数据提交成功!
+     * ErrData : true
+     */
+
+    private int ErrCode;
+    private String ErrMsg;
+
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public String getErrMsg() {
+        return ErrMsg;
+    }
+
+    public void setErrMsg(String ErrMsg) {
+        this.ErrMsg = ErrMsg;
+    }
+
+}
Index: app/src/main/java/com/furja/overall/json/ProductNoListJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/ProductNoListJson.java	(date 1576067819797)
+++ app/src/main/java/com/furja/overall/json/ProductNoListJson.java	(date 1576067819797)
@@ -0,0 +1,64 @@
+package com.furja.overall.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+import java.util.List;
+
+/**
+ * 生产单号信息JSON
+ */
+
+public class ProductNoListJson {
+
+
+    private List<IsCheckBean> IsCheck;
+    private List<BCSCDHBean> BCSCDH;
+
+    public List<IsCheckBean> getIsCheck() {
+        return IsCheck;
+    }
+
+    public void setIsCheck(List<IsCheckBean> IsCheck) {
+        this.IsCheck = IsCheck;
+    }
+
+    public List<BCSCDHBean> getBCSCDH() {
+        return BCSCDH;
+    }
+
+    public void setBCSCDH(List<BCSCDHBean> BCSCDH) {
+        this.BCSCDH = BCSCDH;
+    }
+
+    public static class IsCheckBean {
+        /**
+         * IsCheck : true
+         */
+
+        private String IsCheck;
+
+        public String getIsCheck() {
+            return IsCheck;
+        }
+
+        public void setIsCheck(String IsCheck) {
+            this.IsCheck = IsCheck;
+        }
+    }
+
+    public static class BCSCDHBean {
+        /**
+         * 生产单号 : 170102-001
+         */
+
+        private String productNo;
+        @JSONField(name = "生产单号")
+        public String getProductNo() {
+            return productNo;
+        }
+        @JSONField(name = "生产单号")
+        public void setProductNo(String productNo) {
+            this.productNo = productNo;
+        }
+    }
+}
Index: app/src/main/java/com/furja/overall/json/ReleaseResultJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/ReleaseResultJson.java	(date 1576067820846)
+++ app/src/main/java/com/furja/overall/json/ReleaseResultJson.java	(date 1576067820846)
@@ -0,0 +1,42 @@
+package com.furja.overall.json;
+
+/**
+ * 释放结果的Json
+ */
+
+public class ReleaseResultJson {
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 数据提交成功!
+     * ErrData : true
+     */
+
+    private int ErrCode;
+    private String ErrMsg;
+    private boolean ErrData;
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public String getErrMsg() {
+        return ErrMsg;
+    }
+
+    public void setErrMsg(String ErrMsg) {
+        this.ErrMsg = ErrMsg;
+    }
+
+    public boolean isErrData() {
+        return ErrData;
+    }
+
+    public void setErrData(boolean ErrData) {
+        this.ErrData = ErrData;
+    }
+}
Index: app/src/main/java/com/furja/overall/view/LegendView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/LegendView.java	(date 1576067820334)
+++ app/src/main/java/com/furja/overall/view/LegendView.java	(date 1576067820334)
@@ -0,0 +1,49 @@
+package com.furja.overall.view;
+
+import android.content.Context;
+import android.graphics.Color;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.furja.overall.R;
+
+
+/**
+ * 图例View
+ */
+
+public class LegendView extends RelativeLayout {
+    private TextView label_text;
+    private View legendView;
+
+    public LegendView(Context context)
+    {
+        this(context, null);
+    }
+    public LegendView(Context context, AttributeSet attrs)
+    {
+        this(context, attrs,0);
+    }
+
+    public LegendView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        legendView= LayoutInflater.from(context).inflate(R.layout.layout_legend,null);
+        label_text=(TextView)legendView.findViewById(R.id.legend_label);
+        label_text.setTextColor(Color.BLACK);
+        addView(legendView);
+    }
+
+
+    public void setBackgroundColor(int color)
+    {
+        legendView.setBackgroundColor(color);
+    }
+
+    public void setText(String label)
+    {
+        label_text.setText(label);
+    }
+}
Index: app/src/main/java/com/furja/overall/json/BadTypeConfigJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/json/BadTypeConfigJson.java	(date 1576067819296)
+++ app/src/main/java/com/furja/overall/json/BadTypeConfigJson.java	(date 1576067819296)
@@ -0,0 +1,90 @@
+package com.furja.overall.json;
+
+import java.util.List;
+
+/**
+ * 用于解析BadType基础信息的json
+ */
+
+public class BadTypeConfigJson {
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 异常信息获取成功!
+     * ErrData : [{"SourceType":1,"BadTypeID":0,"BadTypeInfo":"materialFloer","BadTypeDetail":"料花"},{"SourceType":1,"BadTypeID":1,"BadTypeInfo":"airMark","BadTypeDetail":"气纹"},{"SourceType":1,"BadTypeID":2,"BadTypeInfo":"shrinkage","BadTypeDetail":"缩水"},{"SourceType":1,"BadTypeID":3,"BadTypeInfo":"lackMaterial","BadTypeDetail":"缺料"},{"SourceType":1,"BadTypeID":4,"BadTypeInfo":"mixedColor","BadTypeDetail":"混色"},{"SourceType":1,"BadTypeID":5,"BadTypeInfo":"flowMark","BadTypeDetail":"夹水纹"},{"SourceType":1,"BadTypeID":6,"BadTypeInfo":"cutMaterial","BadTypeDetail":"划伤"},{"SourceType":1,"BadTypeID":7,"BadTypeInfo":"bumpMaterial","BadTypeDetail":"碰伤"},{"SourceType":1,"BadTypeID":8,"BadTypeInfo":"foreignMaterial","BadTypeDetail":"异物"},{"SourceType":1,"BadTypeID":9,"BadTypeInfo":"blackSpot","BadTypeDetail":"黑点"},{"SourceType":1,"BadTypeID":10,"BadTypeInfo":"whiteSpot","BadTypeDetail":"白点"},{"SourceType":1,"BadTypeID":11,"BadTypeInfo":"greasyDirt","BadTypeDetail":"油污"},{"SourceType":1,"BadTypeID":12,"BadTypeInfo":"rubberThread","BadTypeDetail":"胶丝"},{"SourceType":1,"BadTypeID":13,"BadTypeInfo":"distortion","BadTypeDetail":"变形"},{"SourceType":1,"BadTypeID":14,"BadTypeInfo":"tunePoor","BadTypeDetail":"调机不良"},{"SourceType":1,"BadTypeID":15,"BadTypeInfo":"other","BadTypeDetail":"其他"}]
+     */
+
+    private int ErrCode;
+    private String ErrMsg;
+    private List<ErrDataBean> ErrData;
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public String getErrMsg() {
+        return ErrMsg;
+    }
+
+    public void setErrMsg(String ErrMsg) {
+        this.ErrMsg = ErrMsg;
+    }
+
+    public List<ErrDataBean> getErrData() {
+        return ErrData;
+    }
+
+    public void setErrData(List<ErrDataBean> ErrData) {
+        this.ErrData = ErrData;
+    }
+
+    public static class ErrDataBean {
+        /**
+         * SourceType : 1
+         * BadTypeID : 0
+         * BadTypeInfo : materialFloer
+         * BadTypeDetail : 料花
+         */
+
+        private int SourceType;
+        private int BadTypeID;
+        private String BadTypeInfo;
+        private String BadTypeDetail;
+
+        public int getSourceType() {
+            return SourceType;
+        }
+
+        public void setSourceType(int SourceType) {
+            this.SourceType = SourceType;
+        }
+
+        public int getBadTypeID() {
+            return BadTypeID;
+        }
+
+        public void setBadTypeID(int BadTypeID) {
+            this.BadTypeID = BadTypeID;
+        }
+
+        public String getBadTypeInfo() {
+            return BadTypeInfo;
+        }
+
+        public void setBadTypeInfo(String BadTypeInfo) {
+            this.BadTypeInfo = BadTypeInfo;
+        }
+
+        public String getBadTypeDetail() {
+            return BadTypeDetail;
+        }
+
+        public void setBadTypeDetail(String BadTypeDetail) {
+            this.BadTypeDetail = BadTypeDetail;
+        }
+    }
+}
Index: app/src/main/java/com/furja/overall/view/GridSpacingItemDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/GridSpacingItemDecoration.java	(date 1576067823247)
+++ app/src/main/java/com/furja/overall/view/GridSpacingItemDecoration.java	(date 1576067823247)
@@ -0,0 +1,44 @@
+package com.furja.overall.view;
+
+import android.graphics.Rect;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.recyclerview.widget.RecyclerView.ItemDecoration;
+import android.view.View;
+
+/**
+ * KeyRecyclerView的间隔器
+ */
+
+public class GridSpacingItemDecoration extends ItemDecoration {
+    private int spanCount;
+    private int spacing;
+    private boolean includeEdge;
+
+    public GridSpacingItemDecoration(int spanCount, int spacing, boolean includeEdge) {
+        this.spanCount = spanCount;
+        this.spacing = spacing;
+        this.includeEdge = includeEdge;
+    }
+
+    @Override
+    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
+        int position = parent.getChildAdapterPosition(view); // item position
+        int column = position % spanCount; // item column
+
+        if (includeEdge) {
+            outRect.left = spacing - column * spacing / spanCount; // spacing - column * ((1f / spanCount) * spacing)
+            outRect.right = (column + 1) * spacing / spanCount; // (column + 1) * ((1f / spanCount) * spacing)
+
+            if (position < spanCount) { // top edge
+                outRect.top = spacing;
+            }
+            outRect.bottom = spacing; // item bottom
+        } else {
+            outRect.left = column * spacing / spanCount; // column * ((1f / spanCount) * spacing)
+            outRect.right = spacing - (column + 1) * spacing / spanCount; // spacing - (column + 1) * ((1f /    spanCount) * spacing)
+            if (position >= spanCount) {
+                outRect.top = spacing; // item top
+            }
+        }
+    }
+}
Index: app/src/main/java/com/furja/overall/view/MyViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/MyViewHolder.java	(date 1576909071570)
+++ app/src/main/java/com/furja/overall/view/MyViewHolder.java	(date 1576909071570)
@@ -0,0 +1,174 @@
+package com.furja.overall.view;
+
+import android.content.Context;
+import android.text.TextUtils;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.TextView;
+
+import com.furja.overall.R;
+import com.furja.utils.Utils;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+
+/**
+ * Created by zhangmeng on 2017/12/3.
+ */
+
+public class MyViewHolder {
+    @BindView(R.id.workinfo_title)
+    TextView info_title;
+    @BindView(R.id.workinfo_content)
+    com.furja.overall.view.ClearableEditText info_content;
+
+    int currPosition=0;
+    public MyViewHolder(View itemView)
+    {
+        ButterKnife.bind(this,itemView);
+    }
+
+    public void setContentHint(String hint)
+    {
+        info_content.setHint(hint);
+    }
+
+    public void setNonFocusable()
+    {
+        info_content.clearFocus();
+        info_content.setFocusable(false);
+        info_content.setClickable(false);
+        info_content.setFocusableInTouchMode(false);
+        info_content.removeClearButton();
+    }
+
+    public boolean onTouch(MotionEvent event)
+    {
+        if(getContent().length()>0&&info_content.isClickable())
+            info_content.addClearButton();
+//        showChartLog("点击了:"+event.getX());
+        if (event.getX() > info_content.getWidth() - info_content.getPaddingRight() - info_content.getIntrinsicWidth()) {
+            info_content.setText("");
+            Utils.showLog("清空了infotext");
+            info_content.removeClearButton();
+            return true;
+        }
+        return false;
+    }
+
+    public void setFocusable()
+    {
+        info_content.setFocusable(true);
+        info_content.setClickable(true);
+        info_content.setFocusableInTouchMode(true);
+    }
+
+    public void requestFocus()
+    {
+        info_content.requestFocus();
+
+    }
+
+    public void clearFocus()
+    {
+        info_content.clearFocus();
+    }
+
+    public ClearableEditText getEditText()
+    {
+        return info_content;
+    }
+    public void hideKeyBoard()
+    {
+        Utils.showLog("触发了我隐藏软键盘的想法");
+        InputMethodManager imm = (InputMethodManager)info_content.getContext() .getSystemService(Context.INPUT_METHOD_SERVICE);
+        if(imm!=null&&imm.isActive())
+            imm.hideSoftInputFromWindow(info_content.getWindowToken(), 0);
+    }
+
+    public boolean isEditing()
+    {
+        InputMethodManager imm = (InputMethodManager)info_content.getContext() .getSystemService(Context.INPUT_METHOD_SERVICE);
+        if(imm!=null&&imm.isActive())
+            return true;
+        else
+            return false;
+    }
+
+
+    public String getContent()
+    {
+        if(TextUtils.isEmpty(info_content.getText()))
+            return "";
+        else
+            return info_content.getText().toString();
+    }
+    public void setInfo_title(String title)
+    {
+        info_title.setText(title);
+    }
+
+    public void setInfo_content(String content)
+    {
+        info_content.setText(content);
+    }
+
+    /**
+     * 根据传入的position设置该EditText的hint和是否可获取焦点、编辑
+     * @param position
+     */
+    public void setPosition(int position) {
+        switch (position)
+        {
+            case 0:
+                setContentHint("扫描物料条码");
+                setFocusable();
+                break;
+            case 4:
+                setContentHint("输入员工号");
+                setFocusable();
+                break;
+            case 5:
+                setContentHint("录入机台号");
+                setFocusable();
+                break;
+            case 1:
+            case 2:
+            case 3:
+            case 6:
+                setContentHint("");
+                setNonFocusable();
+                break;
+        }
+        if(position==currPosition)
+        {
+            requestFocus();
+            if(getContent().length()>0)
+                info_content.addClearButton();
+            info_content.setSelection(info_content.getText().length());
+        }
+        else
+        {
+            info_content.clearFocus();
+            info_content.removeClearButton();
+        }
+    }
+
+
+    public int getCurrPosition() {
+        return currPosition;
+    }
+
+    public void setCurrPosition(int currPosition) {
+        this.currPosition = currPosition;
+    }
+
+    /**
+     * 如果该EditText内容非空则清空
+     */
+    public void clearText() {
+        if(getContent().length()>0)
+            info_content.getEditableText().clear();
+    }
+}
Index: app/src/main/java/com/furja/overall/view/NaviRecyclerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/NaviRecyclerAdapter.java	(date 1576067821044)
+++ app/src/main/java/com/furja/overall/view/NaviRecyclerAdapter.java	(date 1576067821044)
@@ -0,0 +1,23 @@
+package com.furja.overall.view;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.overall.beans.NaviItem;
+
+/**
+ * 导航Activity
+ */
+
+public class NaviRecyclerAdapter extends BaseQuickAdapter<NaviItem,BaseViewHolder> {
+    public NaviRecyclerAdapter(int layoutResId) {
+        super(layoutResId);
+    }
+
+    @Override
+    protected void convert(BaseViewHolder helper, NaviItem item) {
+        helper.setText(R.id.item_title,item.getTitle());
+        helper.setImageResource(R.id.item_icon,item.getIconID());
+    }
+
+}
Index: app/src/main/java/com/furja/overall/view/ClearableEditTextWithIcon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/ClearableEditTextWithIcon.java	(date 1576067822528)
+++ app/src/main/java/com/furja/overall/view/ClearableEditTextWithIcon.java	(date 1576067822528)
@@ -0,0 +1,117 @@
+package com.furja.overall.view;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+
+import com.furja.overall.R;
+
+
+/**
+ * 可清空显示并可带图标的输入EditText
+ */
+
+public class ClearableEditTextWithIcon extends androidx.appcompat.widget.AppCompatEditText implements View.OnTouchListener, TextWatcher {
+
+    // 删除符号
+    Drawable deleteImage = getResources().getDrawable(R.mipmap.nim_icon_edit_delete);
+
+    Drawable icon;
+
+    public ClearableEditTextWithIcon(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        init();
+    }
+
+    public ClearableEditTextWithIcon(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init();
+    }
+
+    public ClearableEditTextWithIcon(Context context) {
+        super(context);
+        init();
+    }
+
+    private void init() {
+        ClearableEditTextWithIcon.this.setOnTouchListener(this);
+        ClearableEditTextWithIcon.this.addTextChangedListener(this);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入显示的图标资源id
+     *
+     * @param id
+     */
+    public void setIconResource(int id) {
+        icon = getResources().getDrawable(id);
+        icon.setBounds(0, 0, icon.getIntrinsicWidth(), icon.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入删除图标资源id
+     * @param id
+     */
+    public void setDeleteImage(int id) {
+        deleteImage = getResources().getDrawable(id);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    void manageClearButton() {
+        if (this.getText().toString().equals(""))
+            removeClearButton();
+        else
+            addClearButton();
+    }
+
+    void removeClearButton() {
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], null, this.getCompoundDrawables()[3]);
+    }
+
+    void addClearButton() {
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], deleteImage,
+                this.getCompoundDrawables()[3]);
+    }
+
+    @Override
+    public boolean onTouch(View v, MotionEvent event) {
+        ClearableEditTextWithIcon et = ClearableEditTextWithIcon.this;
+
+        if (et.getCompoundDrawables()[2] == null)
+            return false;
+        if (event.getAction() != MotionEvent.ACTION_UP)
+            return false;
+        if (event.getX() > et.getWidth() - et.getPaddingRight() - deleteImage.getIntrinsicWidth()) {
+            et.setText("");
+            ClearableEditTextWithIcon.this.removeClearButton();
+        }
+        return false;
+    }
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+        ClearableEditTextWithIcon.this.manageClearButton();
+    }
+
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+    }
+
+    @Override
+    public void afterTextChanged(Editable s) {
+
+    }
+
+    public int getIntrinsicWidth() {
+        return deleteImage.getIntrinsicWidth();
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/furja/overall/view/ClearableEditText.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/ClearableEditText.java	(date 1576067823315)
+++ app/src/main/java/com/furja/overall/view/ClearableEditText.java	(date 1576067823315)
@@ -0,0 +1,112 @@
+package com.furja.overall.view;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+
+import com.furja.overall.R;
+
+
+/**
+ * 可清空显示并可带图标的输入EditText
+ */
+
+public class ClearableEditText extends androidx.appcompat.widget.AppCompatEditText implements  TextWatcher {
+    // 删除符号
+    Drawable deleteImage = getResources().getDrawable(R.mipmap.nim_icon_edit_delete);
+
+    Drawable icon;
+
+    public boolean isAdded() {
+        return isAdded;
+    }
+
+    public void setAdded(boolean added) {
+        isAdded = added;
+    }
+
+    boolean isAdded;
+
+    public ClearableEditText(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        init();
+    }
+
+    public ClearableEditText(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init();
+    }
+
+    public ClearableEditText(Context context) {
+        super(context);
+        init();
+    }
+
+    private void init() {
+        ClearableEditText.this.addTextChangedListener(this);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入显示的图标资源id
+     *
+     * @param id
+     */
+    public void setIconResource(int id) {
+        icon = getResources().getDrawable(id);
+        icon.setBounds(0, 0, icon.getIntrinsicWidth(), icon.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入删除图标资源id
+     * @param id
+     */
+    public void setDeleteImage(int id) {
+        deleteImage = getResources().getDrawable(id);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    void manageClearButton() {
+        if (this.getText().toString().equals(""))
+            removeClearButton();
+        else
+            addClearButton();
+    }
+
+    public void removeClearButton() {
+        setAdded(false);
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], null, this.getCompoundDrawables()[3]);
+    }
+
+    void addClearButton() {
+        setAdded(true);
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], deleteImage,
+                this.getCompoundDrawables()[3]);
+    }
+
+
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+        ClearableEditText.this.manageClearButton();
+    }
+
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+    }
+
+    @Override
+    public void afterTextChanged(Editable s) {
+
+    }
+
+    public int getIntrinsicWidth() {
+        return deleteImage.getIntrinsicWidth();
+    }
+}
Index: app/src/main/java/com/furja/overall/view/BadItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/BadItem.java	(date 1576067822495)
+++ app/src/main/java/com/furja/overall/view/BadItem.java	(date 1576067822495)
@@ -0,0 +1,36 @@
+package com.furja.overall.view;
+
+/**
+ * KeyViewHolder使用的实例.
+ */
+
+public class BadItem {
+    private String badCode; //异常代码
+    private long codeCount=0; //针对异常代码的计数
+
+    public BadItem(String badCode, long codeCount) {
+        this.badCode = badCode;
+        this.codeCount = codeCount;
+    }
+
+    public void addCount()
+    {
+        setCodeCount(this.codeCount+1);
+    }
+
+    public String getBadCode() {
+        return badCode;
+    }
+
+    public void setBadCode(String badCode) {
+        this.badCode = badCode;
+    }
+
+    public long getCodeCount() {
+        return codeCount;
+    }
+
+    public void setCodeCount(long codeCount) {
+        this.codeCount = codeCount;
+    }
+}
Index: app/src/main/java/com/furja/overall/view/KeyRecyclerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/KeyRecyclerAdapter.java	(date 1576286947567)
+++ app/src/main/java/com/furja/overall/view/KeyRecyclerAdapter.java	(date 1576286947567)
@@ -0,0 +1,231 @@
+package com.furja.overall.view;
+
+import android.content.Context;
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+import android.text.InputType;
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.furja.overall.R;
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.functions.Consumer;
+import q.rorbin.badgeview.QBadgeView;
+
+/**
+ * Created by zhangmeng on 2017/12/14.
+ */
+
+public class KeyRecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{
+
+
+    private List<BadItem> mData;
+    private SharpBus sharpBus;
+    private boolean isEditing;
+    public KeyRecyclerAdapter() {
+        mData =new ArrayList<BadItem>();
+        sharpBus=SharpBus.getInstance();
+        setEditing(false);
+    }
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        View view= LayoutInflater.from(parent.getContext())
+                .inflate(R.layout.layout_marker_key,parent,false);
+        MyKeyHolder viewHolder=new MyKeyHolder(view);
+        return viewHolder;
+    }
+
+    @Override
+    public void onBindViewHolder(final RecyclerView.ViewHolder holder, final int position) {
+        final MyKeyHolder myKeyHolder=(MyKeyHolder)holder;
+        final BadItem badItem=getItem(position);
+        myKeyHolder.setCodeCount(badItem.getCodeCount());
+        myKeyHolder.setLabel(badItem.getBadCode());
+        myKeyHolder.button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(isEditing())
+                {
+                    showEditorDialog(myKeyHolder.itemView.getContext(),position);
+                }
+                else
+                {
+                    badItem.addCount();
+                    freshItem(position, badItem);
+                    sharpBus.post(Constants.FRAGMENT_ON_TOUCH,"TOUCH");
+                }
+            }
+        });
+        myKeyHolder.button.setOnLongClickListener(new View.OnLongClickListener() {
+            @Override
+            public boolean onLongClick(View v) {
+                showEditorDialog(myKeyHolder.itemView.getContext(),position);
+                return false;
+            }
+        });
+    }
+
+    /**
+     * 更新当前Item
+     * @param position
+     * @param badItem
+     */
+    private void freshItem(int position, BadItem badItem) {
+        if(badItem.getCodeCount()>0)
+            mData.set(position,badItem);
+        else
+            mData.remove(position);
+        notifyView();
+    }
+
+    private BadItem getItem(int position)
+    {
+        return mData.get(position);
+    }
+
+    @Override
+    public int getItemCount() {
+        return mData.size();
+    }
+
+    /**
+     * 显示编辑个数的对话框
+     * @param context
+     * @param position
+     */
+    private void showEditorDialog(Context context, final int position) {
+        final BadItem badItem=getItem(position);
+        String prefill="";
+        prefill=prefill+badItem.getCodeCount();
+        new MaterialDialog.Builder(context)
+                .title("设定该异常类型个数")
+                .inputType(InputType.TYPE_CLASS_NUMBER)
+                .autoDismiss(false)
+                .input("不设置将清空该异常计数", prefill, new MaterialDialog.InputCallback() {
+                    @Override
+                    public void onInput(@NonNull MaterialDialog dialog, CharSequence input) {
+                        long count=0;
+                        if(!TextUtils.isEmpty(input))
+                        {
+                            count= Long.valueOf(input.toString());
+                        }
+                        badItem.setCodeCount(count);
+                        freshItem(position, badItem);
+                        dialog.cancel();
+                    }
+                }).show();
+    }
+
+    public long getTotalCount() {
+        long totalCount =0;
+        for(BadItem item:mData)
+            totalCount = totalCount +item.getCodeCount();
+        return totalCount;
+    }
+
+    public boolean isEditing() {
+        return isEditing;
+    }
+
+    public void setEditing(boolean editing) {
+        isEditing = editing;
+    }
+
+    /**
+     * 清空data数据
+     */
+    public void clearData() {
+        io.reactivex.Observable.just("clearData")
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Consumer<Object>() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        mData.clear();
+                        notifyDataSetChanged();
+                    }
+                });
+    }
+
+
+    class MyKeyHolder extends RecyclerView.ViewHolder
+    {
+        @BindView(R.id.marker_button_key)
+        Button button;
+        QBadgeView badgeView;
+        public MyKeyHolder(View view) {
+            super(view);
+            ButterKnife.bind(this,view);
+            Context context=view.getContext();
+            badgeView=new QBadgeView(context);
+            badgeView.bindTarget(button);
+            badgeView.setBadgeTextColor(context.getResources().getColor(R.color.holo_purple));
+            badgeView.setBadgeTextSize(15,true);
+            badgeView.setBadgeBackgroundColor(context.getResources().getColor(R.color.colorBottomBg));
+        }
+
+        /**
+         * 针对当前ButtonLabel所示的异常代码计数
+         * @param count
+         */
+        public void setCodeCount(long count)
+        {
+            badgeView.setBadgeNumber((int) count);
+            badgeView.setExactMode(true);
+        }
+        public void setLabel(String label)
+        {
+            button.setText(label);
+        }
+    }
+
+    /**
+     * 向mData里添加对象
+     * @param code
+     */
+    public void addItem(String code)
+    {
+        int position=-1;
+        for(int i=0;i<mData.size();i++)
+        {
+            if(getItem(i).getBadCode().equals(code))
+            {
+                position=i;
+                break;
+            }
+        }
+        if (position<0)
+            mData.add(new BadItem(code,1));
+        else
+        {
+            BadItem item=getItem(position);
+            item.addCount();
+            mData.set(position,item);
+        }
+        notifyView();
+    }
+
+    /**
+     * 通知页面刷新
+     */
+    private void notifyView() {
+        sharpBus.post(Constants.UPDATE_BAD_COUNT, getTotalCount());
+        notifyDataSetChanged();
+    }
+    public List<BadItem> getmData() {
+        return mData;
+    }
+
+}
Index: app/src/main/java/com/furja/overall/view/MyAutoAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/MyAutoAdapter.java	(date 1576286947688)
+++ app/src/main/java/com/furja/overall/view/MyAutoAdapter.java	(date 1576286947688)
@@ -0,0 +1,122 @@
+package com.furja.overall.view;
+
+import android.content.Context;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Filter;
+import android.widget.TextView;
+
+import com.furja.utils.LocalBadTypeQuery;
+import com.furja.overall.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by zhangmeng on 2017/12/14.
+ */
+
+public class MyAutoAdapter extends ArrayAdapter {
+
+    private ArrayList<String> autoPrompts;
+    private int layoutResourceID;
+    public MyAutoAdapter(@NonNull Context context, int resource) {
+        super(context, resource);
+        autoPrompts=new ArrayList<String>();
+        this.layoutResourceID=resource;
+    }
+
+    public MyAutoAdapter(@NonNull Context context, int resource, int textViewResourceId) {
+        super(context, resource, textViewResourceId);
+
+    }
+
+    public MyAutoAdapter(@NonNull Context context, int resource, @NonNull Object[] objects) {
+        super(context, resource, objects);
+    }
+
+    public MyAutoAdapter(@NonNull Context context, int resource, int textViewResourceId, @NonNull Object[] objects) {
+        super(context, resource, textViewResourceId, objects);
+    }
+
+    public MyAutoAdapter(@NonNull Context context, int resource, @NonNull List objects) {
+        super(context, resource, objects);
+    }
+
+    public MyAutoAdapter(@NonNull Context context, int resource, int textViewResourceId, @NonNull List objects) {
+        super(context, resource, textViewResourceId, objects);
+    }
+
+    @Override
+    public int getCount() {
+        return autoPrompts.size();
+    }
+
+    @Nullable
+    @Override
+    public String getItem(int position) {
+        return autoPrompts.get(position);
+    }
+
+    @NonNull
+    @Override
+    public View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) {
+        AutoViewHolder autoViewHolder;
+        if(convertView==null)
+        {
+            convertView= LayoutInflater.from(parent.getContext()).inflate(layoutResourceID,null);
+            autoViewHolder=new AutoViewHolder();
+            autoViewHolder.textView=(TextView)convertView.findViewById(R.id.simple_text_item);
+            convertView.setTag(autoViewHolder);
+        }
+        else
+            autoViewHolder=(AutoViewHolder)convertView.getTag();
+        autoViewHolder.textView.setText(getItem(position));
+        return convertView;
+    }
+
+    @NonNull
+    @Override
+    public Filter getFilter() {
+//        return super.getFilter();
+        return new MyFilter();
+    }
+
+    /**
+     * 自行定制的过滤器,根据输入去本地数据库寻找答案
+     */
+    private class MyFilter extends Filter
+    {
+        LocalBadTypeQuery badTypeQuery;
+        @Override
+        protected FilterResults performFiltering(CharSequence charSequence) {
+            badTypeQuery=new LocalBadTypeQuery();
+            if(TextUtils.isEmpty(charSequence))
+                charSequence="";
+            List<String> results=badTypeQuery.query(charSequence.toString());
+            FilterResults filterResults= new FilterResults();
+            filterResults.count=results.size();
+            filterResults.values=results;
+            return filterResults;
+        }
+
+        @Override
+        protected void publishResults(CharSequence charSequence, FilterResults filterResults) {
+            autoPrompts= (ArrayList<String>) filterResults.values;
+            notifyDataSetChanged();
+        }
+    }
+
+    class AutoViewHolder
+    {
+
+        TextView textView;
+        public AutoViewHolder() {
+        }
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/WorkOrderInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/WorkOrderInfo.java	(date 1576067819933)
+++ app/src/main/java/com/furja/overall/beans/WorkOrderInfo.java	(date 1576067819933)
@@ -0,0 +1,65 @@
+package com.furja.overall.beans;
+
+/**
+ * 提取WorkOrder的键值信息
+ * 存储物料内码/操作员ID及工位号
+ * 作为异常数据库键值传递
+ */
+
+public class WorkOrderInfo {
+    private String materialISN;
+    private String operatorId;
+    private String workPlaceId;
+
+    public WorkOrderInfo(String materialISN, String operatorId, String workPlaceId) {
+        this.materialISN = materialISN;
+        this.operatorId = operatorId;
+        this.workPlaceId = workPlaceId;
+    }
+
+    public String getOperatorId() {
+        return operatorId;
+    }
+
+    public void setOperatorId(String operatorId) {
+        this.operatorId = operatorId;
+    }
+
+    public String getWorkPlaceId() {
+        return workPlaceId;
+    }
+
+    public void setWorkPlaceId(String workPlaceId) {
+        this.workPlaceId = workPlaceId;
+    }
+
+    public String getMaterialISN() {
+        return materialISN;
+    }
+
+    public void setMaterialISN(String materialISN) {
+        this.materialISN = materialISN;
+    }
+
+
+    public boolean equals(WorkOrderInfo obj) {
+        if(obj==null)
+            return false;
+        if(!getMaterialISN().equals(obj.getMaterialISN()))
+            return false;
+        if(!getOperatorId().equals(obj.getOperatorId()))
+            return false;
+        if(!getWorkPlaceId().equals(obj.getWorkPlaceId()))
+            return false;
+        return true;
+    }
+
+    @Override
+    public String toString() {
+        return "WorkOrderInfo{" +
+                "materialISN='" + materialISN + '\'' +
+                ", operatorId='" + operatorId + '\'' +
+                ", workPlaceId='" + workPlaceId + '\'' +
+                '}';
+    }
+}
Index: app/src/main/java/com/furja/overall/view/DatePickerDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/view/DatePickerDialogFragment.java	(date 1576286948601)
+++ app/src/main/java/com/furja/overall/view/DatePickerDialogFragment.java	(date 1576286948601)
@@ -0,0 +1,190 @@
+package com.furja.overall.view;
+
+import android.app.Dialog;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatDialogFragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.DatePicker;
+
+import com.furja.overall.R;
+
+import java.util.Calendar;
+
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * Created by zhangmeng on 2018/1/22.
+ */
+
+public class DatePickerDialogFragment extends AppCompatDialogFragment {
+    Calendar startCalendar,endCalendar;
+    DatePicker datePickerStart,datePickerEnd;
+    DatePickerChangerListener pickerChangerListener;
+    Button button_set;
+    DialogListener dialogListener;
+
+    public DatePickerDialogFragment()
+    {
+
+    }
+
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View view=inflater.inflate(R.layout.layout_datepicker,container);
+        datePickerStart=
+                (DatePicker)view.findViewById(R.id.datePickerStart);
+        datePickerEnd=
+                (DatePicker)view.findViewById(R.id.datePickerEnd);
+        button_set=(Button)view.findViewById(R.id.cycle_set);
+        pickerChangerListener
+                =new DatePickerChangerListener();
+        Calendar calendar=Calendar.getInstance();
+        datePickerEnd.setMaxDate(calendar.getTimeInMillis());
+        datePickerStart.setMaxDate(calendar.getTimeInMillis());
+        calendar.set(2018,05,29);
+        datePickerStart.setMinDate(calendar.getTimeInMillis());
+        datePickerEnd.setMinDate(calendar.getTimeInMillis());
+        datePickerStart
+                .init(formatYear(startCalendar),formatMonth(startCalendar),formatDay(startCalendar),pickerChangerListener);
+        datePickerEnd
+                .init(formatYear(endCalendar),formatMonth(endCalendar),formatDay(endCalendar),pickerChangerListener);
+        startCalendar=Calendar.getInstance();
+        endCalendar=Calendar.getInstance();
+        button_set.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                if(compare(endCalendar,startCalendar))
+                {
+                    showToast("截止日期在开始日期之前,操作无效");
+                }
+                else
+                {
+                    if(dialogListener!=null)
+                    {
+                        dialogListener.onSet();
+                        showToast("正在请求数据");
+                    }
+                    Dialog dialog=getDialog();
+                    if(dialog!=null)
+                        dialog.cancel();
+                }
+
+            }
+        });
+        return view;
+    }
+
+    /**
+     * 获取 Calendar的year
+     * @return
+     */
+    private int formatYear(Calendar calendar)
+    {
+        if(calendar==null)
+            calendar=Calendar.getInstance();
+        return calendar.get(Calendar.YEAR);
+    }
+    /**
+     * 获取 Calendar的 月
+     * @return
+     */
+    private int formatMonth(Calendar calendar)
+    {
+        if(calendar==null)
+            calendar=Calendar.getInstance();
+        return calendar.get(Calendar.MONTH)+1;
+    }
+
+    /**
+     * 获取 Calendar的Day
+     * @return
+     */
+    private int formatDay(Calendar calendar)
+    {
+        if(calendar==null)
+            calendar=Calendar.getInstance();
+        return calendar.get(Calendar.DAY_OF_MONTH);
+    }
+
+    private class DatePickerChangerListener implements DatePicker.OnDateChangedListener
+    {
+        @Override
+        public void onDateChanged(DatePicker datePicker, int year, int month, int day) {
+            if(datePicker.getId()==R.id.datePickerStart)
+            {
+                startCalendar.set(year,month,day);
+            }
+            else
+            {
+                endCalendar.set(year,month,day);
+                if(compare(endCalendar,startCalendar))
+                {
+                    showToast("截止日期在开始日期之前,请重设");
+                }
+            }
+        }
+    }
+
+    /**
+     * 比较前后两个Calendar
+     * @param endCal
+     * @param startCal
+     * @return
+     */
+    public boolean compare(Calendar endCal,Calendar startCal)
+    {
+        if(endCal.compareTo(startCal)<0)
+        {
+            if(formatYear(startCal)==formatYear(endCal))
+            {
+                if(formatMonth(startCal)==formatMonth(endCal))
+                    if(formatDay(startCal)==formatDay(endCal))
+                        return false;
+            }
+            return true;
+        }
+        return false;
+    }
+
+    @Override
+    public void onCancel(DialogInterface dialog) {
+        super.onCancel(dialog);
+        if(dialogListener!=null)
+            dialogListener.onCancel();
+    }
+
+    public Calendar getStartCalendar() {
+        return startCalendar;
+    }
+
+    public void setStartCalendar(Calendar startCalendar) {
+        this.startCalendar = startCalendar;
+    }
+
+    public Calendar getEndCalendar() {
+        return endCalendar;
+    }
+
+    public void setEndCalendar(Calendar endCalendar) {
+        this.endCalendar = endCalendar;
+    }
+
+    public interface DialogListener
+    {
+        void onSet();
+        void onCancel();
+    }
+
+
+    public void setDialogListener(DialogListener dialogListener) {
+        this.dialogListener = dialogListener;
+    }
+
+}
Index: app/src/main/java/com/furja/overall/beans/PushMessage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/PushMessage.java	(date 1576067822722)
+++ app/src/main/java/com/furja/overall/beans/PushMessage.java	(date 1576067822722)
@@ -0,0 +1,43 @@
+package com.furja.overall.beans;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+import java.io.Serializable;
+
+/**
+ * 使用Jackson解析
+ */
+public class PushMessage implements Serializable {
+    @JSONField(serialize = false)
+    private static final long   serialVersionUID    = 1L;
+    public String packageName;
+    public String pushMsg;
+    public String title;
+    public PushMessage() {
+
+    }
+
+    public String getPackageName() {
+        return packageName;
+    }
+
+    public void setPackageName(String packageName) {
+        this.packageName = packageName;
+    }
+
+    public String getPushMsg() {
+        return pushMsg;
+    }
+
+    public void setPushMsg(String pushMsg) {
+        this.pushMsg = pushMsg;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/Message.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/Message.java	(date 1576067823121)
+++ app/src/main/java/com/furja/overall/beans/Message.java	(date 1576067823121)
@@ -0,0 +1,49 @@
+package com.furja.overall.beans;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+import java.io.Serializable;
+
+
+public class Message<T> implements Serializable{
+    @JSONField(serialize=false)
+    private static final long   serialVersionUID    = 1L;
+    private int code;   //100为用户,102为push的消息
+    private String msg;     //对于code的解释
+    private T data;
+
+    public Message(int code, String msg)
+    {
+        this(code,msg,null);
+    }
+
+    public Message(int code, String msg, T data) {
+        this.code = code;
+        this.msg = msg;
+        this.data = data;
+    }
+
+    public int getCode() {
+        return code;
+    }
+
+    public void setCode(int code) {
+        this.code = code;
+    }
+
+    public String getMsg() {
+        return msg;
+    }
+
+    public void setMsg(String msg) {
+        this.msg = msg;
+    }
+
+    public T getData() {
+        return data;
+    }
+
+    public void setData(T data) {
+        this.data = data;
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/EmptyWorkScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/EmptyWorkScene.java	(date 1576294190400)
+++ app/src/main/java/com/furja/overall/beans/EmptyWorkScene.java	(date 1576294190400)
@@ -0,0 +1,40 @@
+package com.furja.overall.beans;
+
+import com.furja.common.Preferences;
+import com.furja.utils.Constants;
+
+/**
+ * Created by zhangmeng on 2017/12/8.
+ */
+
+public class EmptyWorkScene implements WorkScene {
+    @Override
+    public String getDialogContent() {
+        return "";
+    }
+
+    @Override
+    public String getDialogTitle() {
+        return "选择工作场景";
+    }
+
+    @Override
+    public void selectSwitchYes() {
+        Preferences.saveSourceType(Constants.TYPE_BADLOG_WITHBTN+"");
+    }
+
+    @Override
+    public void selectSwitchNo() {
+        Preferences.saveSourceType(Constants.TYPE_BADLOG_WITHKEY+"");
+    }
+
+    @Override
+    public String getYesButtonLabel() {
+        return Constants.BUTTON_FRAGMENT_TITLE;
+    }
+
+    @Override
+    public String getNoButtonLabel() {
+        return Constants.KEY_FRAGMENT_TITLE;
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/RequestLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/RequestLog.java	(date 1576067819413)
+++ app/src/main/java/com/furja/overall/beans/RequestLog.java	(date 1576067819413)
@@ -0,0 +1,65 @@
+package com.furja.overall.beans;
+
+/**
+ * 主要设置请求次数的,默认超出三次即为over将Toast网络异常
+ */
+
+public class RequestLog {
+    private int errorCount;
+    private int limit;
+    public RequestLog()
+    {
+        initValue(3);
+    }
+
+    public RequestLog(int limitCount)
+    {
+        initValue(limitCount);
+    }
+
+    public boolean isOverTimes()
+    {
+        if(errorCount <limit)
+            return false;
+        return true;
+    }
+
+
+
+    /**
+     * 请求失败将请求次数加1
+     */
+    public void error()
+    {
+        this.errorCount = errorCount +1;
+    }
+
+    /**
+     * 初始化数值
+     */
+    public void initValue(int value)
+    {
+        this.limit=value;
+        this.errorCount =0;
+    }
+
+    public int getErrorCount() {
+        return errorCount;
+    }
+
+    public void setErrorCount(int errorCount) {
+        this.errorCount = errorCount;
+    }
+
+    public int getLimit() {
+        return limit;
+    }
+
+    public void setLimit(int limit) {
+        this.limit = limit;
+    }
+
+    public boolean isLastTimes() {
+        return (limit-errorCount)==1;
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/KeyWorkScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/KeyWorkScene.java	(date 1576294190645)
+++ app/src/main/java/com/furja/overall/beans/KeyWorkScene.java	(date 1576294190645)
@@ -0,0 +1,44 @@
+package com.furja.overall.beans;
+
+import com.furja.common.Preferences;
+import com.furja.utils.Constants;
+
+/**
+ * Created by zhangmeng on 2017/12/8.
+ */
+
+public class KeyWorkScene implements WorkScene {
+    @Override
+    public String getDialogContent() {
+
+        return "当前工作场景是装配车间";
+    }
+
+    @Override
+    public String getDialogTitle() {
+        return "是否更换工作场景";
+    }
+
+
+
+    @Override
+    public void selectSwitchYes() {
+        Preferences.saveSourceType(Constants.TYPE_BADLOG_WITHBTN+"");
+    }
+
+    @Override
+    public void selectSwitchNo() {
+        Preferences.saveSourceType(Constants.TYPE_BADLOG_WITHKEY+"");
+    }
+
+    @Override
+    public String getYesButtonLabel() {
+        return "切换";
+    }
+
+    @Override
+    public String getNoButtonLabel() {
+        return "否";
+    }
+
+}
Index: app/src/main/java/com/furja/overall/beans/WorkScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/WorkScene.java	(date 1576067820880)
+++ app/src/main/java/com/furja/overall/beans/WorkScene.java	(date 1576067820880)
@@ -0,0 +1,14 @@
+package com.furja.overall.beans;
+
+/**
+ * Created by zhangmeng on 2017/12/8.
+ */
+
+public interface WorkScene {
+    String getDialogContent();
+    String getDialogTitle();
+    void selectSwitchYes();
+    void selectSwitchNo();
+    String getYesButtonLabel();    //根据工作场景返回
+    String getNoButtonLabel();
+}
Index: app/src/main/java/com/furja/overall/beans/ButtonWorkScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/ButtonWorkScene.java	(date 1576294190565)
+++ app/src/main/java/com/furja/overall/beans/ButtonWorkScene.java	(date 1576294190565)
@@ -0,0 +1,42 @@
+package com.furja.overall.beans;
+
+import com.furja.common.Preferences;
+import com.furja.utils.Constants;
+
+/**
+ * Created by zhangmeng on 2017/12/8.
+ */
+
+public class ButtonWorkScene implements WorkScene {
+    @Override
+    public String getDialogContent() {
+        return "当前工作场景是注塑车间";
+    }
+
+    @Override
+    public String getDialogTitle() {
+        return "是否更换工作场景";
+    }
+
+    @Override
+    public void selectSwitchYes() {
+        Preferences.saveSourceType(Constants.TYPE_BADLOG_WITHKEY+"");
+
+    }
+
+    @Override
+    public void selectSwitchNo() {
+        Preferences.saveSourceType(Constants.TYPE_BADLOG_WITHBTN+"");
+    }
+
+    @Override
+    public String getYesButtonLabel() {
+        return "切换";
+    }
+
+    @Override
+    public String getNoButtonLabel() {
+        return "否";
+    }
+
+}
Index: app/src/main/java/com/furja/overall/beans/NaviItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/NaviItem.java	(date 1576068046410)
+++ app/src/main/java/com/furja/overall/beans/NaviItem.java	(date 1576068046410)
@@ -0,0 +1,45 @@
+package com.furja.overall.beans;
+
+/**
+ * 导航Activity
+ */
+
+public class NaviItem {
+    private int index;
+    private String title;
+    private int iconID;
+    private Class aClass;
+
+
+    public int getIndex() {
+        return index;
+    }
+
+    public void setIndex(int index) {
+        this.index = index;
+    }
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public int getIconID() {
+        return iconID;
+    }
+
+    public void setIconID(int iconID) {
+        this.iconID = iconID;
+    }
+
+    public Class getaClass() {
+        return aClass;
+    }
+
+    public void setaClass(Class aClass) {
+        this.aClass = aClass;
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/DefaultWebConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/DefaultWebConfig.java	(date 1576068045955)
+++ app/src/main/java/com/furja/overall/beans/DefaultWebConfig.java	(date 1576068045955)
@@ -0,0 +1,34 @@
+package com.furja.overall.beans;
+
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+
+/**
+ * Created by zhangmeng on 2017/11/10.
+ */
+
+public class DefaultWebConfig {
+    public static void setDefaultConfig(WebView webView)
+    {
+        webView.setWebViewClient(new WebViewClient(){
+            @Override
+            public boolean shouldOverrideUrlLoading(WebView view, String url) {
+                view.loadUrl(url);
+                return true;
+            }
+        });
+        WebSettings webSettings = webView.getSettings();
+        webSettings.setJavaScriptEnabled(true);
+        webSettings.setUseWideViewPort(true);
+        webSettings.setLoadWithOverviewMode(true);
+        webSettings.setSupportZoom(true);
+        webSettings.setBuiltInZoomControls(true);
+        webSettings.setDisplayZoomControls(false);
+        webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);
+        webSettings.setAllowFileAccess(true);
+        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);
+        webSettings.setLoadsImagesAutomatically(true);
+        webSettings.setDefaultTextEncodingName("utf-8");
+    }
+}
Index: app/src/main/java/com/furja/overall/model/LogBadWithBtnModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/model/LogBadWithBtnModel.java	(date 1576811729624)
+++ app/src/main/java/com/furja/overall/model/LogBadWithBtnModel.java	(date 1576811729624)
@@ -0,0 +1,359 @@
+package com.furja.overall.model;
+
+import android.text.TextUtils;
+
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.overall.FurjaApp;
+import com.furja.overall.beans.MaterialInfo;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.contract.LogBadWithBnContract;
+import com.furja.overall.databases.BadMaterialLog;
+import com.furja.overall.databases.BadMaterialLogDao;
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+import com.furja.utils.Utils;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import org.greenrobot.greendao.query.QueryBuilder;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+import okhttp3.Call;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * Created by zhangmeng on 2017/12/3.
+ */
+
+public class LogBadWithBtnModel implements LogBadWithBnContract.Model {
+    private String[] btn_titles;
+    private List<Long> markCounts;
+    private List<String> badcodes;
+    private DaoSession daoSession;
+    private BadMaterialLog badMaterialLog;
+    private WorkOrderInfo workOrderInfo;
+    public LogBadWithBtnModel(String[] titles)
+    {
+        this.daoSession= FurjaApp.getDaoSession();
+
+        this.btn_titles=titles;
+        initArrays();
+    }
+
+    /**
+     * 判断物料代码是否为空
+     * @return
+     */
+    public boolean ISNisNull()
+    {
+
+        if(TextUtils.isEmpty(badMaterialLog.getMaterialISN()))
+            return true;
+        return false;
+    }
+
+    /**
+     * 判断物料tiaoma、员工号、机台号中是否有空的情况
+     */
+    public boolean infoHasNull()
+    {
+        if(badMaterialLog==null)
+            return true;
+        if(ISNisNull())
+        {
+            SharpBus.getInstance()
+                    .post(Constants.INFORMATION_HAS_NUL,0);
+            return true;
+        }
+        if(TextUtils.isEmpty(badMaterialLog.getOperatorId()))
+        {
+            SharpBus.getInstance()
+                    .post(Constants.INFORMATION_HAS_NUL,4);
+            return true;
+        }
+        if(TextUtils.isEmpty(badMaterialLog.getWorkPlaceId()))
+        {
+            SharpBus.getInstance()
+                    .post(Constants.INFORMATION_HAS_NUL,5);
+            return true;
+        }
+        return false;
+    }
+
+    /**
+     * 判断物料tiaoma、员工号、机台号中是否有空的情况
+     */
+    public boolean infoHasNullL()
+    {
+        if(badMaterialLog==null)
+            return true;
+        if(ISNisNull())
+        {
+            return true;
+        }
+        if(TextUtils.isEmpty(badMaterialLog.getOperatorId()))
+        {
+            return true;
+        }
+        if(TextUtils.isEmpty(badMaterialLog.getWorkPlaceId()))
+        {
+            return true;
+        }
+        return false;
+    }
+
+
+    /**
+     * 将所有MarkerButton清零
+     */
+    public void clearCount()
+    {
+        for(int i=0;i<markCounts.size();i++)
+            markCounts.set(i, (long) 0);
+        if(badMaterialLog !=null)
+        {
+            badMaterialLog.setBadCount(0);
+            badMaterialLog.setLongBadCounts(markCounts);
+        }
+    }
+
+    /**
+     * 初始化按钮视图,从本地数据库提取数据加载
+     * 如果本地数据库没有则从arrays.xml里加载
+     */
+    private void initArrays() {
+        markCounts=new ArrayList<Long>();
+        badcodes= new ArrayList<String>();
+        for(int i=0;i<getItemCount();i++)
+        {
+            markCounts.add((long) 0);
+            badcodes.add(i+"");
+        }
+    }
+
+    @Override
+    public int getItemCount() {
+        return btn_titles.length;
+    }
+
+    @Override
+    public String getOptionTitle(int position) {
+
+        return btn_titles[position];
+    }
+
+    @Override
+    public long getMarkerCount(int position) {
+        return markCounts.get(position);
+    }
+
+    @Override
+    public void addMarkerCount(int position) {
+        markCounts.set(position,markCounts.get(position)+1);
+        badMaterialLog.setBadCount(getTotalBad());
+        badMaterialLog.setLongBadCounts(markCounts);
+    }
+
+    @Override
+    public long getTotalBad() {
+        long count=0;
+        for(long i:markCounts)
+            count=count+i;
+        return count;
+    }
+
+    /**
+     * 将物料、工号、员工号等信息传入更新视图数据
+     * @param workOrderInfo
+     */
+    @Override
+    public void updateData(WorkOrderInfo workOrderInfo) {
+        setWorkOrderInfo(workOrderInfo);
+        clearCount();
+        if(badMaterialLog ==null)
+            badMaterialLog
+                    =new BadMaterialLog(workOrderInfo, Constants.TYPE_BADLOG_WITHBTN,markCounts, getTotalBad());
+        else
+        {
+            badMaterialLog.setWorkOrderInfo(workOrderInfo);
+            badMaterialLog.setLongBadCounts(markCounts);
+            badMaterialLog.setBadCount(getTotalBad());
+        }
+        if(badcodes==null)
+        {
+            badcodes=new ArrayList<String>();
+            for(int i=0;i<markCounts.size();i++)
+                badcodes.add(i+"");
+        }
+        badMaterialLog.setBadTypeCode(badcodes);
+        setMarkCounts(badMaterialLog.toLongList());
+    }
+
+
+    public void setMarkCounts(List<Long> markCounts) {
+        this.markCounts = markCounts;
+    }
+
+    /**
+     * 以MaterialInfo来查找DefectLog
+     * @return
+     */
+    public List<BadMaterialLog> queryBadLogByInfo()
+    {
+        BadMaterialLogDao dao=daoSession.getBadMaterialLogDao();
+        QueryBuilder queryBuilder=dao.queryBuilder();
+        List<BadMaterialLog> badMaterialLogs =queryBuilder.where
+                (BadMaterialLogDao.Properties.MaterialISN.eq(workOrderInfo.getMaterialISN()))
+                .where(BadMaterialLogDao.Properties.OperatorId.eq(workOrderInfo.getOperatorId()))
+                .where(BadMaterialLogDao.Properties.WorkPlaceId.eq(workOrderInfo.getWorkPlaceId()))
+                .list();
+        if(badMaterialLogs ==null)
+            return Collections.EMPTY_LIST;
+        else
+            return badMaterialLogs;
+    }
+
+
+    /**
+     * 同步数据至本地及服务器
+     */
+    public void syncData()
+    {
+        if(badMaterialLog!=null)
+        {
+            if(TextUtils.isEmpty(badMaterialLog.getMaterialISN()))
+                return;
+            if(TextUtils.isEmpty(badMaterialLog.getOperatorId()))
+            {
+                return;
+            }
+            if(TextUtils.isEmpty(badMaterialLog.getWorkPlaceId()))
+            {
+                return;
+            }
+            syncToLocal();
+            badMaterialLog.setMaterialISN("");
+            badMaterialLog.setOperatorId("");
+            badMaterialLog.setWorkPlaceId("");
+        }
+    }
+
+    /**
+     * 同步至本地
+     */
+    public void syncToLocal()
+    {
+        if(badMaterialLog ==null)
+            showLog(getClass()+"->当前执有的BadMaterialLog数据库为空,不予保存");
+        else
+        {
+            badMaterialLog.setLongBadCounts(markCounts);
+            badMaterialLog.setBadCount(getTotalBad());
+            if(badcodes==null)
+            {
+                badcodes=new ArrayList<String>();
+                for(int i=0;i<markCounts.size();i++)
+                    badcodes.add(i+"");
+            }
+            badMaterialLog.setBadTypeCode(badcodes);
+            Utils.saveToLocal(badMaterialLog);
+        }
+    }
+
+    /**
+     * 获取品质异常数据库基类
+     * @return
+     */
+    public BadMaterialLog getBadMaterialLog() {
+        return badMaterialLog;
+    }
+    /**
+     * 设置品质异常数据库 基类
+     */
+    public void setBadMaterialLog(BadMaterialLog badMaterialLog) {
+        this.badMaterialLog = badMaterialLog;
+    }
+
+    public WorkOrderInfo getWorkOrderInfo() {
+        return workOrderInfo;
+    }
+
+    public void setWorkOrderInfo(WorkOrderInfo workOrderInfo) {
+        this.workOrderInfo = workOrderInfo;
+    }
+
+    /**
+     * 将当前状态整理成字符串以供备忘录保存
+     * @return
+     */
+    public String getMarkCountString() {
+        StringBuffer stringBuffer=new StringBuffer();
+        for(Long entity:markCounts)
+        {
+            stringBuffer.append(entity);
+            stringBuffer.append(",");
+        }
+        if(stringBuffer.length()>0)
+            stringBuffer.deleteCharAt(stringBuffer.length()-1);
+        return stringBuffer.toString();
+    }
+
+    /**
+     * 设置指定位置的异常个数
+     * @param position
+     * @param count
+     */
+    public void setMarkerCount(int position, long count) {
+        markCounts.set(position,count);
+        badMaterialLog.setBadCount(getTotalBad());
+        badMaterialLog.setLongBadCounts(markCounts);
+
+    }
+
+    public void getMaterialISNbyBarCode(String barCode) {
+        OkHttpUtils
+                .get()
+                .url(Constants.FURJA_BARCODEINFO_URL)
+                .addParams("Barcode", barCode)
+                .build()
+                .execute(new StringCallback() {
+
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        SharpBus.getInstance().post(Constants.MATERIAL_INTERNET_ABNORMAL,"true");
+                    }
+
+                    @Override
+                    public void onResponse(String response, int i) {
+                        showLog(getClass()+response);
+                        MaterialInfo info = new MaterialInfo();
+                        try {
+                            info.formatJson(response);
+                            if(!TextUtils.isEmpty(info.getMaterialName()))
+                            {
+                                if(badMaterialLog!=null)
+                                {
+                                    badMaterialLog.setMaterialISN(info.getMaterialISN());
+                                    syncData();
+                                    SharpBus.getInstance()
+                                            .post(Constants.UPLOAD_FINISH,"unloadFinish");
+                                    clearCount();
+                                }
+                            }
+                        }
+                        catch (Exception e) {
+                            showToast("没有找到物料,需重输");
+                        }
+                        finally {
+
+                        }
+                    }
+                });
+
+    }
+}
Index: app/src/main/java/com/furja/overall/beans/MaterialInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/MaterialInfo.java	(date 1576067822370)
+++ app/src/main/java/com/furja/overall/beans/MaterialInfo.java	(date 1576067822370)
@@ -0,0 +1,75 @@
+package com.furja.overall.beans;
+
+
+import com.alibaba.fastjson.JSON;
+import com.furja.overall.json.MaterialJson;
+
+/**
+ * 物料信息用于保存物料代码,物料内码、名称及规格等信息
+ */
+
+public class MaterialInfo {
+
+    private String materialId;
+    private String materialName;
+    private String norm;
+    private String materialISN;//物料内码
+    public MaterialInfo()
+    {
+
+    }
+
+    /**
+     * 将取得的json格式化为该类
+     * @param json
+     */
+    public void formatJson(String json) throws Exception {
+        MaterialJson materialJson=JSON.parseObject(json,MaterialJson.class);
+        MaterialJson.ErrDataBean dataBean=materialJson.getErrData();
+        if(dataBean==null)
+            throw new NullPointerException();
+        else
+        {
+            setMaterialId(dataBean.getFShortNumber());
+            setMaterialName(dataBean.getFName());
+            setNorm(dataBean.getFModel());
+            setMaterialISN(dataBean.getFItemID());
+        }
+    }
+
+
+
+    public String getMaterialId() {
+        return materialId;
+    }
+
+    public void setMaterialId(String materialId) {
+        this.materialId = materialId;
+    }
+
+    public String getMaterialName() {
+        return materialName;
+    }
+
+    public void setMaterialName(String materialName) {
+        this.materialName = materialName;
+    }
+
+    public String getNorm() {
+        return norm;
+    }
+
+    public void setNorm(String norm) {
+        this.norm = norm;
+    }
+
+
+    public String getMaterialISN() {
+        return materialISN;
+    }
+
+    public void setMaterialISN(String materialISN) {
+        this.materialISN = materialISN;
+    }
+}
+
Index: app/src/main/java/com/furja/utils/Caretaker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/Caretaker.java	(date 1576286948530)
+++ app/src/main/java/com/furja/utils/Caretaker.java	(date 1576286948530)
@@ -0,0 +1,81 @@
+package com.furja.utils;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 备忘录管理者
+ */
+
+public class Caretaker {
+    private List<String> memos;  //存放undo数据集
+    private int mIndex,MAX=30;    //当前undo、redo索引
+    public Caretaker()
+    {
+        memos =new ArrayList<String>(MAX);
+        mIndex=0;
+    }
+
+    /**
+     * 清除备忘录中存储的操作
+     */
+    public void clear()
+    {
+        if(memos !=null)
+            memos.clear();
+
+        mIndex=0;
+    }
+
+    /**
+     * 往UndoList里添加记录
+     * @param memorandum
+     */
+    public void appendUndo(String memorandum)
+    {
+        saveMemo(memorandum);
+    }
+
+    private void saveMemo(String memorandum) {
+        if(memos.size()>MAX)
+            memos.remove(0);
+        memos.add(new String(memorandum));
+        mIndex= memos.size()-1;
+    }
+
+    public boolean isEmpty()
+    {
+        return memos.isEmpty();
+    }
+
+    public List<Long> getUndoMemo() {
+        if(isEmpty())
+            return null;
+        mIndex=mIndex>0 ? --mIndex :mIndex;
+        String undos = memos.get(mIndex);
+        String strings[] = undos.split(",");
+        List<Long> list = new ArrayList<Long>();
+        for (String str : strings)
+            list.add(Long.valueOf(str));
+        return list;
+    }
+
+
+    /**
+     * redo时获取记录
+     * @return
+     */
+    public List<Long> getRedoMemo(String tempMemo)
+    {
+        if(isEmpty())
+            return null;
+        mIndex=mIndex < memos.size()-1 ? ++mIndex :mIndex;
+        String undos= memos.get(mIndex);
+        String strings[]=undos.split(",");
+        List<Long> list=new ArrayList<Long>();
+        for(String str:strings)
+            list.add(Long.valueOf(str));
+        return list;
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/furja/overall/model/WorkOrderModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/model/WorkOrderModel.java	(date 1576909071013)
+++ app/src/main/java/com/furja/overall/model/WorkOrderModel.java	(date 1576909071013)
@@ -0,0 +1,336 @@
+package com.furja.overall.model;
+
+import android.content.Context;
+import android.text.TextUtils;
+
+import com.furja.overall.FurjaApp;
+import com.furja.overall.R;
+import com.furja.overall.beans.MaterialInfo;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.contract.WorkOrderContract;
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.overall.databases.WorkOrder;
+import com.furja.overall.databases.WorkOrderDao;
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import org.greenrobot.greendao.query.LazyList;
+import org.greenrobot.greendao.query.QueryBuilder;
+
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Collections;
+import java.util.Date;
+import java.util.List;
+
+import okhttp3.Call;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * 从数据库提取工单信息
+ */
+
+public class WorkOrderModel implements WorkOrderContract.Model {
+    //工单信息中条目名称
+    private List<String> titles;
+    //工单信息中各条目对应的值
+    private List<String> workinfoes;
+    private DaoSession daoSession;
+    //包含 数据库键值的信息
+    private WorkOrderInfo workOrderInfo;
+    private WorkOrder workOrder;
+
+    private String materialBarCode; //预存未加载二维码
+    public WorkOrderModel()
+    {
+        initList();
+        Context context= FurjaApp.getContext();
+        String[] items = context.getResources().getStringArray(R.array.workinfo_titles);
+        for(String item:items)
+            titles.add(item);
+
+        setDefault();
+        this.daoSession= FurjaApp.getDaoSession();
+
+    }
+
+    private void initList() {
+        titles=new ArrayList<String>();
+        workinfoes=new ArrayList<String>();
+    }
+    public WorkOrder getWorkOrder() {
+        return workOrder;
+    }
+
+    @Override
+    public int getItemCount() {
+        if(titles==null)
+            return 0;
+        return titles.size();
+    }
+
+    /**
+     * 获取数据库里最新一条保存的工单信息
+     * @return
+     */
+    public WorkOrder getLastWorkOrder()
+    {
+        WorkOrderDao workOrderDao=daoSession.getWorkOrderDao();
+        QueryBuilder queryBuilder=workOrderDao.queryBuilder();
+        LazyList<WorkOrder> workOrderList
+                = queryBuilder.orderDesc(WorkOrderDao.Properties.Id).listLazy();
+
+        if(workOrderList==null ||workOrderList.size()<1)
+            return null;
+        else
+            return workOrderList.get(0);
+    }
+
+    @Override
+    public String getTitle(int position) {
+        return titles.get(position);
+    }
+
+    /**
+     * 设置当前工单信息,ListView以此List刷新视图
+     * @param workinfoes
+     */
+    public void setWorkinfoes(List<String> workinfoes) {
+        this.workinfoes = workinfoes;
+
+    }
+    @Override
+    public String getContent(int position) {
+        return workinfoes.get(position);
+    }
+
+
+
+    private void updateInfoes()
+    {
+        this.setWorkinfoes(workOrder.toStringList());
+    }
+
+    /**
+     * 检测是否存在指定的ID
+     * @return
+     */
+    public void checkExistOrUpdateByBarCode(String barCode)
+    {
+        syncDataBase();
+        updateWorkOrderByBarCode(barCode);
+    }
+
+    /**
+     * 返回二维测试条码,有缺省值
+     * @return
+     */
+    public String getMaterialBarCode() {
+        if(TextUtils.isEmpty(this.materialBarCode))
+            return "";
+        else
+            return materialBarCode;
+    }
+
+
+    public void setMaterialBarCode(String materialBarCode) {
+        this.materialBarCode = materialBarCode;
+    }
+
+    /**
+     * 设置当前工单信息并设置当前日期
+     */
+    public synchronized void setWorkInfoAndDate() {
+        setWorkOrderInfo();
+        //获取当前时间并存储
+        Date date=new Date(System.currentTimeMillis());
+        workOrder.setSaveDate(date);
+        updateInfoes();
+    }
+
+    /**
+     * 以 id 来查询工单信息
+     * @param id
+     * @return
+     */
+    private List<WorkOrder> queryByMaterialId(long id)
+    {
+        WorkOrderDao dao=daoSession.getWorkOrderDao();
+        QueryBuilder queryBuilder=dao.queryBuilder();
+        List<WorkOrder> workOrders
+                =queryBuilder.where(WorkOrderDao.Properties.MaterielID.eq(id))
+                .list();
+        if(workOrders==null)
+            return Collections.EMPTY_LIST;
+        else
+            return workOrders;
+    }
+
+    /**
+     * 同步本地工单数据
+     */
+    public void syncDataBase()
+    {
+//        if(workOrder==null)
+//            showChartLog("同步时当前WorkOrder对象为空");
+//        else
+//        {
+//            WorkOrderDao dao=daoSession.getWorkOrderDao();
+//            dao.saveInTx(workOrder);
+//        }
+    }
+
+    /**
+     * 测试时传入设置数据
+     */
+    public void setDefault()
+    {
+        Calendar calendar=Calendar.getInstance();
+        Date date=calendar.getTime();
+        workOrder=new WorkOrder
+                (null,"","","","",date,"","",0);
+        setWorkInfoAndDate();
+    }
+
+    public WorkOrderInfo getWorkOrderInfo()
+    {
+        return this.workOrderInfo;
+    }
+
+    /**
+     * 更新工单信息视图的不良品数量
+     * @param value
+     */
+    public void updateDefectCount(long value) {
+        workOrder.setDefectCount(value);
+        setWorkinfoes(workOrder.toStringList());
+    }
+
+    public void setWorkOrderInfo() {
+        if(this.workOrderInfo ==null)
+            workOrderInfo =new WorkOrderInfo(workOrder.getMaterialISN(),
+                    workOrder.getOperatorId(),workOrder.getWorkplaceID());
+        else
+        {
+            workOrderInfo.setMaterialISN(workOrder.getMaterialISN());
+            workOrderInfo.setOperatorId(workOrder.getOperatorId());
+            workOrderInfo.setWorkPlaceId(workOrder.getWorkplaceID());
+        }
+    }
+
+    /**
+     * 与数据库同步获知该员工是否存在
+     * @param id
+     * @return
+     * 默认存在
+     */
+    public boolean checkOperatorExistById(String id) {
+
+        return true;
+    }
+
+    /**
+     * 与数据库同步获知该机台是否存在
+     * @param workPlaceId
+     * @return
+     * 默认存在
+     */
+    public boolean checkWorkPlaceExistById(String workPlaceId) {
+
+        return true;
+    }
+    /**
+     * 从服务器数据库提取物料信息刷新当前List
+     * @param barCode
+     */
+    public void updateWorkOrderByBarCode(final String barCode)
+    {
+        showLog(getClass()+">正在读取物料信息");
+        OkHttpUtils
+                .get()
+                .url(Constants.FURJA_BARCODEINFO_URL)
+                .addParams("Barcode", barCode)
+                .build()
+                .execute(new StringCallback() {
+
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        SharpBus.getInstance().post(Constants.MATERIAL_INTERNET_ABNORMAL,"true");
+                    }
+
+                    @Override
+                    public void onResponse(String response, int i) {
+                        showLog(getClass()+response);
+                        MaterialInfo info = new MaterialInfo();
+                        try {
+                            info.formatJson(response);
+                            if(!TextUtils.isEmpty(info.getMaterialName()))
+                            {
+                                workOrder.setMaterielID(info.getMaterialId());
+                                workOrder.setMaterielName(info.getMaterialName());
+                                workOrder.setNorms(info.getNorm());
+                                workOrder.setMaterialISN(info.getMaterialISN());
+                                setWorkOrderInfo();
+                                SharpBus.getInstance()
+                                        .post(Constants.UPDATE_WORKORDER_BY_MATERIAL,"finish");
+                            }
+                            setWorkInfoAndDate();   //刷新视图
+                        }
+                        catch (Exception e) {
+                            showToast("没有找到物料,需重输");
+                            SharpBus.getInstance()
+                                    .post(Constants.UPDATE_WORKORDER_BY_MATERIAL,"error");
+                        }
+                        finally {
+
+                        }
+                    }
+                });
+    }
+    /**
+     * 从本地数据库提取物料信息刷新当前List
+     * @param materialid
+     */
+    public void updateWorkOrderById(long materialid) {
+        List<WorkOrder> workOrders= queryByMaterialId(materialid);
+        if(!workOrders.isEmpty())
+        {
+            this.workOrder=workOrders.get(0);
+        }
+        else
+        {
+            //更新物料代码
+            workOrder.setMaterielID(String.valueOf(materialid));
+        }
+        setWorkInfoAndDate();
+    }
+
+
+
+
+    public void updateWorkOrderByWorkPlaceId(String placeId) {
+        workOrder.setWorkplaceID(placeId);
+        setWorkInfoAndDate();
+    }
+
+    public void updateWorkOrderByOperatorId(String operatorId) {
+        workOrder.setOperatorId(operatorId);
+        setWorkInfoAndDate();
+    }
+
+    /**
+     * 做一些微妙设置,使光标跳下去
+     */
+    public void setMaterialNull() {
+        workOrder.setMaterielID("");
+        workOrder.setMaterielName("");
+        workOrder.setNorms("");
+        workOrder.setDefectCount(0);
+        setMaterialBarCode("");
+        setWorkInfoAndDate();
+    }
+}
Index: app/src/main/java/com/furja/utils/BadTypeQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/BadTypeQuery.java	(date 1576286947872)
+++ app/src/main/java/com/furja/utils/BadTypeQuery.java	(date 1576286947872)
@@ -0,0 +1,12 @@
+package com.furja.utils;
+
+import java.util.List;
+
+/**
+ * 寻找sourcetype=2时异常类型
+ */
+
+public interface BadTypeQuery {
+
+    List<String> query(String input);
+}
Index: app/src/main/java/com/furja/utils/BadBeanUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/BadBeanUtils.java	(date 1576909071430)
+++ app/src/main/java/com/furja/utils/BadBeanUtils.java	(date 1576909071430)
@@ -0,0 +1,209 @@
+package com.furja.utils;
+
+import android.annotation.SuppressLint;
+import android.graphics.Color;
+import android.util.Log;
+
+import com.furja.overall.json.BadBeanJSON;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Random;
+
+/**
+ * 将从服务器提取到的数据处理成List
+ */
+
+public class BadBeanUtils {
+    private List<BadBeanJSON.ErrDataBean> ErrData;
+    private List<List<Float>> yValues;
+    private List<Float> yChildValues;   //
+    private List<String> workplaceIDs;  //机台号 集
+    private List<List<String>> xLabels; //子柱对应的异常类型
+    private List<String> xChildLabels;
+    private List<String> typeLabels;    //异常类型标牌
+    private List<Integer> colours;
+    private List<List<String>> columnDetail; //点击柱子显示的明细
+    private List<String> childOfColumnDetail;
+    public BadBeanUtils(List<BadBeanJSON.ErrDataBean> ErrDatas)
+    {
+        this.ErrData=ErrDatas;
+        this.yValues= new ArrayList<>();
+        this.xLabels= new ArrayList<>();
+        this.columnDetail = new ArrayList<>();
+        this.xChildLabels=new ArrayList<String>();
+        this.yChildValues=new ArrayList<Float>();
+        this.childOfColumnDetail=new ArrayList<String>();
+        this.workplaceIDs=new ArrayList<String>();
+        this.typeLabels=new ArrayList<String>();
+        this.colours=new ArrayList<Integer>();
+        colours.add(Color.GREEN);
+        colours.add(Color.BLUE);
+        colours.add(Color.RED);
+        colours.add(Color.CYAN);
+        colours.add(Color.DKGRAY);
+        colours.add(Color.LTGRAY);
+        colours.add(Color.MAGENTA);
+        colours.add(Color.rgb(104, 241, 175));
+        colours.add(Color.rgb(164, 228, 251));
+        colours.add(Color.rgb(242, 247, 158));
+        colours.add(Color.rgb(255, 102, 0));
+    }
+
+    /**
+     * 根据JSON值创造XY轴信息
+     */
+    @SuppressLint("NewApi")
+    public void buildXYValue()
+    {
+        for(BadBeanJSON.ErrDataBean dataBean:ErrData)
+        {
+            if(!workplaceIDs.contains(dataBean.getMachine()))
+            {
+                workplaceIDs.add(dataBean.getMachine());
+                if(xChildLabels.size()>0)
+                    xLabels.add(xChildLabels);
+                if(yChildValues.size()>0)
+                    yValues.add(yChildValues);
+                if(childOfColumnDetail.size()>0)
+                    columnDetail.add(childOfColumnDetail);
+                xChildLabels = new ArrayList<String>();
+                yChildValues = new ArrayList<Float>();
+                childOfColumnDetail= new ArrayList<String>();
+            }
+            if(!typeLabels.contains(dataBean.getBadType()))
+                typeLabels.add(dataBean.getBadType());
+            if(!xChildLabels.contains(dataBean.getBadType()))
+            {
+                xChildLabels.add(dataBean.getBadType());
+                yChildValues.add((float) dataBean.getCount());
+                childOfColumnDetail.add(dataBean.toString());
+            }
+            else
+            {
+                int index=xChildLabels.indexOf(dataBean.getBadType());
+                yChildValues.set(index,yChildValues.get(index)+dataBean.getCount());
+                String sourceString=childOfColumnDetail.get(index);
+                sourceString=sourceString+";"+System.lineSeparator()
+                        +System.lineSeparator()+dataBean.toString();
+                childOfColumnDetail.set(index,sourceString);
+            }
+        }
+        if(yChildValues.size()>0)
+            yValues.add(yChildValues);
+        if(xChildLabels.size()>0)
+            xLabels.add(xChildLabels);
+        if(childOfColumnDetail.size()>0)
+            columnDetail.add(childOfColumnDetail);
+        addColor(typeLabels.size());
+//        showChartLog(columnDetail.size()+"<columnDetail:"+columnDetail.toString());
+//        showChartLog(xLabels.size()+"<xLabels:"+xLabels.toString());
+//        showChartLog(workplaceIDs.size()+"<workplaceIDs:"+workplaceIDs.toString());
+//        showChartLog(yValues.size()+"<yValues:"+yValues.toString());
+//        showChartLog(typeLabels.size()+"<typeLabels:"+typeLabels.toString());
+    }
+
+    public int getColor(int columnIndex,int subColumnIndex)
+    {
+        int index=0;
+        String badtype=xLabels.get(columnIndex).get(subColumnIndex);
+        index=typeLabels.indexOf(badtype);
+        if(index<1)
+            index=0;
+        return colours.get(index);
+    }
+
+    public String getBadType(int columnIndex,int subColumnIndex)
+    {
+        if(columnIndex>=xLabels.size())
+            return " ";
+        List<String> xBadTypes=xLabels.get(columnIndex);
+        if(subColumnIndex>=xBadTypes.size())
+            return " ";
+        String badtype=xBadTypes.get(subColumnIndex);
+        return badtype;
+    }
+
+
+    public String getXLabel(int index)
+    {
+        if(index>=workplaceIDs.size())
+            return " ";
+        return workplaceIDs.get(index);
+    }
+
+
+
+    public int getColor(int index)
+    {
+        if(index<1||index>=colours.size())
+            index=0;
+        return colours.get(index);
+    }
+    private void showLog(String str)
+    {
+        Log.e("ChartApp",str);
+    }
+
+    /**
+     * 根据 length 补加颜色
+     * @param length
+     */
+    private void addColor(int length) {
+        length=length-colours.size();
+        if(length<1)
+            return;
+        Random random = new Random();
+        for(int i=0;i<length;i++)
+        {
+            int r = random.nextInt(256);
+            int g = random.nextInt(256);
+            int b = random.nextInt(256);
+            colours.add(Color.rgb(r,g,b));
+        }
+    }
+
+
+    public List<List<Float>> getyValues() {
+        return yValues;
+    }
+
+    public void setyValues(List<List<Float>> yValues) {
+        this.yValues = yValues;
+    }
+
+    public List<String> getWorkplaceIDs() {
+        return workplaceIDs;
+    }
+
+    public void setWorkplaceIDs(List<String> workplaceIDs) {
+        this.workplaceIDs = workplaceIDs;
+    }
+
+    public List<List<String>> getxLabels() {
+        return xLabels;
+    }
+
+    public void setxLabels(List<List<String>> xLabels) {
+        this.xLabels = xLabels;
+    }
+
+    public List<String> getTypeLabels() {
+        return typeLabels;
+    }
+
+    /**
+     * 获取对话框信息
+     * @return
+     */
+    public String getDialogMsg(int index,int subIndex)
+    {
+        String msg="无有效信息";
+        try {
+            msg=columnDetail.get(index).get(subIndex);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return msg;
+    }
+}
Index: app/src/main/java/com/furja/utils/LocalBadTypeQuery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/LocalBadTypeQuery.java	(date 1576293000604)
+++ app/src/main/java/com/furja/utils/LocalBadTypeQuery.java	(date 1576293000604)
@@ -0,0 +1,46 @@
+package com.furja.utils;
+
+import android.text.TextUtils;
+
+import com.furja.overall.FurjaApp;
+import com.furja.overall.databases.BadTypeConfig;
+import com.furja.overall.databases.BadTypeConfigDao;
+import com.furja.devicemanager.databases.DaoSession;
+import org.greenrobot.greendao.query.QueryBuilder;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+/**
+ * 通过本地数据库查询内容
+ */
+
+public class LocalBadTypeQuery implements BadTypeQuery {
+
+    @Override
+    public List<String> query(String input) {
+        List<BadTypeConfig> badTypeConfigs=queryLocal(input);
+        List<String> results=new ArrayList<String>();
+        for(BadTypeConfig config:badTypeConfigs)
+            results.add(config.toString());
+        return results;
+    }
+
+    private  List<BadTypeConfig> queryLocal(String some)
+    {
+        if(TextUtils.isEmpty(some))
+            return Collections.EMPTY_LIST;
+        some=some.toUpperCase();
+        DaoSession daoSession= FurjaApp.getDaoSession();
+        BadTypeConfigDao dao=daoSession.getBadTypeConfigDao();
+        QueryBuilder queryBuilder=dao.queryBuilder();
+        List<BadTypeConfig> badLogs=
+                queryBuilder.where(BadTypeConfigDao.Properties.BadTypeCode.like("%"+some+"%"))
+                        .where(BadTypeConfigDao.Properties.SourcType.eq(2)).list();
+        if(badLogs==null)
+            return Collections.EMPTY_LIST;
+        else
+            return badLogs;
+    }
+
+}
Index: app/src/main/java/com/furja/utils/MyCrashHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/MyCrashHandler.java	(date 1576914086964)
+++ app/src/main/java/com/furja/utils/MyCrashHandler.java	(date 1576914086964)
@@ -0,0 +1,67 @@
+package com.furja.utils;
+
+import android.content.Context;
+import android.provider.Settings;
+
+import com.furja.overall.FurjaApp;
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.overall.databases.ErrorLog;
+import com.furja.overall.databases.ErrorLogDao;
+
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+import java.lang.Thread.UncaughtExceptionHandler;
+
+import io.sentry.Sentry;
+import io.sentry.SentryClientFactory;
+import io.sentry.android.AndroidSentryClientFactory;
+import io.sentry.event.BreadcrumbBuilder;
+import io.sentry.event.User;
+
+import static com.furja.utils.Utils.getDeviceID;
+import static com.furja.utils.Utils.getIPAddress;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 未捕捉异常的日志上传
+ */
+
+public class MyCrashHandler implements UncaughtExceptionHandler {
+    @Override
+    public void uncaughtException(Thread thread, Throwable ex) {
+        Sentry.capture(ex);
+        showLog(getStackTraceInfo(ex));
+        FurjaApp.getInstance().restartApp();
+    }
+
+    public static void init(Context applicationContext){
+        MyCrashHandler myCrashHandler = new MyCrashHandler();
+        Thread.setDefaultUncaughtExceptionHandler(myCrashHandler);
+        SentryClientFactory factory=new AndroidSentryClientFactory(applicationContext);
+        Sentry.init("http://0d81a4cf6b4a40bd90044bd6c45c089b@192.168.8.202:9000/3",factory);
+    }
+
+    private  String getStackTraceInfo(final Throwable throwable) {
+        String trace = "";
+        try {
+            Writer writer = new StringWriter();
+            PrintWriter pw = new PrintWriter(writer);
+            throwable.printStackTrace(pw);
+            trace = writer.toString();
+            pw.close();
+        } catch (Exception e) {
+            return "";
+        }
+        return trace;
+    }
+
+    public  void saveException(Throwable ex) {
+        String errorDetail=getStackTraceInfo(ex);
+        showLog("重启:"+errorDetail);
+        ErrorLog errorLog=new ErrorLog(errorDetail);
+        DaoSession daoSession= FurjaApp.getDaoSession();
+        ErrorLogDao dao=daoSession.getErrorLogDao();
+        dao.saveInTx(errorLog);
+    }
+}
Index: app/src/main/java/com/furja/utils/InneURL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/InneURL.java	(date 1576286948005)
+++ app/src/main/java/com/furja/utils/InneURL.java	(date 1576286948005)
@@ -0,0 +1,25 @@
+package com.furja.utils;
+
+/**
+ * 内网的URL
+ */
+public class InneURL {
+    public static final String FURJA_LOGIN_URL ="http://192.168.10.5:5050/bcwebservice/Service.asmx/";
+    public static final String FURJA_BARCODEINFO_URL ="http://192.168.8.46:8118/FJCommonInterface/GetBarCodeInfo/";
+    public static final String FURJA_UPLOAD_URL ="http://192.168.8.46:8118/FJBadTypeInterface/SendBadTypeLog/";
+    public static final String FURJA_BADTYPEBASIC_URL ="http://192.168.8.46:8118/FJBadTypeInterface/GetBadTypeBasicData";
+    public static final String FJ_BADTYPETOTAL_WORKPLACE ="http://192.168.8.46:8118/FJBadTypeInterface/GetBadTypeTotal/";
+    public static final String FURIA_RELEASE_URL ="http://192.168.8.46:8118/FJBadTypeInterface/SendProductRelease/";
+    public static final String FURJA_SCDHINFO_URL="http://192.168.10.5:5050/bcwebservice/Service.asmx/GetSCDHInfo";
+    public static final String FURJA_DEVICE_INFO_GET="http://192.168.8.46:8118/FJDeviceManagerInterface/GetDeviceManagerData/";
+    public static final String PISPOTCHECK_UPLOAD_URL ="http://192.168.8.46:8118/FJDeviceManagerInterface/SendDeviceManagerCheck/";
+    public static final String FURJA_VERIFYJY_URL ="http://192.168.8.46:8118/FJBadTypeInterface/GetJYProductInfo/";
+
+
+//    public static final String FURJA_BARCODEINFO_URL ="http://www.nbfurja.com/FJCommonInterface/GetBarCodeInfo/";
+//    public static final String FURJA_UPLOAD_URL ="http://www.nbfurja.com/FJBadTypeInterface/SendBadTypeLog/";
+//    public static final String FURJA_DEVICE_INFO_GET="http://www.nbfurja.com/FJDeviceManagerInterface/GetDeviceManagerData/";
+//    public static final String PISPOTCHECK_UPLOAD_URL ="http://www.nbfurja.com/FJDeviceManagerInterface/SendDeviceManagerCheck/";
+//    public static final String FURJA_BADTYPEBASIC_URL ="http://www.nbfurja.com/FJBadTypeInterface/GetBadTypeBasicData";
+
+}
Index: app/src/main/java/com/furja/utils/StatusBarUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/utils/StatusBarUtil.java	(date 1576680317373)
+++ app/src/main/java/com/furja/utils/StatusBarUtil.java	(date 1576680317373)
@@ -0,0 +1,146 @@
+package com.furja.utils;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Build;
+
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.view.WindowManager;
+
+import java.lang.reflect.Field;
+import java.lang.reflect.Method;
+
+public class StatusBarUtil {
+
+    private static final int INVALID_VAL = -111;
+    private static final int COLOR_DEFAULT = Color.parseColor("#ffffff");
+
+
+    public static void compat(Activity activity, int statusColor)
+    {
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP)
+        {
+            int color = COLOR_DEFAULT;
+            if (statusColor != INVALID_VAL)
+            {
+                activity.getWindow().setStatusBarColor(statusColor);
+            }else {
+                activity.getWindow().setStatusBarColor(color);
+            }
+            return;
+        }
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP)
+        {
+            int color = COLOR_DEFAULT;
+            ViewGroup contentView = (ViewGroup) activity.findViewById(android.R.id.content);
+            if (statusColor != INVALID_VAL)
+            {
+                color = statusColor;
+            }
+            View statusBarView = new View(activity);
+            ViewGroup.LayoutParams lp = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
+                    getStatusBarHeight(activity));
+            statusBarView.setBackgroundColor(color);
+            contentView.addView(statusBarView, lp);
+        }
+
+    }
+
+
+    public static void compat(Activity activity)
+    {
+        compat(activity, INVALID_VAL);
+    }
+
+
+    public static int getStatusBarHeight(Context context)
+    {
+        int result = 0;
+        int resourceId = context.getResources().getIdentifier("status_bar_height", "dimen", "android");
+        if (resourceId > 0)
+        {
+            result = context.getResources().getDimensionPixelSize(resourceId);
+        }
+        return result;
+    }
+    /**
+     * 小米MIUI系统 亲测好用
+     * @param window
+     * @param dark
+     * @return
+     */
+    public static boolean MIUISetStatusBarLightMode(Window window, boolean dark) {
+        boolean result = false;
+        if (window != null) {
+            Class clazz = window.getClass();
+            try {
+                int darkModeFlag = 0;
+                Class layoutParams = Class.forName("android.view.MiuiWindowManager$LayoutParams");
+                Field field = layoutParams.getField("EXTRA_FLAG_STATUS_BAR_DARK_MODE");
+                darkModeFlag = field.getInt(layoutParams);
+                Method extraFlagField = clazz.getMethod("setExtraFlags", int.class, int.class);
+                if(dark){
+                    extraFlagField.invoke(window,darkModeFlag,darkModeFlag);//状态栏透明且黑色字体
+                }else{
+                    extraFlagField.invoke(window, 0, darkModeFlag);//清除黑色字体
+                }
+                result=true;
+            }catch (Exception e){
+
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 设置状态栏图标为深色和魅族特定的文字风格
+     * 可以用来判断是否为Flyme用户
+     * @param window 需要设置的窗口
+     * @param dark 是否把状态栏字体及图标颜色设置为深色
+     * @return  boolean 成功执行返回true
+     *
+     */
+    public static boolean FlymeSetStatusBarLightMode(Window window, boolean dark) {
+        boolean result = false;
+        if (window != null) {
+            try {
+                WindowManager.LayoutParams lp = window.getAttributes();
+                Field darkFlag = WindowManager.LayoutParams.class
+                        .getDeclaredField("MEIZU_FLAG_DARK_STATUS_BAR_ICON");
+                Field meizuFlags = WindowManager.LayoutParams.class
+                        .getDeclaredField("meizuFlags");
+                darkFlag.setAccessible(true);
+                meizuFlags.setAccessible(true);
+                int bit = darkFlag.getInt(null);
+                int value = meizuFlags.getInt(lp);
+                if (dark) {
+                    value |= bit;
+                } else {
+                    value &= ~bit;
+                }
+                meizuFlags.setInt(lp, value);
+                window.setAttributes(lp);
+                result = true;
+            } catch (Exception e) {
+
+            }
+        }
+        return result;
+    }
+
+    /**
+     * Android 6.0以上系统 修改状态栏字体颜色
+     */
+    public static void android6_SetStatusBarLightMode(Window window) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
+            window.getDecorView().setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);
+            window.setStatusBarColor(Color.TRANSPARENT);
+        }
+    }
+
+}
Index: app/src/main/java/com/furja/overall/contract/LogBadWithBnContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/contract/LogBadWithBnContract.java	(date 1576067824547)
+++ app/src/main/java/com/furja/overall/contract/LogBadWithBnContract.java	(date 1576067824547)
@@ -0,0 +1,31 @@
+package com.furja.overall.contract;
+
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.furja.overall.beans.WorkOrderInfo;
+
+/**
+ * Created by zhangmeng on 2017/12/3.
+ */
+
+public interface LogBadWithBnContract {
+    interface Model {
+        public int getItemCount();
+        public String getOptionTitle(int position);
+        public long getMarkerCount(int position);
+        public void addMarkerCount(int position);
+        public long getTotalBad();
+        public void updateData(WorkOrderInfo workOrderInfo);
+    }
+
+    interface View {
+        public void setRecyclerAdapter(RecyclerView.Adapter<RecyclerView.ViewHolder> adapter);
+        public void setButtonClickListener(android.view.View.OnClickListener buttonClickListener);
+        public void changeFocus();
+    }
+
+    interface Presenter {
+        public void syncAndUpdateData(WorkOrderInfo workOrderInfo);
+        public void syncData();
+    }
+}
Index: app/src/main/java/com/furja/overall/contract/WorkOrderContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/contract/WorkOrderContract.java	(date 1576067821152)
+++ app/src/main/java/com/furja/overall/contract/WorkOrderContract.java	(date 1576067821152)
@@ -0,0 +1,37 @@
+package com.furja.overall.contract;
+
+import android.widget.BaseAdapter;
+import android.widget.ListView;
+
+import com.furja.overall.beans.WorkOrderInfo;
+
+
+/**
+ * Created by zhangmeng on 2017/12/3.
+ */
+
+public interface WorkOrderContract {
+    interface Model {
+        public int getItemCount();
+        public String getTitle(int position);
+        public String getContent(int position);
+    }
+
+    interface View {
+        public void setListAdapter(BaseAdapter baseAdapter);
+        public ListView getAdapterView();
+        public void syncAndUpdateBadData();
+        public void setSelection(int position);
+
+        void requestFocus();
+
+        void clearFocus();
+
+        void onBackPress();
+    }
+
+    interface Presenter {
+        public void setListAdapter();
+        public WorkOrderInfo getWorkOrderInfo();
+    }
+}
Index: app/src/main/java/com/furja/overall/fragment/LogBadWithKeyFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/fragment/LogBadWithKeyFragment.java	(date 1576811729674)
+++ app/src/main/java/com/furja/overall/fragment/LogBadWithKeyFragment.java	(date 1576811729674)
@@ -0,0 +1,238 @@
+package com.furja.overall.fragment;
+
+import android.os.Bundle;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.widget.AppCompatAutoCompleteTextView;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.AdapterView;
+import android.widget.ImageButton;
+
+import com.furja.common.BaseFragment;
+import com.furja.overall.FurjaApp;
+import com.furja.overall.R;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.databases.BadMaterialLog;
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+import com.furja.utils.Utils;
+import com.furja.overall.view.BadItem;
+import com.furja.overall.view.GridSpacingItemDecoration;
+import com.furja.overall.view.KeyRecyclerAdapter;
+import com.furja.overall.view.MyAutoAdapter;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.concurrent.Callable;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import butterknife.OnClick;
+import io.reactivex.Observable;
+import io.reactivex.functions.Consumer;
+import io.reactivex.schedulers.Schedulers;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * KEY界面的登录视图
+ */
+
+public class LogBadWithKeyFragment extends BaseFragment {
+    @BindView(R.id.edit_keyboardShow)
+    AppCompatAutoCompleteTextView edit_keyboardShow; //显示异常码
+
+    @BindView(R.id.btn_upload_keyFrag)
+    ImageButton btn_upload;
+    @BindView(R.id.btn_edit_keyFrag)
+    ImageButton btn_edit;
+    @BindView(R.id.recyclerview_keyfrag)
+    RecyclerView recyclerView;
+    private BadMaterialLog badMaterialLog;  //界面执有的数据库实例
+    private SharpBus sharpBus;
+    private WorkOrderInfo workOrderInfo;
+    private KeyRecyclerAdapter recyclerAdapter;
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View view=inflater.inflate(R.layout.fragment_badlogwithkey,container,false);
+        ButterKnife.bind(this,view);
+
+        MyAutoAdapter myAutoAdapter=new MyAutoAdapter(mContext,R.layout.simplelistitem);
+        edit_keyboardShow.setAdapter(myAutoAdapter);
+        recyclerView.setLayoutManager(new GridLayoutManager(mContext,4));
+        GridSpacingItemDecoration itemDecoration
+                =new GridSpacingItemDecoration(4,20,true);
+        recyclerView.setHasFixedSize(true);
+        recyclerView.addItemDecoration(itemDecoration);
+        recyclerAdapter=new KeyRecyclerAdapter();
+        recyclerView.setAdapter(recyclerAdapter);
+        sharpBus=SharpBus.getInstance();
+        edit_keyboardShow.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> adapterView, View view, int position, long id) {
+                String badCode= (String) adapterView.getItemAtPosition(position);
+                String[] spit=badCode.split(Constants.INTER_SPLIT);
+                badCode=spit[0];
+                addBadItem(badCode);
+            }
+        });
+        return view;
+    }
+
+    /**
+     * 往异常列表里添加item
+     * @param badCode
+     */
+    private void addBadItem(String badCode) {
+        if(TextUtils.isEmpty(badCode))
+        {
+            showToast("无有效输入,不予记录");
+            return;
+        }
+        cleanKeyEdit();
+        if(badMaterialLog==null||
+                TextUtils.isEmpty(badMaterialLog.getMaterialISN()))
+        {
+            showToast("设置物料代码后方可记录");
+            sharpBus.post(Constants.UPLOAD_FINISH,"ISN is NULL");
+            return;
+        }
+        if(recyclerAdapter!=null)
+            recyclerAdapter.addItem(badCode);
+    }
+
+
+
+
+    @OnClick({R.id.btn_edit_keyFrag,R.id.btn_upload_keyFrag,
+            R.id.edit_keyboardShow})
+    public void onClick(View v)
+    {
+
+        sharpBus.post(Constants.FRAGMENT_ON_TOUCH,"TOUCH");
+        switch (v.getId())
+        {
+
+            //编辑按钮
+            case R.id.btn_edit_keyFrag:
+                try{
+                    if(recyclerAdapter.getTotalCount()>0)
+                    {
+                        if(!recyclerAdapter.isEditing())
+                        {
+                            ((ImageButton)v).setImageResource(R.mipmap.ic_editing_src);
+                        }
+                        else
+                        {
+                            ((ImageButton)v).setImageResource(R.mipmap.ic_edit_src);
+                        }
+                        recyclerAdapter.setEditing(!recyclerAdapter.isEditing());
+                    }
+                    else
+                        showToast("暂无可编辑的对象");
+                }catch(Exception e){e.printStackTrace();}
+                break;
+            //上传按钮
+            case R.id.btn_upload_keyFrag:
+                if (badMaterialLog!=null
+                        &&recyclerAdapter.getTotalCount()<1)
+                    showToast("未记录,不予上传");
+                else
+                    syncAndUpdateKeyBadData(null);
+                break;
+        }
+    }
+
+    /**
+     * 当type为2时
+     * @param info
+     */
+    public void syncAndUpdateKeyBadData(final WorkOrderInfo info) {
+        if(info!=null)
+        {
+            workOrderInfo=info;
+            showLog("传入workInfo:"+workOrderInfo.toString());
+            resetBadMaterialLog();
+        }
+        Observable
+                .fromCallable(new Callable<Object>() {
+            @Override
+            public Object call() throws Exception {
+                syncToLocal();
+                return "SaveDataBaseFinish";
+            }})
+                .subscribeOn(Schedulers.io())
+                .observeOn(Schedulers.newThread())
+                .subscribe(new Consumer<Object>() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        if(!badMaterialLog.isUploaded())
+                        {
+                            if(badMaterialLog.getBadCount()>0) {
+                                sharpBus.post(Constants.UPLOAD_FINISH,"finish");
+                                recyclerAdapter.clearData();
+                                resetBadMaterialLog();
+                            }
+                        }
+                    }
+                });
+    }
+
+    /**
+     * 上传数据后重置当前 执有的数据库实例
+     */
+    private void resetBadMaterialLog() {
+        if(workOrderInfo==null)
+            workOrderInfo=new WorkOrderInfo("","","");
+        if(FurjaApp.getUser()!=null)
+        {
+            List<Long> markCounts=new ArrayList<Long>();
+            badMaterialLog=
+                    new BadMaterialLog(workOrderInfo,2, markCounts,0);
+        }
+    }
+
+
+
+    /**
+     * 将当前数据保存至本地
+     */
+    private void syncToLocal() {
+        if(badMaterialLog!=null&&recyclerAdapter!=null)
+        {
+            List<BadItem> datas=recyclerAdapter.getmData();
+            List<String> badcodes=new ArrayList<String>();
+            List<String> codeCounts=new ArrayList<String>();
+            for(BadItem item:datas)
+            {
+                badcodes.add(item.getBadCode());
+                codeCounts.add(item.getCodeCount()+"");
+            }
+            badMaterialLog.setBadTypeCode(badcodes);
+            badMaterialLog.setBadCodeCount(codeCounts);
+            badMaterialLog.setBadCount(recyclerAdapter.getTotalCount());
+            Utils.saveToLocal(badMaterialLog);
+        }
+        else
+            resetBadMaterialLog();
+    }
+
+
+
+
+    /**
+     * 将edit_keyboardShow
+     * 的AutoCompleteTextView清空
+     */
+    private void cleanKeyEdit() {
+        edit_keyboardShow.setText("");
+    }
+
+}
Index: app/src/main/java/com/furja/common/BaseFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/common/BaseFragment.java	(date 1576849299951)
+++ app/src/main/java/com/furja/common/BaseFragment.java	(date 1576849299951)
@@ -0,0 +1,30 @@
+package com.furja.common;
+
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+
+import com.furja.overall.ui.LoginActivity;
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+
+/**
+ * Created by zhangmeng on 2017/12/3.
+ */
+
+public abstract class BaseFragment extends Fragment {
+    protected Context mContext;
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        this.mContext=getContext();
+    }
+
+    public void switchToLogin() {
+        Intent intent=new Intent(mContext, LoginActivity.class);
+        startActivity(intent);
+        getActivity().finish();
+    }
+}
Index: app/src/main/java/com/furja/overall/databases/BadMaterialLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/databases/BadMaterialLog.java	(date 1576293000623)
+++ app/src/main/java/com/furja/overall/databases/BadMaterialLog.java	(date 1576293000623)
@@ -0,0 +1,432 @@
+package com.furja.overall.databases;
+
+import com.alibaba.fastjson.JSON;
+import com.furja.overall.FurjaApp;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.json.UploadDataJson;
+import com.furja.utils.Constants;
+import com.furja.utils.Utils;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import org.greenrobot.greendao.DaoException;
+import org.greenrobot.greendao.annotation.Convert;
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import okhttp3.Call;
+import com.furja.devicemanager.databases.DaoSession;
+
+/**
+ * GreenDao的品质异常类型基类
+ */
+@Entity(active = true)
+public class BadMaterialLog {
+    @Id(autoincrement = true)
+    private Long id;
+
+    @NotNull
+    private int sourceType;  // 1表示btn录入的数据,2表示key录入的数据,区分不同场景
+    @NotNull
+    private String qcPersonnel;   //质检人员
+    @NotNull
+    private String materialISN;
+    private String operatorId;
+    private String workPlaceId;
+    private Date collectionDate;
+    //每一个异常的代码,ButtonView使用ID,KeyView使用字母数字组成的代码
+    @Convert(columnType = String.class, converter = StringConverter.class)
+    private List<String> badTypeCode;
+    //各异常类型(badTypeCode)的计数集
+    @Convert(columnType = String.class, converter = StringConverter.class)
+    private List<String> badCodeCount;
+
+    private long badCount;  //集合,究竟有多少次品
+
+    @NotNull
+    private boolean isUploaded;
+
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+    /** Used for active entity operations. */
+    @Generated(hash = 308540047)
+    private transient BadMaterialLogDao myDao;
+
+    @Keep
+    public BadMaterialLog(WorkOrderInfo workOrderInfo, int sourceType, List<Long> markCounts, long BadCount) {
+        this.id=null;
+        setWorkOrderInfo(workOrderInfo);
+        setSourceType(sourceType);
+        this.qcPersonnel= FurjaApp.getUser().getUserId();
+        setLongBadCounts(markCounts);
+        this.badCount = BadCount;
+        this.collectionDate= Calendar.getInstance().getTime();
+        setIsUploaded(false);
+    }
+
+    @Keep
+    public BadMaterialLog(WorkOrderInfo workOrderInfo, int sourceType, List<String> markCounts) {
+        this.id=null;
+        setWorkOrderInfo(workOrderInfo);
+        setSourceType(sourceType);
+        this.qcPersonnel= FurjaApp.getUser().getUserId();
+        setBadCodeCount(markCounts);
+        this.badCount = markCounts.size();
+        this.collectionDate= Calendar.getInstance().getTime();
+        setIsUploaded(false);
+    }
+
+
+
+    @Generated(hash = 34962087)
+    public BadMaterialLog() {
+    }
+
+    @Generated(hash = 1854446091)
+    public BadMaterialLog(Long id, int sourceType, @NotNull String qcPersonnel, @NotNull String materialISN,
+            String operatorId, String workPlaceId, Date collectionDate, List<String> badTypeCode,
+            List<String> badCodeCount, long badCount, boolean isUploaded) {
+        this.id = id;
+        this.sourceType = sourceType;
+        this.qcPersonnel = qcPersonnel;
+        this.materialISN = materialISN;
+        this.operatorId = operatorId;
+        this.workPlaceId = workPlaceId;
+        this.collectionDate = collectionDate;
+        this.badTypeCode = badTypeCode;
+        this.badCodeCount = badCodeCount;
+        this.badCount = badCount;
+        this.isUploaded = isUploaded;
+    }
+
+    /**
+     * 针对本数据库上传数据
+     */
+    @Keep
+    public synchronized void uploadToRemote()
+    {
+        if(isUploaded)
+            return;
+        Utils.showLog("只有我一个人在战斗");
+        String uploadUrl= Constants.FURJA_UPLOAD_URL;
+        try {
+            Map<String, String> uploadParams = getUploadParams();
+            Utils.showLog(uploadParams.toString());
+            OkHttpUtils
+                    .post()
+                    .url(uploadUrl)
+                    .params(uploadParams)
+                    .build()
+                    .execute(new StringCallback() {
+                        @Override
+                        public void onError(Call call, Exception e, int i) {
+                            e.printStackTrace();
+                            Utils.showToast("网络异常,数据已保存");
+                        }
+
+                        @Override
+                        public void onResponse(String responce, int i) {
+                            Utils.showLog("上传所得信息:"+responce);
+                            checkUploadSuccessAndSave(responce);
+                        }
+
+                        /**
+                         * 根据返回的Json检验是否上传成功
+                         *  如果上传成功则更新存入本地数据库
+                         *  在网络异常时未上传成功需考虑定时上传
+                         */
+                        private void checkUploadSuccessAndSave(String responce) {
+                            UploadDataJson uploadDataJson
+                                    = JSON.parseObject(responce,UploadDataJson.class);
+                            if(uploadDataJson!=null&&uploadDataJson.getErrCode()==100)
+                            {
+                                setIsUploaded(true);
+                                Utils.showLog("上传数据成功啦");
+                                Utils.showToast("上传成功");
+                                Utils.delete(BadMaterialLog.this);
+                            }
+                            else
+                            {
+                                Utils.showLog(responce+">"+toUploadString());
+                                Utils.saveToLocal(BadMaterialLog.this);
+                            }
+                        }
+                    });
+        } catch (Exception e) {
+            Utils.showLog("核查url: "+uploadUrl);
+        }
+    }
+
+    @Keep
+    public synchronized void uploadToRemoteBackGround()
+    {
+        if(isUploaded)
+            return;
+        Utils.showLog("只有我一个人在战斗");
+        String uploadUrl= Constants.FURJA_UPLOAD_URL;
+        try {
+            Map<String, String> uploadParams = getUploadParams();
+            OkHttpUtils
+                    .post()
+                    .url(uploadUrl)
+                    .params(uploadParams)
+                    .build()
+                    .execute(new StringCallback() {
+                        @Override
+                        public void onError(Call call, Exception e, int i) {
+                            e.printStackTrace();
+                        }
+
+                        @Override
+                        public void onResponse(String responce, int i) {
+                            checkUploadSuccessAndSave(responce);
+                        }
+
+                        /**
+                         * 根据返回的Json检验是否上传成功
+                         *  如果上传成功则更新存入本地数据库
+                         *  在网络异常时未上传成功需考虑定时上传
+                         */
+                        private void checkUploadSuccessAndSave(String responce) {
+                            UploadDataJson uploadDataJson
+                                    = JSON.parseObject(responce,UploadDataJson.class);
+                            if(uploadDataJson!=null&&uploadDataJson.getErrCode()==100)
+                            {
+                                setIsUploaded(true);
+                                Utils.showLog(responce);
+                                Utils.delete(BadMaterialLog.this);
+                            }
+                            else
+                            {
+                                Utils.showLog(responce+">"+toUploadString());
+                                Utils.saveToLocal(BadMaterialLog.this);
+                            }
+                        }
+                    });
+        } catch (Exception e) {
+            Utils.showLog("核查url: "+uploadUrl);
+        }
+    }
+
+    @Keep
+    private Map<String, String> getUploadParams() {
+        Map<String,String> uploadParams=new HashMap<String,String>();
+        uploadParams.put("QCheckPersonnel",qcPersonnel);
+        uploadParams.put("MaterialISN", materialISN);
+        uploadParams.put("OperatorID",operatorId);
+        uploadParams.put("WorkPlaceId",workPlaceId);
+        uploadParams.put("SourceType", getSourceType()+"");
+        uploadParams.put("BadTypeCode",getStringOfBadCode());
+        uploadParams.put("BadTypeCount", getStringOfCodeCount());
+        return uploadParams;
+    }
+
+    /**
+     * 返回上传参数的字符串明细,以供校验
+     * @return
+     */
+    @Keep
+    public String toUploadString()
+    {
+        return getUploadParams().toString();
+    }
+
+    /**
+     * 将本实例中的defections列表转换成字符串用于提交上传
+     */
+    @Keep
+    public String getStringOfCodeCount()
+    {
+        if(badCodeCount ==null)
+            return "";
+        StringConverter stringConverter=new StringConverter();
+        return stringConverter.convertToDatabaseValue(badCodeCount);
+    }
+    @Keep
+    public String getStringOfBadCode() {
+        if(badCodeCount ==null)
+            return "";
+        StringConverter stringConverter=new StringConverter();
+        return stringConverter.convertToDatabaseValue(badTypeCode);
+    }
+
+
+    /**
+     *
+     * @param badCounts
+     */
+    @Keep
+    public void setLongBadCounts(List<Long> badCounts) {
+        List<String> defections=new ArrayList<String>();
+        for(Long count:badCounts)
+            defections.add(count.toString());
+        this.badCodeCount =defections;
+    }
+    @Keep
+    public List<Long> toLongList() {
+        List<Long> longList=new ArrayList<Long>();
+        for(String count: badCodeCount)
+            longList.add(Long.valueOf(count));
+        return longList;
+    }
+
+
+
+
+    @Keep
+    public void setWorkOrderInfo(WorkOrderInfo workOrderInfo) {
+        this.materialISN = workOrderInfo.getMaterialISN();
+        this.operatorId= workOrderInfo.getOperatorId();
+        this.workPlaceId= workOrderInfo.getWorkPlaceId();
+    }
+
+    public List<String> getBadTypeCode() {
+        return this.badTypeCode;
+    }
+
+    public void setBadTypeCode(List<String> badTypeCode) {
+        this.badTypeCode = badTypeCode;
+    }
+
+    public Long getId() {
+        return this.id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    public int getSourceType() {
+        return this.sourceType;
+    }
+
+    public void setSourceType(int sourceType) {
+        this.sourceType = sourceType;
+    }
+
+
+    public String getMaterialISN() {
+        return this.materialISN;
+    }
+
+    public void setMaterialISN(String materialISN) {
+        this.materialISN = materialISN;
+    }
+
+    public String getOperatorId() {
+        return this.operatorId;
+    }
+
+    public void setOperatorId(String operatorId) {
+        this.operatorId = operatorId;
+    }
+
+    public String getWorkPlaceId() {
+        return this.workPlaceId;
+    }
+
+    public void setWorkPlaceId(String workPlaceId) {
+        this.workPlaceId = workPlaceId;
+    }
+
+    public Date getCollectionDate() {
+        return this.collectionDate;
+    }
+
+    public void setCollectionDate(Date collectionDate) {
+        this.collectionDate = collectionDate;
+    }
+
+    public List<String> getBadCodeCount() {
+        return this.badCodeCount;
+    }
+
+    public void setBadCodeCount(List<String> badCodeCount) {
+        this.badCodeCount = badCodeCount;
+    }
+
+    public long getBadCount() {
+        return this.badCount;
+    }
+
+    public void setBadCount(long badCount) {
+        this.badCount = badCount;
+    }
+
+    public boolean isUploaded() {
+        return this.isUploaded;
+    }
+
+    public void setIsUploaded(boolean isUploaded) {
+        this.isUploaded = isUploaded;
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+
+    public String getQcPersonnel() {
+        return this.qcPersonnel;
+    }
+
+    public void setQcPersonnel(String qcPersonnel) {
+        this.qcPersonnel = qcPersonnel;
+    }
+
+    public boolean getIsUploaded() {
+        return this.isUploaded;
+    }
+
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 400131254)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getBadMaterialLogDao() : null;
+    }
+
+
+
+}
Index: app/src/main/java/com/furja/overall/fragment/LogBadWithBtnFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/fragment/LogBadWithBtnFragment.java	(date 1576461051052)
+++ app/src/main/java/com/furja/overall/fragment/LogBadWithBtnFragment.java	(date 1576461051052)
@@ -0,0 +1,89 @@
+package com.furja.overall.fragment;
+
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageButton;
+
+import com.furja.common.BaseFragment;
+import com.furja.overall.R;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.contract.LogBadWithBnContract;
+import com.furja.overall.presenter.BadLogWithBtnPresenter;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * Created by zhangmeng on 2017/1/3.
+ */
+
+public class LogBadWithBtnFragment extends BaseFragment implements LogBadWithBnContract.View {
+    @BindView(R.id.recycler_marker)
+    RecyclerView markerRecyclerView;
+    //上述MarkerRecyclerView与数据交互使用的presenter
+    private BadLogWithBtnPresenter mBadLogWithBtnPresenter;
+    @BindView(R.id.btn_redo_btnFrag)
+    ImageButton redo_button;
+    @BindView(R.id.btn_undo_btnFrag)
+    ImageButton undo_button;
+    @BindView(R.id.btn_submit_btnFrag)
+    ImageButton submit_button;
+    @BindView(R.id.btn_edit_btnFrag)
+    ImageButton edit_button;
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View view=inflater.inflate(R.layout.fragment_badlogwithbtn,container,false);
+        ButterKnife.bind(this,view);
+
+        markerRecyclerView.setLayoutManager(new GridLayoutManager(mContext,4));
+        mBadLogWithBtnPresenter =new BadLogWithBtnPresenter(this);
+
+
+        return view;
+    }
+
+
+    @Override
+    public void setRecyclerAdapter(RecyclerView.Adapter<RecyclerView.ViewHolder> adapter) {
+        markerRecyclerView.setAdapter(adapter);
+    }
+
+    @Override
+    public void setButtonClickListener(View.OnClickListener buttonClickListener) {
+        redo_button.setOnClickListener(buttonClickListener);
+        undo_button.setOnClickListener(buttonClickListener);
+        edit_button.setOnClickListener(buttonClickListener);
+        submit_button.setOnClickListener(buttonClickListener);
+    }
+
+    //转移焦点
+    @Override
+    public void changeFocus() {
+        undo_button.performClick();
+    }
+
+
+    public void syncAndUpdateBtnBadData(WorkOrderInfo workOrderInfo) {
+        if(mBadLogWithBtnPresenter!=null)
+            mBadLogWithBtnPresenter.syncAndUpdateData(workOrderInfo);
+    }
+
+
+    /**
+     * 将工单信息及
+     */
+    public void syncData()
+    {
+        mBadLogWithBtnPresenter.syncData();
+        showLog("数据同步完成");
+    }
+
+}
Index: app/src/main/java/com/furja/overall/databases/WorkOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/databases/WorkOrder.java	(date 1576067824026)
+++ app/src/main/java/com/furja/overall/databases/WorkOrder.java	(date 1576067824026)
@@ -0,0 +1,202 @@
+package com.furja.overall.databases;
+
+
+
+import org.greenrobot.greendao.DaoException;
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+import com.furja.devicemanager.databases.DaoSession;
+
+/**
+ *GreenDao的数据工单基类
+ * 包含物料信息、工号、日期等
+ */
+@Entity(active = true)
+public class WorkOrder {
+    @Id(autoincrement = true)
+    private Long id;
+    private String materialISN; //物料内码
+    @NotNull
+    private String materielID;    //物料代码
+    @NotNull
+    private String materielName;    //物料名称
+    @NotNull
+    private String norms;   //规格
+
+    @NotNull
+    private Date saveDate;  //日期
+    private String operatorId;    //操作员
+    private String workplaceID;   //工位号
+
+    private long defectCount;   //不良品数量
+
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+
+    /** Used for active entity operations. */
+    @Generated(hash = 771970160)
+    private transient WorkOrderDao myDao;
+
+    
+
+    @Generated(hash = 2081754328)
+    public WorkOrder() {
+    }
+
+    @Generated(hash = 1188845399)
+    public WorkOrder(Long id, String materialISN, @NotNull String materielID,
+            @NotNull String materielName, @NotNull String norms, @NotNull Date saveDate,
+            String operatorId, String workplaceID, long defectCount) {
+        this.id = id;
+        this.materialISN = materialISN;
+        this.materielID = materielID;
+        this.materielName = materielName;
+        this.norms = norms;
+        this.saveDate = saveDate;
+        this.operatorId = operatorId;
+        this.workplaceID = workplaceID;
+        this.defectCount = defectCount;
+    }
+
+    public Long getId() {
+        return this.id;
+    }
+
+    public void setId(Long id) {
+        this.id = id;
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+
+    public String getMaterielID() {
+        return this.materielID;
+    }
+
+    public void setMaterielID(String materielID) {
+        this.materielID = materielID;
+    }
+
+    public String getMaterielName() {
+        return this.materielName;
+    }
+
+    public void setMaterielName(String materielName) {
+        this.materielName = materielName;
+    }
+
+    public String getNorms() {
+        return this.norms;
+    }
+
+    public void setNorms(String norms) {
+        this.norms = norms;
+    }
+
+    public Date getSaveDate() {
+        return this.saveDate;
+    }
+
+    public void setSaveDate(Date saveDate) {
+        this.saveDate = saveDate;
+    }
+
+
+
+    public String getWorkplaceID() {
+        return this.workplaceID;
+    }
+
+    public void setWorkplaceID(String workplaceID) {
+        this.workplaceID = workplaceID;
+    }
+    @Keep
+    public List<String> toStringList()
+    {
+        List<String> result=new ArrayList<String>();
+        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
+        result.add(""+getMaterielID());
+        result.add(getMaterielName());
+        result.add(getNorms());
+        result.add(formater.format(getSaveDate()));
+        result.add(getOperatorId());
+        result.add(getWorkplaceID());
+        result.add(""+getDefectCount());
+        return result;
+    }
+
+    public long getDefectCount() {
+        return this.defectCount;
+    }
+
+    public void setDefectCount(long defectCount) {
+        this.defectCount = defectCount;
+    }
+
+    public String getOperatorId() {
+        return this.operatorId;
+    }
+
+    public void setOperatorId(String operatorId) {
+        this.operatorId = operatorId;
+    }
+
+    public String getMaterialISN() {
+        return this.materialISN;
+    }
+
+    public void setMaterialISN(String materialISN) {
+        this.materialISN = materialISN;
+    }
+
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 1463153995)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getWorkOrderDao() : null;
+    }
+
+
+}
Index: app/src/main/java/com/furja/overall/databases/BadTypeConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/databases/BadTypeConfig.java	(date 1576286948339)
+++ app/src/main/java/com/furja/overall/databases/BadTypeConfig.java	(date 1576286948339)
@@ -0,0 +1,125 @@
+package com.furja.overall.databases;
+
+import com.furja.utils.Constants;
+
+import org.greenrobot.greendao.DaoException;
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+import com.furja.devicemanager.databases.DaoSession;
+
+/**
+ * GreenDao异常基础类型配置实例
+ */
+@Entity(active = true)
+public class BadTypeConfig {
+    @Id(autoincrement = true)
+    private Long id;
+
+    @NotNull
+    private long sourcType;  // 1表示btn录入的数据,2表示key录入的数据,区分不同场景
+    @NotNull
+    private String badTypeCode; //具体上传使用的ID或异常代码如F0010
+    private String typeDesp; //每个ID对应的异常类型,如ID为1时对应的是料花
+
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+
+    /** Used for active entity operations. */
+    @Generated(hash = 1290593246)
+    private transient BadTypeConfigDao myDao;
+
+
+
+    @Generated(hash = 1023180599)
+    public BadTypeConfig(Long id, long sourcType, @NotNull String badTypeCode,
+            String typeDesp) {
+        this.id = id;
+        this.sourcType = sourcType;
+        this.badTypeCode = badTypeCode;
+        this.typeDesp = typeDesp;
+    }
+    @Generated(hash = 1419734551)
+    public BadTypeConfig() {
+    }
+
+
+
+
+
+    public Long getId() {
+        return this.id;
+    }
+    public void setId(Long id) {
+        this.id = id;
+    }
+    public long getSourcType() {
+        return this.sourcType;
+    }
+    public void setSourcType(long sourcType) {
+        this.sourcType = sourcType;
+    }
+    public String getBadTypeCode() {
+        return this.badTypeCode;
+    }
+    public void setBadTypeCode(String badTypeCode) {
+        this.badTypeCode = badTypeCode;
+    }
+    public String getTypeDesp() {
+        return this.typeDesp;
+    }
+    public void setTypeDesp(String typeDesp) {
+        this.typeDesp = typeDesp;
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+    @Keep
+    public String toString()
+    {
+        return badTypeCode+ Constants.INTER_SPLIT +typeDesp;
+    }
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 120303353)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getBadTypeConfigDao() : null;
+    }
+}
Index: app/src/main/java/com/furja/overall/databases/ErrorLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/databases/ErrorLog.java	(date 1576286948464)
+++ app/src/main/java/com/furja/overall/databases/ErrorLog.java	(date 1576286948464)
@@ -0,0 +1,139 @@
+package com.furja.overall.databases;
+
+import com.furja.utils.Utils;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import org.greenrobot.greendao.annotation.Entity;
+import org.greenrobot.greendao.annotation.Id;
+import org.greenrobot.greendao.annotation.Keep;
+import org.greenrobot.greendao.annotation.NotNull;
+import org.greenrobot.greendao.annotation.Generated;
+import org.greenrobot.greendao.DaoException;
+
+import okhttp3.Call;
+
+import static com.furja.utils.Constants.EXCEPTION_LOG_URL;
+import static com.furja.utils.Utils.showLog;
+import com.furja.devicemanager.databases.DaoSession;
+
+/**
+ * 将异常日志储存至本地待时机上传
+ */
+@Entity(active = true)
+public class ErrorLog {
+    @Id(autoincrement = true)
+    private Long id;
+    private String errorDetail;
+    @NotNull
+    private boolean isUploaded;
+    /** Used to resolve relations */
+    @Generated(hash = 2040040024)
+    private transient DaoSession daoSession;
+    /** Used for active entity operations. */
+    @Generated(hash = 992795882)
+    private transient ErrorLogDao myDao;
+    @Generated(hash = 1071173917)
+    public ErrorLog(Long id, String errorDetail, boolean isUploaded) {
+        this.id = id;
+        this.errorDetail = errorDetail;
+        this.isUploaded = isUploaded;
+    }
+
+
+    @Generated(hash = 1694956548)
+    public ErrorLog() {
+    }
+    public Long getId() {
+        return this.id;
+    }
+    public void setId(Long id) {
+        this.id = id;
+    }
+    public String getErrorDetail() {
+        return this.errorDetail;
+    }
+    public void setErrorDetail(String errorDetail) {
+        this.errorDetail = errorDetail;
+    }
+    public boolean getIsUploaded() {
+        return this.isUploaded;
+    }
+    public void setIsUploaded(boolean isUploaded) {
+        this.isUploaded = isUploaded;
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#delete(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 128553479)
+    public void delete() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.delete(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#refresh(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 1942392019)
+    public void refresh() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.refresh(this);
+    }
+    /**
+     * Convenient call for {@link org.greenrobot.greendao.AbstractDao#update(Object)}.
+     * Entity must attached to an entity context.
+     */
+    @Generated(hash = 713229351)
+    public void update() {
+        if (myDao == null) {
+            throw new DaoException("Entity is detached from DAO context");
+        }
+        myDao.update(this);
+    }
+    @Keep
+    public ErrorLog(String errorDetail)
+    {
+        this.id=null;
+        this.isUploaded=false;
+        this.errorDetail=errorDetail;
+    }
+    @Keep
+    public void upload()
+    {
+        showLog("上传:"+errorDetail);
+        OkHttpUtils.post()
+                .url(EXCEPTION_LOG_URL)
+                .addParams("errorLog",errorDetail)
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int id) {
+
+                    }
+
+                    @Override
+                    public void onResponse(String response, int id) {
+                        showLog("异常日志上传结果:"+response);
+                        if(response.contains("true"))
+                        {
+                            setIsUploaded(true);
+                            showLog(errorDetail+"的异常日志上传成功已删除");
+                            Utils.delete(ErrorLog.this);
+                        }
+                    }
+                });
+    }
+
+
+    /** called by internal mechanisms, do not call yourself. */
+    @Generated(hash = 643709584)
+    public void __setDaoSession(DaoSession daoSession) {
+        this.daoSession = daoSession;
+        myDao = daoSession != null ? daoSession.getErrorLogDao() : null;
+    }
+}
Index: app/src/main/java/com/furja/overall/databases/StringConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/databases/StringConverter.java	(date 1576067822913)
+++ app/src/main/java/com/furja/overall/databases/StringConverter.java	(date 1576067822913)
@@ -0,0 +1,67 @@
+package com.furja.overall.databases;
+
+import android.text.TextUtils;
+
+import org.greenrobot.greendao.converter.PropertyConverter;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * GreenDa存储List数组所需转换器
+ */
+
+public class StringConverter implements PropertyConverter<List<String>, String> {
+
+    @Override
+    public List<String> convertToEntityProperty(String databaseValue) {
+        if(TextUtils.isEmpty(databaseValue))
+            return null;
+        else
+        {
+            List<String> lst=new ArrayList<String>();
+            String[] strings=databaseValue.split(",");
+            for(String string:strings)
+                lst.add(string);
+            return lst;
+        }
+    }
+
+
+
+    @Override
+    public String convertToDatabaseValue(List<String> entityProperty) {
+        StringBuffer stringBuffer=new StringBuffer();
+        if(entityProperty==null)
+            return null;
+        else
+        {
+            for(String entity:entityProperty)
+            {
+                stringBuffer.append(entity);
+                stringBuffer.append(",");
+            }
+            if(stringBuffer.length()>0)
+                stringBuffer.deleteCharAt(stringBuffer.length()-1);
+            return stringBuffer.toString();
+        }
+    }
+}
+/**
+    private long materialFloer;
+    private long airMark;
+    private long shrinkAge;
+    private long lackMaterial;
+    private long mixedColor;
+    private long flowMark;
+    private long cutMaterial;
+    private long bumpMaterial;
+    private long foreignMaterial;
+    private long blackSpot;
+    private long whiteSpot;
+    private long greasyDirt;
+    private long rubberThread;
+    private long distortion;
+    private long tunePoor;
+    private long other;
+    **/
\ No newline at end of file
Index: hellocharts-library/build/outputs/logs/manifest-merger-debug-report.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hellocharts-library/build/outputs/logs/manifest-merger-debug-report.txt	(date 1576567621619)
+++ hellocharts-library/build/outputs/logs/manifest-merger-debug-report.txt	(date 1576567621619)
@@ -0,0 +1,37 @@
+-- Merging decision tree log ---
+manifest
+ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:1-9:12
+	package
+		ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:3:5-36
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+	android:versionName
+		ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:5:5-32
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+	xmlns:android
+		ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:2:11-69
+	android:versionCode
+		ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml:4:5-29
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+uses-sdk
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml reason: use-sdk injection requested
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+	android:targetSdkVersion
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+	android:minSdkVersion
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		ADDED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
+		INJECTED from F:\workplace\Android\OverallManager\hellocharts-library\AndroidManifest.xml
Index: app/src/main/java/com/furja/overall/presenter/WorkOrderPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/presenter/WorkOrderPresenter.java	(date 1576909071352)
+++ app/src/main/java/com/furja/overall/presenter/WorkOrderPresenter.java	(date 1576909071352)
@@ -0,0 +1,428 @@
+package com.furja.overall.presenter;
+
+import android.content.Context;
+import android.text.TextUtils;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.EditorInfo;
+import android.widget.BaseAdapter;
+import android.widget.EditText;
+import android.widget.ListView;
+import android.widget.TextView;
+
+import com.furja.overall.R;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.contract.WorkOrderContract;
+import com.furja.overall.model.WorkOrderModel;
+import com.furja.utils.SharpBus;
+import com.furja.overall.view.MyViewHolder;
+
+import java.util.concurrent.Callable;
+
+import io.reactivex.Observable;
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.functions.Consumer;
+
+import static com.furja.utils.Constants.FRAGMENT_ON_TOUCH;
+import static com.furja.utils.Constants.INFORMATION_HAS_NUL;
+import static com.furja.utils.Constants.MATERIAL_INTERNET_ABNORMAL;
+import static com.furja.utils.Constants.UPDATE_BAD_COUNT;
+import static com.furja.utils.Constants.UPDATE_WORKORDER_BY_MATERIAL;
+import static com.furja.utils.Constants.UPLOAD_FINISH;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+
+/**
+ * 用来作为显示工单信息的视图与数据交互的桥
+ */
+
+public class WorkOrderPresenter implements WorkOrderContract.Presenter {
+    private WorkOrderContract.View mWorkOrderView;
+    private WorkOrderModel mWorkOrderModel;
+    private OrderListAdapter mOrderListAdapter;
+    private Context mContext;
+    private int requestCounts=0;    //请求次数
+    private int currPosition=0;
+    public WorkOrderPresenter(WorkOrderContract.View workOrderView)
+    {
+        this.mWorkOrderView=workOrderView;
+        mWorkOrderModel=new WorkOrderModel();
+        mOrderListAdapter=new OrderListAdapter();
+        setListAdapter();
+        setListener();
+
+//        Observable.fromCallable(new Callable<Object>() {
+//            @Override
+//            public Object call() throws Exception {
+//                Thread.sleep(1000);
+//                return "";
+//            }})
+//                .subscribeOn(Schedulers.newThread())
+//                .observeOn(AndroidSchedulers.mainThread())
+//                .subscribe(new Consumer<Object>() {
+//                    @Override
+//                    public void accept(Object o) throws Exception {
+//                        mWorkOrderView.setSelection(0);
+//                        showChartLog("延时到了");
+//                    }
+//                });
+        mWorkOrderView.setSelection(0);
+    }
+
+
+    /**
+     * 设定各Button点击的监听器并注册物料信息更新后回调
+     */
+    private void setListener() {
+        //注册网络异常的观察者
+        registerObserver();
+        ListView view=mWorkOrderView.getAdapterView();
+        if(view==null)
+        {
+            showLog("没有获取到WorkListView");
+            return;
+        }
+        this.mContext=view.getContext();
+    }
+
+    private void registerObserver() {
+        SharpBus.getInstance()
+                .register(MATERIAL_INTERNET_ABNORMAL)
+                .subscribe(new Consumer<Object>() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        //从服务器获取物料信息网络失败重试
+                        requestCounts++;
+                        if(requestCounts<3)
+                            mWorkOrderModel.updateWorkOrderByBarCode(mWorkOrderModel.getMaterialBarCode());
+                        else
+                            showToast("网络异常或服务器离线,请重试");
+                    }
+                });
+        //注册获取物料信息的观察者
+        SharpBus.getInstance()
+                .register(UPDATE_WORKORDER_BY_MATERIAL)
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Consumer<Object>() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        //从服务器获取物料信息后获取响应更新视图
+                        if(o.toString().contains("finish"))
+                        {
+                            showLog("获取到物料信息");
+                            notifyAndUpdateBadData();
+                        }
+                        else
+                        {
+                            currPosition=0;
+                            mWorkOrderModel.setMaterialNull();
+                            mWorkOrderView.requestFocus();
+                            mWorkOrderView.setSelection(currPosition);
+                            if(mOrderListAdapter!=null)
+                            {
+                                mOrderListAdapter.notifyDataSetChanged();
+                            }
+                        }
+                        requestCounts=0;
+                    }
+                });
+
+        SharpBus.getInstance()
+                .register(INFORMATION_HAS_NUL)
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Consumer<Object>() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        //跳转焦点至没有填写信息的位置(物料代码、员工号、机台号)
+                        currPosition=Integer.valueOf(o.toString());
+                        mWorkOrderView.requestFocus();
+                        mWorkOrderView.setSelection(currPosition);
+                        showLog("没有输的位置是:"+currPosition);
+                        if(mOrderListAdapter!=null)
+                        {
+                            mOrderListAdapter.notifyDataSetChanged();
+                        }
+                    }
+                });
+        //注册上传成功的观察者
+        SharpBus.getInstance()
+                .register(UPLOAD_FINISH)
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Consumer<Object>() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        currPosition=0; //上传成功后置光标为0
+                        mWorkOrderModel.setMaterialNull();
+                        mWorkOrderView.requestFocus();
+                        mWorkOrderView.setSelection(0);
+                        showLog("收到了上传完成的指示");
+                        if(mOrderListAdapter!=null)
+                        {
+                            mOrderListAdapter.notifyDataSetChanged();
+                        }
+                    }
+                });
+        Observable observable= SharpBus.getInstance().register(FRAGMENT_ON_TOUCH);
+        observable.observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Consumer<Object>() {
+                               @Override
+                               public void accept(Object value) throws Exception {
+                                   currPosition=-1;
+                                   if(mOrderListAdapter!=null)
+                                       mOrderListAdapter.notifyDataSetChanged();
+                                   showLog(currPosition+"<Fragment"+value.toString());
+                               }
+                           });
+    }
+
+
+    /**
+     * 更新信息
+     */
+    private void notifyAndUpdateBadData() {
+        mOrderListAdapter.notifyDataSetChanged();
+        mWorkOrderView.syncAndUpdateBadData();
+    }
+
+
+    @Override
+    public void setListAdapter() {
+        mWorkOrderView.setListAdapter(mOrderListAdapter);
+    }
+
+    @Override
+    public WorkOrderInfo getWorkOrderInfo() {
+        return mWorkOrderModel.getWorkOrderInfo();
+    }
+
+    /**
+     * 储存当前工单信息至本地
+     */
+    public void syncLocalWorkOrderData() {
+        mWorkOrderModel.syncDataBase();
+    }
+
+
+
+    /**
+     * 存放物料、工位等信息的ListView 适配器
+     */
+    private class OrderListAdapter extends BaseAdapter{
+        int tempPosition=-2;  //上一个变化的EditText
+        public OrderListAdapter()
+        {
+            //注册监听器
+            Observable<Long> observable= SharpBus.getInstance().register(UPDATE_BAD_COUNT);
+            observable.observeOn(AndroidSchedulers.mainThread())
+                    .subscribe(new Consumer<Long>() {
+                        @Override
+                        public void accept(Long aLong) throws Exception {
+                            mWorkOrderModel.updateDefectCount(aLong);
+                            notifyDataSetChanged();
+                        }
+            });
+        }
+
+        @Override
+        public int getCount() {
+            return mWorkOrderModel.getItemCount();
+        }
+
+        @Override
+        public String getItem(int i) {
+            return mWorkOrderModel.getContent(i);
+        }
+        public String getTitle(int pos)
+        {
+            return mWorkOrderModel.getTitle(pos);
+        }
+
+
+        @Override
+        public long getItemId(int i) {
+            return i;
+        }
+
+        @Override
+        public View getView(final int position, View convertView, ViewGroup viewGroup) {
+            final MyViewHolder myViewHolder;
+            if(convertView==null)
+            {
+                convertView
+					= LayoutInflater.from(viewGroup.getContext()).inflate(R.layout.workinfo_item,null);
+                myViewHolder=new MyViewHolder(convertView);
+                convertView.setTag(myViewHolder);
+            }
+            else
+            {
+                myViewHolder=(MyViewHolder)convertView.getTag();
+            }
+            myViewHolder.getEditText()
+                    .setOnKeyListener(new View.OnKeyListener() {
+                @Override
+                public boolean onKey(View view, int i, KeyEvent keyEvent) {
+                    if(keyEvent.getKeyCode()==KeyEvent.KEYCODE_ENTER)
+                    {
+                        showLog("回车了");
+                        if(myViewHolder.getContent().length()>0)
+                            readInput(position, myViewHolder);
+                    }
+                    return false;
+                }
+            });
+            /**
+             * 用于处理焦点变迁的状态保存
+             */
+            myViewHolder.getEditText().setOnFocusChangeListener(new View.OnFocusChangeListener() {
+                @Override
+                public void onFocusChange(View view, boolean b) {
+                    EditText editText
+                            =(EditText)view;
+                    if(tempPosition!=currPosition)
+                    {
+                        tempPosition=currPosition;
+                    }
+                    else
+                    {
+                        return;
+                    }
+                    if(TextUtils.isEmpty(editText.getText()))
+                        return;
+                    if(!b)
+                    {
+                        if(position==4)
+                        {
+                            showLog("第4个:"+editText.getText());
+                            updateOperatorId(editText.getText().toString());
+                        }
+                        if(position==5)
+                        {
+                            showLog("第5个:"+editText.getText());
+                            updateWorkPlaceId(editText.getText().toString());
+                        }
+                    }
+                }
+            });
+
+            myViewHolder.getEditText().setOnTouchListener(new View.OnTouchListener() {
+                @Override
+                public boolean onTouch(View view, MotionEvent motionEvent) {
+                    currPosition=position;
+                    if(myViewHolder.onTouch(motionEvent))
+                    {
+                        if(position==4)
+                        {
+                            updateOperatorId(myViewHolder.getContent());
+                        }
+                        else if(position==5)
+                        {
+                            updateWorkPlaceId(myViewHolder.getContent());
+                        }
+                    }
+                    return false;
+                }
+            });
+            myViewHolder.getEditText().setOnEditorActionListener(new TextView.OnEditorActionListener() {
+                @Override
+                public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent) {
+                    showLog("编辑了Action");
+                    if (i == EditorInfo.IME_ACTION_DONE)
+                    {
+                        showLog("Done over");
+                        readInput(position, myViewHolder);
+                    }
+                    return false;
+                }
+            });
+            myViewHolder.setInfo_content(getItem(position));
+            myViewHolder.setInfo_title(getTitle(position));
+            myViewHolder.setCurrPosition(currPosition);
+            myViewHolder.setPosition(position);
+            return convertView;
+        }
+
+        private void readInput(int position, MyViewHolder myViewHolder) {
+            showLog("我进来读数了:"+position);
+            if(position==0)
+            {
+                myViewHolder.clearFocus();
+                currPosition=4;
+                updateMaterialCode(myViewHolder.getContent());
+                mWorkOrderView.setSelection(4);
+            }
+            else if(position==4)
+            {
+                myViewHolder.clearFocus();
+                currPosition=5;
+                updateOperatorId(myViewHolder.getContent());
+                Observable.fromCallable(new Callable<Object>() {
+                    @Override
+                    public Object call() throws Exception {
+                        Thread.sleep(300);
+                        return "finish";
+                    }
+                }).observeOn(AndroidSchedulers.mainThread())
+                        .subscribe(new Consumer<Object>() {
+                            @Override
+                            public void accept(Object o) throws Exception {
+                            mWorkOrderView.setSelection(5);
+                            }
+                        });
+
+            }
+            else if(position==5)
+            {
+                myViewHolder.clearFocus();
+                currPosition=-1;
+                updateWorkPlaceId(myViewHolder.getContent());
+                myViewHolder.hideKeyBoard();
+            }
+        }
+
+    }
+
+    /**
+     * 更新物料信息
+     * @param currContent
+     */
+    public void updateMaterialCode(String currContent)
+    {
+        showLog("你输入的是:"+currContent);
+        if(TextUtils.isEmpty(currContent))
+        {
+            showLog("条码为空");
+            return;
+        }
+        mWorkOrderModel.setMaterialBarCode(currContent);
+        mWorkOrderModel.checkExistOrUpdateByBarCode(currContent);
+    }
+
+    /**
+     * 更新员工信息
+     */
+    public void updateOperatorId(String currContent)
+    {
+        showLog("输入员工号");
+        syncLocalWorkOrderData();
+        mWorkOrderModel.updateWorkOrderByOperatorId(currContent);
+        notifyAndUpdateBadData();
+    }
+    /**
+     * 更新机台信息
+     */
+    public void updateWorkPlaceId(String currContent)
+    {
+        showLog("输入机台号");
+        if(currContent!=null)
+            currContent=currContent.toUpperCase();
+        currContent
+                =currContent.replaceAll("[^0-9a-zA-Z]","");
+        syncLocalWorkOrderData();
+        mWorkOrderModel.updateWorkOrderByWorkPlaceId(currContent);
+        notifyAndUpdateBadData();
+    }
+}
Index: app/src/main/java/com/furja/overall/presenter/BadLogWithBtnPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/presenter/BadLogWithBtnPresenter.java	(date 1576292999720)
+++ app/src/main/java/com/furja/overall/presenter/BadLogWithBtnPresenter.java	(date 1576292999720)
@@ -0,0 +1,431 @@
+package com.furja.overall.presenter;
+
+import android.content.Context;
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+import android.text.InputType;
+import android.text.TextUtils;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.ImageButton;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.overall.FurjaApp;
+import com.furja.overall.R;
+import com.furja.overall.beans.WorkOrderInfo;
+import com.furja.overall.contract.LogBadWithBnContract;
+import com.furja.overall.databases.BadTypeConfig;
+import com.furja.overall.databases.BadTypeConfigDao;
+import com.furja.overall.model.LogBadWithBtnModel;
+import com.furja.utils.Caretaker;
+import com.furja.utils.SharpBus;
+
+import java.util.Collections;
+import java.util.List;
+import java.util.concurrent.Callable;
+import java.util.concurrent.TimeUnit;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import io.reactivex.Observable;
+import io.reactivex.ObservableSource;
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.functions.Consumer;
+import io.reactivex.functions.Function;
+import io.reactivex.schedulers.Schedulers;
+import q.rorbin.badgeview.QBadgeView;
+
+import static com.furja.utils.Constants.FRAGMENT_ON_TOUCH;
+import static com.furja.utils.Constants.UPDATE_BAD_COUNT;
+import static com.furja.utils.Constants.UPLOAD_FINISH;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * 用来作为显示品质异常button的视图与数据交互的桥
+ */
+public class BadLogWithBtnPresenter implements LogBadWithBnContract.Presenter {
+    private LogBadWithBnContract.View mDefectiveView;   //用于连接BadLogWithBtnFragment内方法
+    private LogBadWithBtnModel mDefectiveModel; //数据库操作类
+    private SharpBus sharpBus;
+    private MyRecyclerAdapter myRecyclerAdapter;    //显示按钮列表RecyclerView适配器
+    private Caretaker caretaker;
+    private boolean isEditing=false;
+    public BadLogWithBtnPresenter(LogBadWithBnContract.View defectiveView)
+    {
+        this.mDefectiveView=defectiveView;
+        sharpBus=SharpBus.getInstance();
+        setThisModel();
+        myRecyclerAdapter=new MyRecyclerAdapter();
+        mDefectiveView.setRecyclerAdapter(myRecyclerAdapter);
+        mDefectiveView.setButtonClickListener(new BtnClickListener());
+        caretaker=new Caretaker();
+    }
+
+    /**
+     * 设置 MVP架构下与此作数据交换的Model
+     * 并设定上传成功监听以更新视图
+     */
+    public void setThisModel()
+    {
+        Observable.fromCallable(new Callable<List<BadTypeConfig>>() {
+            @Override
+            public List<BadTypeConfig> call() throws Exception {
+                DaoSession daoSession= FurjaApp.getDaoSession();
+                BadTypeConfigDao typeConfigDao
+                        =daoSession.getBadTypeConfigDao();
+                List<BadTypeConfig> allResults=typeConfigDao.queryBuilder()
+                        .where(BadTypeConfigDao.Properties.SourcType.eq(1))
+                        .list();
+                if(allResults!=null)
+                    return allResults;
+                else
+                    return Collections.EMPTY_LIST;
+            }})
+                .subscribe(new Consumer<List<BadTypeConfig>>() {
+                    @Override
+                    public void accept(List<BadTypeConfig> badTypeConfigs) throws Exception {
+                        int list_size=badTypeConfigs.size();
+                        String[] btn_titles;
+                        btn_titles = readBtn_titles(badTypeConfigs, list_size);
+                        mDefectiveModel=new LogBadWithBtnModel(btn_titles);
+                    }
+
+                    /**
+                     * 获取MarkerButton的label文本
+                     * @param badTypeConfigs
+                     * @param list_size
+                     * @return
+                     */
+                    @NonNull
+                    private String[] readBtn_titles(List<BadTypeConfig> badTypeConfigs, int list_size) {
+                        String[] btn_titles;
+                        if(list_size>0)
+                        {
+                            btn_titles=new String[list_size];
+                            showLog(getClass()+">找到配置信息条数: "+list_size);
+                            for(int i=0;i<list_size;i++)
+                            {
+                                BadTypeConfig typeConfig=badTypeConfigs.get(i);
+                                btn_titles[i]=typeConfig.getTypeDesp();
+                            }
+                        }
+                        else
+                        {
+                            //如果本地数据库没有相应数据使用默认配置信息
+                            showLog("没有找到相应异常配置信息,从本地加载");
+                            Context context= FurjaApp.getContext();
+                            btn_titles
+                                    = context.getResources().getStringArray(R.array.operate_options);
+                        }
+                        return btn_titles;
+                    }
+                });
+    }
+
+
+
+    /**
+     * 同步数据后根据MaterialInfo从数据库中提取数据再显示
+     * @param workOrderInfo
+     */
+    @Override
+    public void syncAndUpdateData(final WorkOrderInfo workOrderInfo) {
+        Observable observable= Observable.fromCallable(new Callable() {
+            @Override
+            public Object call() throws Exception {
+//                syncData(); //同步至本地并上传至服务器
+                caretaker.clear();
+                mDefectiveModel.updateData(workOrderInfo);
+                return "syncFinished";
+            }
+        });
+        observable
+                .subscribeOn(Schedulers.newThread())
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Consumer() {
+                    @Override
+                    public void accept(Object o) throws Exception {
+                        sharpBus.post(UPDATE_BAD_COUNT,mDefectiveModel.getTotalBad());
+                        myRecyclerAdapter.notifyDataSetChanged();
+                    }
+                });
+    }
+
+    /**
+     * 将界面当前数据保存至本地数据库
+     */
+    @Override
+    public void syncData() {
+        mDefectiveModel.syncData();
+        //同步数据后清空备忘录内容
+        caretaker.clear();
+    }
+
+    public boolean isEditing() {
+        return isEditing;
+    }
+
+    public void setEditing(boolean editing) {
+        isEditing = editing;
+    }
+
+    /**
+     * 放置标记Button的Recycleview
+     */
+    private class MyRecyclerAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>
+    {
+        private boolean isFirst;
+        @Override
+        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View view= LayoutInflater.from(parent.getContext())
+                    .inflate(R.layout.layout_markerview,parent,false);
+            LogViewHolder viewHolder=new LogViewHolder(view);
+            return viewHolder;
+        }
+
+        @Override
+        public void onBindViewHolder(RecyclerView.ViewHolder holder, final int position) {
+            final LogViewHolder viewHolder=(LogViewHolder)holder;
+            viewHolder.setText(mDefectiveModel.getOptionTitle(position));
+            viewHolder.setMarkNum((int) mDefectiveModel.getMarkerCount(position));
+
+            viewHolder.markerButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    Observable.just(v)
+                            .flatMap(new Function<Object, ObservableSource<?>>() {
+                                @Override
+                                public ObservableSource<?> apply(Object o) throws Exception {
+                                    sharpBus.post(FRAGMENT_ON_TOUCH, "TOUCH_MARKERBUTTON");
+                                    if(mDefectiveModel.infoHasNullL())
+                                        return Observable.just("first").delay(200, TimeUnit.MILLISECONDS);
+                                    else
+                                        return Observable.just(o);
+                                }
+                            })
+                            .subscribe(new Consumer<Object>() {
+                                @Override
+                                public void accept(final Object o) throws Exception
+                                {
+                                    if(mDefectiveModel.infoHasNull())
+                                    {
+                                        showToast("设置物料代码/员工号/机台号后方可记录");
+                                        return;
+                                    }
+                                    if(isEditing())
+                                    {
+                                        showEditDialog(viewHolder,position);
+                                    }
+                                    else
+                                    {
+                                        if (caretaker.isEmpty())
+                                            caretaker.appendUndo(mDefectiveModel.getMarkCountString());
+                                        mDefectiveModel.addMarkerCount(position);
+                                        caretaker.appendUndo(mDefectiveModel.getMarkCountString());  //保存这个记录
+                                        Observable.just((int)mDefectiveModel.getMarkerCount(position))
+                                                .observeOn(AndroidSchedulers.mainThread())
+                                                .subscribe(new Consumer<Integer>() {
+                                                    @Override
+                                                    public void accept(Integer value) throws Exception {
+                                                        viewHolder.setMarkNum(value);
+                                                        showLog(value+"<value>"+Thread.currentThread());
+                                                        if(o.toString().contains("first"))
+                                                            notifyDataSetChanged();
+                                                    }
+                                                });
+                                        sharpBus.post(UPDATE_BAD_COUNT, mDefectiveModel.getTotalBad());
+                                        showLog("添加标记>"+viewHolder.getMarkNum());
+                                    }
+                                }
+                            });
+                }
+            });
+            viewHolder.markerButton.setOnLongClickListener(new View.OnLongClickListener() {
+                @Override
+                public boolean onLongClick(View v) {
+                    if(isEditing)
+                        return false;
+                    showEditDialog(viewHolder,position);
+                    return false;
+                }
+            });
+
+
+        }
+
+        private void showEditDialog(final LogViewHolder viewHolder,final int position) {
+            String prefill="";
+            if(viewHolder.getMarkNum()>0)
+                prefill=viewHolder.getMarkNum()+"";
+            new MaterialDialog.Builder(viewHolder.getContext())
+                    .title("设定该异常类型个数")
+                    .inputType(InputType.TYPE_CLASS_NUMBER)
+                    .autoDismiss(false)
+                    .input("不设置将清空该异常计数", prefill, new MaterialDialog.InputCallback() {
+                        @Override
+                        public void onInput(@NonNull MaterialDialog dialog, CharSequence input) {
+                            long count=0;
+                            if(!TextUtils.isEmpty(input))
+                            {
+                                count= Long.valueOf(input.toString());
+                            }
+                            caretaker.appendUndo(mDefectiveModel.getMarkCountString());  //保存这个记录
+                            mDefectiveModel.setMarkerCount(position,count);
+                            viewHolder.setMarkNum((int) mDefectiveModel.getMarkerCount(position));
+                            sharpBus.post(UPDATE_BAD_COUNT,mDefectiveModel.getTotalBad());
+                            dialog.cancel();
+                        }
+                    }).show();
+        }
+
+        @Override
+        public int getItemCount() {
+            return mDefectiveModel.getItemCount();
+        }
+    }
+
+    /**
+     * 撤销、重做、提交 按钮的监听
+     */
+    public class BtnClickListener implements View.OnClickListener
+    {
+        @Override
+        public void onClick(View v) {
+            sharpBus.post(FRAGMENT_ON_TOUCH,"DOCK_TOUCH");
+            switch (v.getId())
+            {
+                //undo按钮
+                case R.id.btn_undo_btnFrag:
+                    List<Long> codeCounts=caretaker.getUndoMemo();
+                    if(codeCounts!=null)
+                    {
+                        mDefectiveModel.setMarkCounts(codeCounts);
+                        sharpBus.post(UPDATE_BAD_COUNT,mDefectiveModel.getTotalBad());
+                        myRecyclerAdapter.notifyDataSetChanged();
+                    }
+                    break;
+                //redo按钮
+                case R.id.btn_redo_btnFrag:
+                    List<Long> counts=caretaker.getRedoMemo(mDefectiveModel.getMarkCountString());
+                    if(counts!=null)
+                    {
+                        mDefectiveModel.setMarkCounts(counts);
+                        sharpBus.post(UPDATE_BAD_COUNT,mDefectiveModel.getTotalBad());
+                        myRecyclerAdapter.notifyDataSetChanged();
+                    }
+                    break;
+                //编辑按钮
+                case R.id.btn_edit_btnFrag:
+                    try{
+                        if(mDefectiveModel.infoHasNull())
+                        {
+                            showToast("设置物料代码/员工号/机台号后方可记录");
+                            return;
+                        }
+                        if(!isEditing)
+                        {
+                            ((ImageButton)v).setImageResource(R.mipmap.ic_editing_src);
+                            showToast("点击异常按钮快速编辑计数");
+                        }
+                        else
+                        {
+                            ((ImageButton)v).setImageResource(R.mipmap.ic_edit_src);
+                        }
+                        setEditing(!isEditing);
+                    }catch(Exception e){e.printStackTrace();}
+                    break;
+                //submit按钮、传递上传完成
+                case R.id.btn_submit_btnFrag:
+                    if(!mDefectiveModel.infoHasNull())
+                    {
+                        syncData();
+                        mDefectiveModel.clearCount();
+                        myRecyclerAdapter.notifyDataSetChanged();
+                        sharpBus.post(UPLOAD_FINISH,UPLOAD_FINISH);
+                    }
+                    else
+                    {
+                        showToast("设置物料代码/员工号/机台号后方可");
+                    }
+                    break;
+            }
+        }
+    }
+
+    private void showReadBarCodeDialog(View view)
+    {
+        new MaterialDialog.Builder(view.getContext())
+                .title(R.string.materialUpdate)
+                .inputType(InputType.TYPE_CLASS_TEXT)
+                .autoDismiss(false)
+                .input("扫描物料条码","", new MaterialDialog.InputCallback() {
+                    @Override
+                    public void onInput(final MaterialDialog dialog, CharSequence input) {
+                        //刷新视图读取数据
+                        if(TextUtils.isEmpty(input))
+                        {
+                            showToast("需录入信息");
+                        }
+                        else
+                        {
+                            showLog("你输入的是:"+input);
+                            String barcode=input.toString();
+                            mDefectiveModel.getMaterialISNbyBarCode(barcode);
+                            dialog.cancel();
+                        }
+                    }
+                }).canceledOnTouchOutside(false).show();
+    }
+
+
+
+    /**
+     * RecyclerView的View装载
+     */
+    public class LogViewHolder extends RecyclerView.ViewHolder{
+        @BindView(R.id.marker_button)
+        Button markerButton;
+        private int markNum;
+        private QBadgeView badgeView;
+        public LogViewHolder(View itemView) {
+            super(itemView);
+            ButterKnife.bind(this,itemView);
+            badgeView=new QBadgeView(itemView.getContext());
+            badgeView.bindTarget(markerButton);
+            badgeView.setBadgeTextSize(15,true);
+            badgeView.setExactMode(true);
+        }
+
+        public Context getContext()
+        {
+            return itemView.getContext();
+        }
+
+        public int getMarkNum() {
+            return markNum;
+        }
+        public void setText(String title)
+        {
+            markerButton.setText(title);
+        }
+        public void setMarkNum(int markNum) {
+            this.markNum = markNum;
+            badgeView.setBadgeNumber(markNum);
+            if(markNum==0)
+            {
+                markerButton.setGravity(Gravity.CENTER);
+            }
+            else if(markerButton.getGravity()!=(Gravity.LEFT|Gravity.BOTTOM))
+            {
+                markerButton.setGravity(Gravity.LEFT|Gravity.BOTTOM);
+            }
+        }
+    }
+
+
+}
\ No newline at end of file
Index: app/src/test/java/com/furja/overall/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/furja/overall/ExampleUnitTest.java	(date 1576909751575)
+++ app/src/test/java/com/furja/overall/ExampleUnitTest.java	(date 1576909751575)
@@ -0,0 +1,20 @@
+package com.furja.overall;
+
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        String dataString="211";
+        int index=dataString.lastIndexOf(".");
+        dataString=dataString.substring(index+1);
+        System.out.println(dataString);
+    }
+}
\ No newline at end of file
Index: app/src/androidTest/java/com/furja/overall/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/furja/overall/ExampleInstrumentedTest.java	(date 1576067821906)
+++ app/src/androidTest/java/com/furja/overall/ExampleInstrumentedTest.java	(date 1576067821906)
@@ -0,0 +1,26 @@
+package com.furja.overall;
+
+import android.content.Context;
+import androidx.test.platform.app.InstrumentationRegistry;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.assertEquals;
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.furja.overallmanager", appContext.getPackageName());
+    }
+}
Index: hellocharts-library/build/intermediates/symbols/debug/R.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- hellocharts-library/build/intermediates/symbols/debug/R.txt	(date 1576567635883)
+++ hellocharts-library/build/intermediates/symbols/debug/R.txt	(date 1576567635883)
@@ -0,0 +1,186 @@
+int attr alpha 0x7f040001
+int attr coordinatorLayoutStyle 0x7f040002
+int attr font 0x7f040003
+int attr fontProviderAuthority 0x7f040004
+int attr fontProviderCerts 0x7f040005
+int attr fontProviderFetchStrategy 0x7f040006
+int attr fontProviderFetchTimeout 0x7f040007
+int attr fontProviderPackage 0x7f040008
+int attr fontProviderQuery 0x7f040009
+int attr fontStyle 0x7f04000a
+int attr fontVariationSettings 0x7f04000b
+int attr fontWeight 0x7f04000c
+int attr keylines 0x7f04000d
+int attr layout_anchor 0x7f04000e
+int attr layout_anchorGravity 0x7f04000f
+int attr layout_behavior 0x7f040010
+int attr layout_dodgeInsetEdges 0x7f040011
+int attr layout_insetEdge 0x7f040012
+int attr layout_keyline 0x7f040013
+int attr statusBarBackground 0x7f040014
+int attr ttcIndex 0x7f040015
+int color notification_action_color_filter 0x7f060001
+int color notification_icon_bg_color 0x7f060002
+int color notification_material_background_media_default_color 0x7f060003
+int color primary_text_default_material_dark 0x7f060004
+int color ripple_material_light 0x7f060005
+int color secondary_text_default_material_dark 0x7f060006
+int color secondary_text_default_material_light 0x7f060007
+int dimen compat_button_inset_horizontal_material 0x7f070001
+int dimen compat_button_inset_vertical_material 0x7f070002
+int dimen compat_button_padding_horizontal_material 0x7f070003
+int dimen compat_button_padding_vertical_material 0x7f070004
+int dimen compat_control_corner_material 0x7f070005
+int dimen compat_notification_large_icon_max_height 0x7f070006
+int dimen compat_notification_large_icon_max_width 0x7f070007
+int dimen notification_action_icon_size 0x7f070008
+int dimen notification_action_text_size 0x7f070009
+int dimen notification_big_circle_margin 0x7f07000a
+int dimen notification_content_margin_start 0x7f07000b
+int dimen notification_large_icon_height 0x7f07000c
+int dimen notification_large_icon_width 0x7f07000d
+int dimen notification_main_column_padding_top 0x7f07000e
+int dimen notification_media_narrow_margin 0x7f07000f
+int dimen notification_right_icon_size 0x7f070010
+int dimen notification_right_side_padding_top 0x7f070011
+int dimen notification_small_icon_background_padding 0x7f070012
+int dimen notification_small_icon_size_as_large 0x7f070013
+int dimen notification_subtext_size 0x7f070014
+int dimen notification_top_pad 0x7f070015
+int dimen notification_top_pad_large_text 0x7f070016
+int dimen subtitle_corner_radius 0x7f070017
+int dimen subtitle_outline_width 0x7f070018
+int dimen subtitle_shadow_offset 0x7f070019
+int dimen subtitle_shadow_radius 0x7f07001a
+int drawable notification_action_background 0x7f080001
+int drawable notification_bg 0x7f080002
+int drawable notification_bg_low 0x7f080003
+int drawable notification_bg_low_normal 0x7f080004
+int drawable notification_bg_low_pressed 0x7f080005
+int drawable notification_bg_normal 0x7f080006
+int drawable notification_bg_normal_pressed 0x7f080007
+int drawable notification_icon_background 0x7f080008
+int drawable notification_template_icon_bg 0x7f080009
+int drawable notification_template_icon_low_bg 0x7f08000a
+int drawable notification_tile_bg 0x7f08000b
+int drawable notify_panel_notification_icon_bg 0x7f08000c
+int id action0 0x7f0b0001
+int id action_container 0x7f0b0002
+int id action_divider 0x7f0b0003
+int id action_image 0x7f0b0004
+int id action_text 0x7f0b0005
+int id actions 0x7f0b0006
+int id async 0x7f0b0007
+int id blocking 0x7f0b0008
+int id bottom 0x7f0b0009
+int id cancel_action 0x7f0b000a
+int id chronometer 0x7f0b000b
+int id end 0x7f0b000c
+int id end_padder 0x7f0b000d
+int id forever 0x7f0b000e
+int id icon 0x7f0b000f
+int id icon_group 0x7f0b0010
+int id info 0x7f0b0011
+int id italic 0x7f0b0012
+int id left 0x7f0b0013
+int id line1 0x7f0b0014
+int id line3 0x7f0b0015
+int id media_actions 0x7f0b0016
+int id none 0x7f0b0017
+int id normal 0x7f0b0018
+int id notification_background 0x7f0b0019
+int id notification_main_column 0x7f0b001a
+int id notification_main_column_container 0x7f0b001b
+int id right 0x7f0b001c
+int id right_icon 0x7f0b001d
+int id right_side 0x7f0b001e
+int id start 0x7f0b001f
+int id status_bar_latest_event_content 0x7f0b0020
+int id tag_transition_group 0x7f0b0021
+int id tag_unhandled_key_event_manager 0x7f0b0022
+int id tag_unhandled_key_listeners 0x7f0b0023
+int id text 0x7f0b0024
+int id text2 0x7f0b0025
+int id time 0x7f0b0026
+int id title 0x7f0b0027
+int id top 0x7f0b0028
+int integer cancel_button_image_alpha 0x7f0c0001
+int integer status_bar_notification_info_maxnum 0x7f0c0002
+int layout notification_action 0x7f0e0001
+int layout notification_action_tombstone 0x7f0e0002
+int layout notification_media_action 0x7f0e0003
+int layout notification_media_cancel_action 0x7f0e0004
+int layout notification_template_big_media 0x7f0e0005
+int layout notification_template_big_media_custom 0x7f0e0006
+int layout notification_template_big_media_narrow 0x7f0e0007
+int layout notification_template_big_media_narrow_custom 0x7f0e0008
+int layout notification_template_custom_big 0x7f0e0009
+int layout notification_template_icon_group 0x7f0e000a
+int layout notification_template_lines_media 0x7f0e000b
+int layout notification_template_media 0x7f0e000c
+int layout notification_template_media_custom 0x7f0e000d
+int layout notification_template_part_chronometer 0x7f0e000e
+int layout notification_template_part_time 0x7f0e000f
+int string status_bar_notification_info_overflow 0x7f140001
+int style TextAppearance_Compat_Notification 0x7f150001
+int style TextAppearance_Compat_Notification_Info 0x7f150002
+int style TextAppearance_Compat_Notification_Info_Media 0x7f150003
+int style TextAppearance_Compat_Notification_Line2 0x7f150004
+int style TextAppearance_Compat_Notification_Line2_Media 0x7f150005
+int style TextAppearance_Compat_Notification_Media 0x7f150006
+int style TextAppearance_Compat_Notification_Time 0x7f150007
+int style TextAppearance_Compat_Notification_Time_Media 0x7f150008
+int style TextAppearance_Compat_Notification_Title 0x7f150009
+int style TextAppearance_Compat_Notification_Title_Media 0x7f15000a
+int style Widget_Compat_NotificationActionContainer 0x7f15000b
+int style Widget_Compat_NotificationActionText 0x7f15000c
+int style Widget_Support_CoordinatorLayout 0x7f15000d
+int[] styleable ColorStateListItem { 0x7f040001, 0x101031f, 0x10101a5 }
+int styleable ColorStateListItem_alpha 0
+int styleable ColorStateListItem_android_alpha 1
+int styleable ColorStateListItem_android_color 2
+int[] styleable CoordinatorLayout { 0x7f04000d, 0x7f040014 }
+int styleable CoordinatorLayout_keylines 0
+int styleable CoordinatorLayout_statusBarBackground 1
+int[] styleable CoordinatorLayout_Layout { 0x10100b3, 0x7f04000e, 0x7f04000f, 0x7f040010, 0x7f040011, 0x7f040012, 0x7f040013 }
+int styleable CoordinatorLayout_Layout_android_layout_gravity 0
+int styleable CoordinatorLayout_Layout_layout_anchor 1
+int styleable CoordinatorLayout_Layout_layout_anchorGravity 2
+int styleable CoordinatorLayout_Layout_layout_behavior 3
+int styleable CoordinatorLayout_Layout_layout_dodgeInsetEdges 4
+int styleable CoordinatorLayout_Layout_layout_insetEdge 5
+int styleable CoordinatorLayout_Layout_layout_keyline 6
+int[] styleable FontFamily { 0x7f040004, 0x7f040005, 0x7f040006, 0x7f040007, 0x7f040008, 0x7f040009 }
+int styleable FontFamily_fontProviderAuthority 0
+int styleable FontFamily_fontProviderCerts 1
+int styleable FontFamily_fontProviderFetchStrategy 2
+int styleable FontFamily_fontProviderFetchTimeout 3
+int styleable FontFamily_fontProviderPackage 4
+int styleable FontFamily_fontProviderQuery 5
+int[] styleable FontFamilyFont { 0x1010532, 0x101053f, 0x0, 0x1010533, 0x0, 0x7f040003, 0x7f04000a, 0x7f04000b, 0x7f04000c, 0x7f040015 }
+int styleable FontFamilyFont_android_font 0
+int styleable FontFamilyFont_android_fontStyle 1
+int styleable FontFamilyFont_android_fontVariationSettings 2
+int styleable FontFamilyFont_android_fontWeight 3
+int styleable FontFamilyFont_android_ttcIndex 4
+int styleable FontFamilyFont_font 5
+int styleable FontFamilyFont_fontStyle 6
+int styleable FontFamilyFont_fontVariationSettings 7
+int styleable FontFamilyFont_fontWeight 8
+int styleable FontFamilyFont_ttcIndex 9
+int[] styleable GradientColor { 0x101020b, 0x10101a2, 0x10101a3, 0x101019e, 0x1010512, 0x1010513, 0x10101a4, 0x101019d, 0x1010510, 0x1010511, 0x1010201, 0x10101a1 }
+int styleable GradientColor_android_centerColor 0
+int styleable GradientColor_android_centerX 1
+int styleable GradientColor_android_centerY 2
+int styleable GradientColor_android_endColor 3
+int styleable GradientColor_android_endX 4
+int styleable GradientColor_android_endY 5
+int styleable GradientColor_android_gradientRadius 6
+int styleable GradientColor_android_startColor 7
+int styleable GradientColor_android_startX 8
+int styleable GradientColor_android_startY 9
+int styleable GradientColor_android_tileMode 10
+int styleable GradientColor_android_type 11
+int[] styleable GradientColorItem { 0x10101a5, 0x1010514 }
+int styleable GradientColorItem_android_color 0
+int styleable GradientColorItem_android_offset 1
Index: app/src/main/java/com/furja/overall/beans/InspectHistoryLog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/beans/InspectHistoryLog.java	(date 1576910853575)
+++ app/src/main/java/com/furja/overall/beans/InspectHistoryLog.java	(date 1576910853575)
@@ -0,0 +1,4 @@
+package com.furja.overall.beans;
+
+public class InspectHistoryLog {
+}
Index: app/src/main/res/layout/concise_dialog_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/concise_dialog_layout.xml	(date 1574665413675)
+++ app/src/main/res/layout/concise_dialog_layout.xml	(date 1574665413675)
@@ -0,0 +1,72 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:background="@drawable/shape_concise_dialog">
+    <TextView
+        android:id="@+id/dialog_title"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        android:textColor="@color/colorBlack"
+        android:layout_marginTop="@dimen/view_vertical_margin"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:id="@+id/dialog_content"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:textColor="@color/colorBlack"
+        android:layout_marginTop="@dimen/view_vertical_margin"
+        android:gravity="start"
+        app:layout_constraintTop_toBottomOf="@+id/dialog_title"
+        />
+    <View
+        android:id="@+id/separate_view"
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="@color/colorSeperate"
+        android:layout_marginTop="@dimen/activity_horizontal_margin"
+        app:layout_constraintTop_toBottomOf="@+id/dialog_content"
+        >
+    </View>
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        app:layout_constraintTop_toBottomOf="@+id/separate_view"
+        >
+        <Button
+            android:id="@+id/button_negative"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/btn_negative"
+            android:layout_gravity="center"
+            android:layout_weight="1"
+            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+            android:textColor="@color/holo_text"
+            style="@style/Widget.AppCompat.Button.Borderless"
+            />
+        <View
+            android:layout_width="2dp"
+            android:layout_height="match_parent"
+            android:background="@color/colorSeperate"
+            >
+        </View>
+        <Button
+            android:id="@+id/button_positive"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/btn_positive"
+            android:layout_gravity="center"
+            android:layout_weight="1"
+            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+            android:textColor="@color/holo_text"
+            style="@style/Widget.AppCompat.Button.Borderless"
+            />
+    </LinearLayout>
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/electronic_part_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/electronic_part_item.xml	(date 1574665413295)
+++ app/src/main/res/layout/electronic_part_item.xml	(date 1574665413295)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <androidx.appcompat.widget.AppCompatCheckBox
+        android:id="@+id/checkbox_item"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintTop_toTopOf="@+id/linear_part"
+        app:layout_constraintStart_toStartOf="parent"
+        android:layout_marginStart="@dimen/tabIndicatorHeight"
+        app:layout_constraintBottom_toBottomOf="@+id/linear_part"/>
+    <LinearLayout
+        android:id="@+id/linear_part"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/checkbox_item"
+        android:layout_marginTop="@dimen/activity_horizontal_margin"
+        android:layout_marginStart="@dimen/activity_horizontal_margin"
+        >
+        <TextView
+            android:id="@+id/item_title"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textColor="@color/colorBlack"
+            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+            />
+        <TextView
+            android:id="@+id/item_content"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:singleLine="false"
+            android:inputType="textMultiLine"
+            android:ellipsize="none"
+            android:textColor="@color/colorBlack"
+            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+            app:layout_constraintTop_toBottomOf="@+id/item_title"
+            />
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/check_item_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/check_item_layout.xml	(date 1575704103538)
+++ app/src/main/res/layout/check_item_layout.xml	(date 1575704103538)
@@ -0,0 +1,38 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:apps="http://schemas.android.com/apk/res-auto">
+    <androidx.appcompat.widget.AppCompatTextView
+        android:id="@+id/text_barcode"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/dp_6"
+        android:textColor="@color/colorBlack"
+        apps:layout_constraintStart_toStartOf="parent"
+        apps:layout_constraintTop_toTopOf="parent" />
+
+    <androidx.appcompat.widget.AppCompatTextView
+        android:id="@+id/text_billNo"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/dp_6"
+        apps:layout_constraintStart_toStartOf="parent"
+        apps:layout_constraintTop_toBottomOf="@+id/text_barcode"
+        />
+
+    <androidx.appcompat.widget.AppCompatTextView
+        android:id="@+id/text_qty"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        apps:layout_constraintStart_toEndOf="@+id/text_billNo"
+        apps:layout_constraintTop_toTopOf="@+id/text_billNo"
+        apps:layout_constraintBottom_toBottomOf="@+id/text_billNo"
+        apps:layout_constraintEnd_toEndOf="parent"
+        />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_verifyparts.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_verifyparts.xml	(date 1574665413417)
+++ app/src/main/res/layout/activity_verifyparts.xml	(date 1574665413417)
@@ -0,0 +1,83 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:focusable="true"
+    android:focusableInTouchMode="true"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <com.google.android.material.textfield.TextInputLayout
+        android:id="@+id/input_mainBarCode"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/right_horizontal_spacing"
+        app:layout_constraintTop_toTopOf="parent">
+
+        <com.google.android.material.textfield.TextInputEditText
+            android:id="@+id/edit_mainBarCode"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:imeOptions="actionDone"
+            android:singleLine="true"
+            android:textAppearance="@style/TextAppearance.AppCompat.Large"
+            android:hint="@string/hint_scan_mainBarCode" />
+    </com.google.android.material.textfield.TextInputLayout>
+
+    <LinearLayout
+        android:id="@+id/info_linear"
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/activity_vertical_margin"
+        app:layout_constraintVertical_weight="3"
+        app:layout_constraintTop_toBottomOf="@+id/input_mainBarCode"
+        >
+        <TextView
+            android:id="@+id/label_info"
+            android:text="@string/label_productInfo"
+            android:textAppearance="@style/TextAppearance.AppCompat.Large"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:textColor="@color/colorAccent"
+            android:layout_marginStart="@dimen/image_margin"
+            />
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recycler_partItem"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:descendantFocusability="beforeDescendants"
+            >
+        </androidx.recyclerview.widget.RecyclerView>
+    </LinearLayout>
+
+    <Button
+        android:id="@+id/btn_confirm"
+        android:text="@string/btn_confirm"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textSize="30sp"
+        android:layout_marginTop="@dimen/activity_vertical_margin"
+        android:background="@drawable/shape_button_confirm"
+        android:drawableRight="@mipmap/ic_confirm_right"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/info_linear"
+        style="@style/Widget.AppCompat.Button.Borderless"
+        />
+
+    <TextView
+        android:id="@+id/label_checkProgress"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textColor="@color/colorAccent"
+        android:layout_marginTop="@dimen/tabIndicatorHeight"
+        android:visibility="gone"
+        android:singleLine="false"
+        android:gravity="center_horizontal"
+        app:layout_constraintTop_toBottomOf="@+id/btn_confirm"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/include_recyclerview.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/include_recyclerview.xml	(date 1576913107618)
+++ app/src/main/res/layout/include_recyclerview.xml	(date 1576913107618)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical">
+    <com.scwang.smartrefresh.layout.SmartRefreshLayout
+        android:id="@+id/refresh_recycler"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/recycler_view"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"/>
+    </com.scwang.smartrefresh.layout.SmartRefreshLayout>
+</LinearLayout>
Index: app/src/main/java/com/furja/alertsop/contract/InjectionLogContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/alertsop/contract/InjectionLogContract.java	(date 1576289367290)
+++ app/src/main/java/com/furja/alertsop/contract/InjectionLogContract.java	(date 1576289367290)
@@ -0,0 +1,37 @@
+package com.furja.alertsop.contract;
+
+import android.content.Context;
+
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.furja.alertsop.beans.MaterialInfo;
+import com.furja.alertsop.beans.WorkOrderInfo;
+
+public interface InjectionLogContract {
+    interface Model {
+        int getItemCount();
+
+        String getOptionTitle(int position);
+
+        long getMarkerCount(int position);
+
+        void addMarkerCount(int position);
+
+        long getTotalBad();
+
+        void updateData(WorkOrderInfo workOrderInfo);
+    }
+
+    interface View {
+        void resetView();
+        void showMaterialInfo(MaterialInfo materialInfo);
+        default void setRecyclerAdapter(RecyclerView.Adapter<RecyclerView.ViewHolder> adapter){};
+        default void setButtonClickListener(android.view.View.OnClickListener buttonClickListener){};
+        default void onBackPressed(){};
+        Context getContext();
+    }
+
+    interface Presenter {
+        void resetFieldData();
+    }
+}
Index: app/src/main/res/layout/activity_sop.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_sop.xml	(date 1576311965513)
+++ app/src/main/res/layout/activity_sop.xml	(date 1576311965513)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <include
+        android:id="@+id/input_barcode"
+        layout="@layout/include_barcode"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        />
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/recycler_sop"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+    </androidx.recyclerview.widget.RecyclerView>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/furja/alertsop/presenter/InjectionLogPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/alertsop/presenter/InjectionLogPresenter.java	(date 1576475280935)
+++ app/src/main/java/com/furja/alertsop/presenter/InjectionLogPresenter.java	(date 1576475280935)
@@ -0,0 +1,126 @@
+package com.furja.alertsop.presenter;
+
+import android.accounts.NetworkErrorException;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.furja.overall.R;
+import com.furja.alertsop.beans.MaterialInfo;
+import com.furja.alertsop.contract.InjectionLogContract;
+import com.furja.alertsop.utils.Caretaker;
+import com.furja.utils.HttpCallback;
+import com.furja.utils.RetrofitBuilder;
+import com.furja.utils.RetrofitHelper;
+import com.furja.utils.RetryWhenUtils;
+import com.furja.utils.SharpBus;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.schedulers.Schedulers;
+
+import static com.furja.utils.Constants.INTERNET_ABNORMAL;
+import static com.furja.utils.Constants.NODATA_AVAILABLE;
+import static com.furja.utils.Constants.TAG_SCAN_BARCODE;
+import static com.furja.utils.Constants.getBaseUrl;
+
+public class InjectionLogPresenter implements InjectionLogContract.Presenter {
+    InjectionLogContract.View injectlogView;
+    Caretaker caretaker;
+    SharpBus sharpBus;
+    HttpCallback httpCallback;
+    Integer[] defetiveReasons;  //造成不良原因的数组
+    boolean isEditing = false,isTourInspection = false; //isTourInspection为true时,点击MarkerButton不检测输入
+
+    public InjectionLogPresenter(InjectionLogContract.View view) {
+        this.injectlogView = view;
+        caretaker = new Caretaker();
+        resetFieldData();
+        sharpBus = SharpBus.getInstance();
+    }
+
+
+
+    @Override
+    public void resetFieldData() {
+        caretaker.clear();
+    }
+
+
+    public void acquireMaterialInfo(String scanString) {
+        RetrofitHelper helper
+                = RetrofitBuilder.getHelperByUrl(getBaseUrl(), RetrofitHelper.class);
+        helper.getMaterialJson(scanString)
+                .subscribeOn(Schedulers.io())
+                .retryWhen(new RetryWhenUtils())
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(materialJson -> {
+                    MaterialInfo info=new MaterialInfo(materialJson);
+                    injectlogView.showMaterialInfo(info);
+                },throwable ->{
+                    if(throwable instanceof NetworkErrorException)
+                        sharpBus.post(TAG_SCAN_BARCODE,INTERNET_ABNORMAL);
+                    else
+                        sharpBus.post(TAG_SCAN_BARCODE,NODATA_AVAILABLE);
+                });
+    }
+
+    public void confirmLeave() {
+        MaterialDialog materialDialog
+                =new MaterialDialog.Builder(injectlogView.getContext())
+                .title("离开这里")
+                .content("确定舍弃已输入的数据吗?")
+                .positiveText("确定")
+                .negativeText("取消")
+                .onPositive((dialog, which) -> {
+                    injectlogView.onBackPressed();
+                })
+                .show();
+        materialDialog.getWindow()
+                .setBackgroundDrawableResource(R.drawable.shape_dialog_bg);
+    }
+
+    public HttpCallback getHttpCallback() {
+        return httpCallback;
+    }
+    public void setHttpCallback(HttpCallback httpCallback) {
+        this.httpCallback = httpCallback;
+    }
+    public void setTourInspection(boolean tourInspection) {
+        isTourInspection = tourInspection;
+    }
+    public Integer[] getDefetiveReasons() {
+        if(defetiveReasons==null)
+            defetiveReasons=new Integer[]{};
+        return defetiveReasons;
+    }
+
+
+
+    public List<String> getMoldNoLst()
+    {
+        List<String> moldList=new ArrayList<>();
+        List<String> letterLst
+                =Arrays.asList("A#","B#","C#","D#","E#","F#","G#");
+        for(int i=1;i<17;i++)
+            moldList.add(i+"#");
+        moldList.addAll(letterLst);
+        return moldList;
+    }
+    public List<String> getClassLst()
+    {
+        return Arrays
+                .asList("甲1班","甲2班","甲3班","乙1班","乙2班","乙3班");
+    }
+
+    public List<String> getMoldCavityLst()
+    {
+        return Arrays.asList("1*1","1*2","1*4","1*8");
+    }
+
+    public void setDefetiveReasons(Integer[] defetiveReasons) {
+        this.defetiveReasons = defetiveReasons;
+    }
+}
+
Index: app/src/main/res/layout/empty_input_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/empty_input_layout.xml	(date 1576311467543)
+++ app/src/main/res/layout/empty_input_layout.xml	(date 1576311467543)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--获取维修单内容清单时的布局-->
+<androidx.constraintlayout.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:srcCompat="@mipmap/ic_search_empty"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_search_prompt"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginTop="@dimen/activity_vertical_margin"
+        android:layout_marginBottom="50dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/empty_load_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/empty_load_layout.xml	(date 1576311467406)
+++ app/src/main/res/layout/empty_load_layout.xml	(date 1576311467406)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--获取维修单时的布局-->
+<androidx.constraintlayout.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:srcCompat="@mipmap/ic_data_loading"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_load_prompt"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginBottom="50dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_zoomimage.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_zoomimage.xml	(date 1576311467917)
+++ app/src/main/res/layout/activity_zoomimage.xml	(date 1576311467917)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:baselineAligned="false"
+    android:orientation="vertical"
+    >
+    <LinearLayout
+        android:id="@+id/horizontal_linear"
+        android:orientation="horizontal"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <ImageView
+            android:id="@+id/img_back"
+            android:layout_marginStart="@dimen/dp_8"
+            android:layout_marginTop="@dimen/dp_8"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:src="@mipmap/ic_action_back"
+            />
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dp_8"
+            android:layout_marginStart="@dimen/dp_100"
+            android:id="@+id/text_imageIndex"
+            android:gravity="start"
+            android:textAppearance="@style/TextAppearance.AppCompat.Large"
+            android:background="@drawable/circle_textview_border"/>
+    </LinearLayout>
+
+    <androidx.core.view.ViewPager
+        android:id="@+id/zoomViewPager"
+        android:layout_height="match_parent"
+        android:layout_width="wrap_content" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/bar_judgement.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/bar_judgement.xml	(date 1576311468016)
+++ app/src/main/res/layout/bar_judgement.xml	(date 1576311468016)
@@ -0,0 +1,67 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/label_finalJudgment"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_16"
+        android:singleLine="true"
+        android:text="@string/label_Judgment"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:textColor="@color/holo_title"
+        app:layout_constraintEnd_toStartOf="@+id/radioBtn_ok"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="@+id/btn_newDimenInput"
+        app:layout_constraintBottom_toBottomOf="@+id/btn_newDimenInput"
+        />
+    <RadioButton
+        android:id="@+id/radioBtn_ok"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/dp_6"
+        android:layout_gravity="center_horizontal"
+        android:text="@string/label_ok"
+        android:textColor="@color/holo_purple"
+        android:singleLine="true"
+        android:checked="true"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toEndOf="@+id/label_finalJudgment"
+        app:layout_constraintTop_toTopOf="@+id/btn_newDimenInput"
+        app:layout_constraintBottom_toBottomOf="@+id/btn_newDimenInput"
+        app:layout_constraintEnd_toStartOf="@+id/radioBtn_ng"
+        />
+    <RadioButton
+        android:id="@+id/radioBtn_ng"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/dp_12"
+        android:layout_gravity="center_horizontal"
+        android:layout_marginEnd="@dimen/dp_16"
+        android:text="@string/label_ng"
+        android:singleLine="true"
+        android:textColor="@color/over_color"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toEndOf="@+id/radioBtn_ok"
+        app:layout_constraintTop_toTopOf="@+id/btn_newDimenInput"
+        app:layout_constraintBottom_toBottomOf="@+id/btn_newDimenInput"
+        app:layout_constraintEnd_toStartOf="@+id/btn_newDimenInput"
+        />
+    <ImageButton
+        android:id="@+id/btn_newDimenInput"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        style="@style/Base.Widget.AppCompat.Button.Borderless"
+        android:src="@mipmap/ic_newinput"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toEndOf="@+id/radioBtn_ng"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/empty_sop_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/empty_sop_layout.xml	(date 1576312078495)
+++ app/src/main/res/layout/empty_sop_layout.xml	(date 1576312078495)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--获取维修单时的布局-->
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:srcCompat="@mipmap/empty_sop"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_sop_prompt"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginBottom="50dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/footbar_newdimen.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/footbar_newdimen.xml	(date 1576311467812)
+++ app/src/main/res/layout/footbar_newdimen.xml	(date 1576311467812)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <android.support.v7.widget.AppCompatTextView
+        android:id="@+id/label_dimenAdd"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_margin="@dimen/dp_10"
+        android:textColor="@color/black"
+        android:text="@string/label_newDimen"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:drawableStart="@mipmap/ic_add_left"
+        android:drawablePadding="@dimen/dp_10"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/empty_nodata_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/empty_nodata_layout.xml	(date 1576311467686)
+++ app/src/main/res/layout/empty_nodata_layout.xml	(date 1576311467686)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--获取维修单内容清单时的布局-->
+<androidx.constraintlayout.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:srcCompat="@mipmap/ic_data_empty"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_data_prompt"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginTop="@dimen/activity_vertical_margin"
+        android:layout_marginBottom="50dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/empty_offline_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/empty_offline_layout.xml	(date 1576311467850)
+++ app/src/main/res/layout/empty_offline_layout.xml	(date 1576311467850)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:srcCompat="@mipmap/ic_offline"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/empty_offline_prompt"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        app:layout_constraintTop_toBottomOf="@+id/imageView"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:layout_marginTop="@dimen/activity_vertical_margin"
+        android:layout_marginBottom="50dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/layout_defective_union.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_defective_union.xml	(date 1576311467578)
+++ app/src/main/res/layout/layout_defective_union.xml	(date 1576311467578)
@@ -0,0 +1,104 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <android.support.v7.widget.AppCompatTextView
+        android:id="@+id/label_percentageOfDefective"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:text="@string/label_percentageOfDefective"
+        android:layout_marginStart="@dimen/dp_12"
+        android:layout_marginEnd="@dimen/dp_2"
+        android:textColor="@color/colorPrimaryDark"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/text_percentageOfDefective"
+        />
+    <android.support.v7.widget.AppCompatTextView
+        android:id="@+id/text_percentageOfDefective"
+        android:layout_width="@dimen/dp_72"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Large"
+        android:textColor="@color/black"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/label_percentageOfDefective"
+        app:layout_constraintEnd_toStartOf="@+id/img_bridge"
+        />
+    <ImageView
+        android:id="@+id/img_bridge"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:src="@mipmap/ic_bridge"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/text_percentageOfDefective"
+        />
+    <TextView
+        android:id="@+id/label_sampleSize"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/dp_2"
+        android:singleLine="true"
+        android:text="@string/label_sampleSize"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:textColor="@color/holo_title"
+        app:layout_constraintEnd_toStartOf="@+id/edit_sampleSize"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toEndOf="@+id/img_bridge"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/label_numberOfDefective"
+        />
+    <com.furja.alertsop.view.ClearableEditTextWithIcon
+        android:id="@+id/edit_sampleSize"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/dp_12"
+        android:layout_gravity="center_horizontal"
+        android:singleLine="true"
+        android:inputType="number"
+        android:layout_marginBottom="@dimen/dp_1"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintStart_toEndOf="@+id/label_sampleSize"
+        app:layout_constraintTop_toTopOf="@+id/label_sampleSize"
+        app:layout_constraintBottom_toBottomOf="@+id/label_sampleSize"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+    <TextView
+        android:id="@+id/label_numberOfDefective"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:singleLine="true"
+        android:text="@string/label_numberOfDefective"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:textColor="@color/holo_title"
+        android:layout_marginTop="@dimen/dp_6"
+        android:layout_marginBottom="@dimen/dp_2"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/edit_numberOfDefective"
+        app:layout_constraintHorizontal_weight="1"
+        app:layout_constraintStart_toStartOf="@+id/label_sampleSize"
+        app:layout_constraintTop_toBottomOf="@+id/label_sampleSize" />
+    <EditText
+        android:id="@+id/edit_numberOfDefective"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/dp_12"
+        android:layout_marginBottom="@dimen/dp_1"
+        android:layout_gravity="center_horizontal"
+        android:singleLine="true"
+        android:inputType="number"
+        android:focusable="false"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintStart_toEndOf="@+id/label_numberOfDefective"
+        app:layout_constraintTop_toTopOf="@+id/label_numberOfDefective"
+        app:layout_constraintBottom_toBottomOf="@+id/label_numberOfDefective"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/include_barcode.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/include_barcode.xml	(date 1576311643171)
+++ app/src/main/res/layout/include_barcode.xml	(date 1576311643171)
@@ -0,0 +1,130 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:focusableInTouchMode="true"
+    android:focusable="true"
+    android:orientation="vertical">
+    <androidx.appcompat.widget.AppCompatEditText
+        android:id="@+id/edit_barCode"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/dp_4"
+        android:layout_marginStart="@dimen/dp_4"
+        android:layout_marginEnd="@dimen/dp_4"
+        android:background="@drawable/shape_input_bg"
+        android:singleLine="true"
+        android:drawablePadding="@dimen/dp_2"
+        android:hint="@string/hint_barCode"
+        android:imeOptions="actionDone"
+        android:drawableEnd="@mipmap/ic_barcode_right" />
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/materialInfo"
+        android:visibility="gone"
+        android:layout_marginStart="@dimen/dp_10"
+        android:layout_marginBottom="0dp"
+        android:layout_marginTop="0dp"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        >
+        <LinearLayout
+            android:id="@+id/linear_name"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintTop_toTopOf="parent"
+            >
+            <TextView
+                android:id="@+id/label_materialName"
+                android:text="@string/label_materialName"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_vertical"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintEnd_toStartOf="@+id/text_materialName"
+                app:layout_constraintTop_toTopOf="@+id/text_materialName"
+                app:layout_constraintBottom_toBottomOf="@+id/text_materialName"
+                />
+            <TextView
+                android:id="@+id/text_materialName"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:textColor="@color/black"
+                android:layout_marginStart="@dimen/dp_10"
+                android:layout_weight="1"
+                app:layout_constraintHorizontal_weight="1"
+                android:layout_marginTop="0dp"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintStart_toEndOf="@+id/label_materialName"
+                app:layout_constraintEnd_toEndOf="parent"
+                />
+        </LinearLayout>
+        <LinearLayout
+            android:id="@+id/linear_model"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/linear_name"
+            >
+            <TextView
+                android:id="@+id/label_materialModel"
+                android:text="@string/label_materialModel"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_vertical"
+                app:layout_constraintTop_toTopOf="@+id/text_materialModel"
+                app:layout_constraintBottom_toBottomOf="@+id/text_materialModel"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintEnd_toStartOf="@+id/text_materialModel"
+                />
+            <TextView
+                android:id="@+id/text_materialModel"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="@dimen/dp_10"
+                android:textColor="@color/black"
+                android:layout_marginTop="0dp"
+                android:layout_weight="1"
+                app:layout_constraintHorizontal_weight="1"
+                app:layout_constraintStart_toEndOf="@+id/label_materialModel"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/text_materialName"
+                />
+        </LinearLayout>
+        <LinearLayout
+            android:id="@+id/linear_no"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/linear_model"
+            >
+            <TextView
+                android:id="@+id/label_produceNo"
+                android:text="@string/label_produceNo"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_vertical"
+                app:layout_constraintTop_toTopOf="@+id/text_produceNo"
+                app:layout_constraintBottom_toBottomOf="@+id/text_produceNo"
+                app:layout_constraintStart_toStartOf="parent"
+                app:layout_constraintEnd_toStartOf="@+id/text_produceNo"
+                />
+            <TextView
+                android:id="@+id/text_produceNo"
+                android:layout_width="0dp"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="@dimen/dp_10"
+                android:textColor="@color/black"
+                android:layout_marginTop="0dp"
+                android:layout_weight="1"
+                app:layout_constraintHorizontal_weight="1"
+                app:layout_constraintStart_toEndOf="@+id/label_produceNo"
+                app:layout_constraintEnd_toEndOf="parent"
+                app:layout_constraintTop_toBottomOf="@+id/text_materialModel"
+                />
+        </LinearLayout>
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</LinearLayout>
Index: app/src/main/res/layout/layout_feelerchild_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_feelerchild_item.xml	(date 1576311467506)
+++ app/src/main/res/layout/layout_feelerchild_item.xml	(date 1576311467506)
@@ -0,0 +1,45 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--塞尺,用于测量平面度-->
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/label_check"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_24"
+        android:layout_marginTop="@dimen/dp_12"
+        android:layout_marginBottom="@dimen/dp_10"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/edit_flatness"
+        />
+    <android.support.v7.widget.AppCompatEditText
+        android:id="@+id/edit_flatness"
+        android:inputType="numberDecimal"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/dp_1"
+        android:background="@drawable/shape_input_box"
+        android:layout_marginEnd="@dimen/dp_6"
+        android:drawableEnd="@mipmap/ic_mm_right"
+        app:layout_constraintHorizontal_weight="3"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintStart_toEndOf="@+id/label_check"
+        app:layout_constraintEnd_toStartOf="@+id/btn_deleteChild"
+        />
+    <View
+        android:id="@+id/btn_deleteChild"
+        android:layout_width="@dimen/dp_24"
+        android:layout_height="@dimen/dp_24"
+        android:layout_marginEnd="@dimen/dp_6"
+        android:background="@mipmap/ic_delete_child"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/edit_flatness"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/layout_hardnesschild_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_hardnesschild_item.xml	(date 1576311467951)
+++ app/src/main/res/layout/layout_hardnesschild_item.xml	(date 1576311467951)
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/label_check"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_24"
+        android:layout_marginTop="@dimen/dp_12"
+        android:layout_marginBottom="@dimen/dp_10"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/edit_hardness"
+        />
+    <android.support.v7.widget.AppCompatEditText
+        android:id="@+id/edit_hardness"
+        android:inputType="numberDecimal"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/dp_1"
+        android:background="@drawable/shape_input_box"
+        android:layout_marginEnd="@dimen/dp_6"
+        android:drawableEnd="@mipmap/ic_degree_right"
+        app:layout_constraintHorizontal_weight="3"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintStart_toEndOf="@+id/label_check"
+        app:layout_constraintEnd_toStartOf="@+id/btn_deleteChild"
+        />
+    <View
+        android:id="@+id/btn_deleteChild"
+        android:layout_width="@dimen/dp_24"
+        android:layout_height="@dimen/dp_24"
+        android:layout_marginEnd="@dimen/dp_6"
+        android:background="@mipmap/ic_delete_child"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/edit_hardness"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/layout_dimengroup_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_dimengroup_item.xml	(date 1576311467615)
+++ app/src/main/res/layout/layout_dimengroup_item.xml	(date 1576311467615)
@@ -0,0 +1,249 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginTop="@dimen/dp_6"
+    android:layout_marginBottom="@dimen/dp_2"
+    android:foreground="?attr/selectableItemBackground"
+    app:cardCornerRadius="@dimen/dp_2"
+    app:cardElevation="@dimen/dp_2"
+    app:cardUseCompatPadding="false"
+    >
+    <androidx.constraintlayout.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/groupItem_title"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+            android:textColor="@color/black"
+            android:layout_marginStart="@dimen/dp_8"
+            android:drawableStart="@mipmap/ic_dimen_left"
+            app:layout_constraintTop_toTopOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            />
+        <View
+            android:id="@+id/btn_delete"
+            android:layout_width="@dimen/dp_48"
+            android:layout_height="@dimen/dp_48"
+            android:background="@mipmap/ic_del"
+            app:layout_constraintTop_toTopOf="@+id/groupItem_title"
+            app:layout_constraintBottom_toBottomOf="@+id/groupItem_title"
+            app:layout_constraintEnd_toEndOf="parent"
+            />
+        <android.support.design.widget.TextInputLayout
+            android:id="@+id/input_standardDimen"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:hint="@string/hint_standardDimen"
+            app:layout_constraintHorizontal_weight="1"
+            app:layout_constraintTop_toTopOf="@+id/input_upperLimit"
+            app:layout_constraintBottom_toBottomOf="@+id/input_lowerLimit"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintEnd_toStartOf="@+id/text_inter"
+            >
+            <android.support.design.widget.TextInputEditText
+                android:id="@+id/edit_standardDimen"
+                android:inputType="numberDecimal"
+                android:gravity="end"
+                android:background="@drawable/shape_input_box"
+                android:nextFocusDown="@+id/edit_upperOffset"
+                android:layout_marginStart="@dimen/dp_4"
+                android:paddingEnd="@dimen/dp_2"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content" />
+        </android.support.design.widget.TextInputLayout>
+
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/text_inter"
+            android:text="@string/inter_jiajian"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textColor="@color/black"
+            android:textAppearance="@style/TextAppearance.AppCompat.Large"
+            app:layout_constraintTop_toTopOf="@+id/input_upperLimit"
+            app:layout_constraintBottom_toBottomOf="@+id/input_lowerLimit"
+            app:layout_constraintEnd_toStartOf="@+id/edit_upperOffset"
+            app:layout_constraintStart_toEndOf="@+id/input_standardDimen"
+            />
+        <android.support.v7.widget.AppCompatEditText
+            android:id="@+id/edit_upperOffset"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:inputType="numberDecimal"
+            android:background="@drawable/shape_input_box"
+            android:drawableStart="@mipmap/ic_upper_left"
+            android:nextFocusDown="@+id/edit_lowerOffset"
+            android:hint="@string/hint_upperOffset"
+            android:layout_marginTop="@dimen/sp_12"
+            app:layout_constraintHorizontal_weight="1"
+            app:layout_constraintTop_toTopOf="@+id/input_upperLimit"
+            app:layout_constraintBottom_toTopOf="@+id/edit_lowerOffset"
+            app:layout_constraintStart_toEndOf="@+id/text_inter"
+            app:layout_constraintEnd_toStartOf="@+id/img_bridge"
+            />
+        <android.support.v7.widget.AppCompatEditText
+            android:id="@+id/edit_lowerOffset"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:inputType="numberDecimal"
+            android:background="@drawable/shape_input_box"
+            android:drawableStart="@mipmap/ic_lower_left"
+            android:hint="@string/hint_lowerOffset"
+            android:nextFocusDown="@+id/edit_upperLimit"
+            app:layout_constraintHorizontal_weight="1"
+            app:layout_constraintTop_toBottomOf="@+id/edit_upperOffset"
+            app:layout_constraintStart_toStartOf="@+id/edit_upperOffset"
+            app:layout_constraintEnd_toEndOf="@+id/edit_upperOffset"
+            app:layout_constraintBottom_toBottomOf="@+id/input_lowerLimit"
+            />
+        <ImageView
+            android:id="@+id/img_bridge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:src="@mipmap/ic_bridge"
+            app:layout_constraintHorizontal_weight="1"
+            app:layout_constraintTop_toTopOf="@+id/input_upperLimit"
+            app:layout_constraintBottom_toBottomOf="@+id/input_lowerLimit"
+            app:layout_constraintStart_toEndOf="@+id/edit_upperOffset"
+            app:layout_constraintEnd_toStartOf="@+id/input_upperLimit"
+            />
+
+        <android.support.design.widget.TextInputLayout
+            android:id="@+id/input_upperLimit"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:hint="@string/label_upperLimit"
+            android:layout_marginStart="@dimen/dp_2"
+            android:textColorHint="@color/pink"
+            app:layout_constraintHorizontal_weight="1"
+            app:layout_constraintTop_toBottomOf="@+id/groupItem_title"
+            app:layout_constraintStart_toEndOf="@+id/img_bridge"
+            app:layout_constraintEnd_toEndOf="parent"
+            >
+            <android.support.design.widget.TextInputEditText
+                android:id="@+id/edit_upperLimit"
+                android:inputType="numberDecimal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:nextFocusDown="@+id/edit_lowerLimit"
+                />
+        </android.support.design.widget.TextInputLayout>
+
+        <android.support.design.widget.TextInputLayout
+            android:id="@+id/input_lowerLimit"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:hint="@string/label_lowerLimit"
+            android:textColorHint="@color/green5"
+            app:layout_constraintHorizontal_weight="1"
+            app:layout_constraintTop_toBottomOf="@+id/input_upperLimit"
+            app:layout_constraintStart_toStartOf="@+id/input_upperLimit"
+            app:layout_constraintEnd_toEndOf="parent">
+            <android.support.design.widget.TextInputEditText
+                android:id="@+id/edit_lowerLimit"
+                android:inputType="numberDecimal"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content" />
+        </android.support.design.widget.TextInputLayout>
+
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/label_gaugeType"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/label_gaugeType"
+            android:layout_marginStart="@dimen/dp_16"
+            android:layout_marginTop="@dimen/dp_6"
+            android:layout_marginEnd="@dimen/dp_12"
+            android:textStyle="bold"
+            android:textAppearance="@style/TextAppearance.AppCompat.Medium"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/input_lowerLimit"
+
+            />
+
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/text_ruleGauge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/label_ruler"
+            android:textColor="@color/holo_text"
+            android:textSize="@dimen/sp_18"
+            android:drawableEnd="@mipmap/ic_selectend"
+            android:layout_marginStart="@dimen/dp_16"
+            app:layout_constraintStart_toEndOf="@+id/label_gaugeType"
+            app:layout_constraintTop_toTopOf="@+id/label_gaugeType"
+            app:layout_constraintBottom_toBottomOf="@+id/label_gaugeType"
+            />
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/text_pinGauge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/label_pinGauge"
+            android:textSize="@dimen/sp_14"
+            android:textColor="@color/color_text"
+            android:layout_marginStart="@dimen/dp_16"
+            app:layout_constraintStart_toEndOf="@+id/text_ruleGauge"
+            app:layout_constraintTop_toTopOf="@+id/label_gaugeType"
+            app:layout_constraintBottom_toBottomOf="@+id/label_gaugeType"/>
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/text_noDimenGauge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/label_useGuage"
+            android:textSize="@dimen/sp_14"
+            android:textColor="@color/color_text"
+            android:layout_marginStart="@dimen/dp_16"
+            app:layout_constraintStart_toEndOf="@+id/text_pinGauge"
+            app:layout_constraintTop_toTopOf="@+id/label_gaugeType"
+            app:layout_constraintBottom_toBottomOf="@+id/label_gaugeType"/>
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/text_hardnessGauge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/label_hardnessGauge"
+            android:textSize="@dimen/sp_14"
+            android:textColor="@color/color_text"
+            android:layout_marginStart="@dimen/dp_16"
+            app:layout_constraintStart_toEndOf="@+id/text_noDimenGauge"
+            app:layout_constraintTop_toTopOf="@+id/label_gaugeType"
+            app:layout_constraintBottom_toBottomOf="@+id/label_gaugeType"/>
+        <android.support.v7.widget.AppCompatTextView
+            android:id="@+id/text_feelerGauge"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/label_feelerGauge"
+            android:textSize="@dimen/sp_14"
+            android:textColor="@color/color_text"
+            android:layout_marginStart="@dimen/dp_16"
+            app:layout_constraintStart_toEndOf="@+id/text_hardnessGauge"
+            app:layout_constraintTop_toTopOf="@+id/label_gaugeType"
+            app:layout_constraintBottom_toBottomOf="@+id/label_gaugeType"/>
+        <android.support.v7.widget.RecyclerView
+            android:id="@+id/recycler_dimenChild"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dp_12"
+            app:layout_constraintTop_toBottomOf="@+id/label_gaugeType"
+            app:layout_constraintBottom_toTopOf="@+id/bar_judgement"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            >
+        </android.support.v7.widget.RecyclerView>
+        <include
+            android:id="@+id/bar_judgement"
+            layout="@layout/bar_judgement"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/dp_8"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@+id/recycler_dimenChild"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintBottom_toBottomOf="parent"
+            />
+    </androidx.constraintlayout.ConstraintLayout>
+
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/layout/layout_edit_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_edit_dialog.xml	(date 1576311467984)
+++ app/src/main/res/layout/layout_edit_dialog.xml	(date 1576311467984)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="@dimen/dp_360"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/itemNum_label"
+        android:text="@string/badItemNum_label"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/Base.TextAppearance.AppCompat.Medium"
+        android:layout_marginStart="@dimen/activity_horizontal_margin"
+        android:layout_marginTop="@dimen/login_input_margin"
+        android:gravity="center_horizontal"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        />
+
+    <EditText
+        android:id="@+id/itemNum_edit"
+        android:hint="@string/hint_empty"
+        android:layout_width="@dimen/dp_200"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_10"
+        android:textAppearance="@style/Base.TextAppearance.AppCompat.Medium"
+        android:singleLine="true"
+        android:imeOptions="actionNext"
+        android:inputType="number"
+        android:focusable="true"
+        android:selectAllOnFocus="true"
+        android:focusableInTouchMode="true"
+        app:layout_constraintTop_toTopOf="@+id/itemNum_label"
+        app:layout_constraintBottom_toBottomOf="@+id/itemNum_label"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+
+    <TextView
+        android:id="@+id/itemRemark_label"
+        android:text="@string/label_remark"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textAppearance="@style/Base.TextAppearance.AppCompat.Medium"
+        app:layout_constraintTop_toBottomOf="@+id/itemNum_label"
+        android:layout_marginTop="@dimen/login_input_margin"
+        android:layout_marginStart="@dimen/activity_horizontal_margin"
+        android:layout_marginBottom="@dimen/dp_12"
+        android:gravity="start"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+
+    <EditText
+        android:id="@+id/itemRemark_edit"
+        android:layout_width="@dimen/dp_200"
+        android:layout_height="wrap_content"
+        android:hint="@string/hint_empty"
+        android:singleLine="true"
+        android:layout_marginStart="@dimen/dp_10"
+        android:textAppearance="@style/Base.TextAppearance.AppCompat.Medium"
+        app:layout_constraintTop_toTopOf="@+id/itemRemark_label"
+        app:layout_constraintBottom_toBottomOf="@+id/itemRemark_label"
+        app:layout_constraintEnd_toEndOf="parent"
+        />
+
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/layout_pinchild_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_pinchild_item.xml	(date 1576311467460)
+++ app/src/main/res/layout/layout_pinchild_item.xml	(date 1576311467460)
@@ -0,0 +1,78 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/label_check"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_24"
+        android:layout_marginTop="@dimen/dp_12"
+        android:layout_marginBottom="@dimen/dp_10"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/edit_dimenStart"
+        />
+    <android.support.v7.widget.AppCompatEditText
+        android:id="@+id/edit_dimenStart"
+        android:inputType="numberDecimal"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/dp_1"
+        android:background="@drawable/shape_input_box"
+        android:layout_marginEnd="@dimen/dp_2"
+        android:nextFocusDown="@+id/edit_dimenEnd"
+        app:layout_constraintHorizontal_weight="3"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintStart_toEndOf="@+id/label_check"
+        app:layout_constraintEnd_toStartOf="@+id/tong_text"
+        />
+    <TextView
+        android:id="@+id/tong_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/label_tong"
+        app:layout_constraintStart_toEndOf="@+id/edit_dimenStart"
+        app:layout_constraintEnd_toStartOf="@+id/edit_dimenEnd"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        />
+    <android.support.v7.widget.AppCompatEditText
+        android:id="@+id/edit_dimenEnd"
+        android:inputType="numberDecimal"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/dp_1"
+        android:background="@drawable/shape_input_box"
+        android:layout_marginEnd="@dimen/dp_2"
+        app:layout_constraintHorizontal_weight="3"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintStart_toEndOf="@+id/tong_text"
+        app:layout_constraintEnd_toStartOf="@+id/zhi_text"
+        />
+    <TextView
+        android:id="@+id/zhi_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="@string/label_end"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintStart_toEndOf="@+id/edit_dimenEnd"
+        app:layout_constraintEnd_toStartOf="@+id/btn_deleteChild"
+        />
+    <View
+        android:id="@+id/btn_deleteChild"
+        android:layout_width="@dimen/dp_24"
+        android:layout_height="@dimen/dp_24"
+        android:layout_marginEnd="@dimen/dp_6"
+        android:background="@mipmap/ic_delete_child"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/edit_dimen"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/layout_inspecthistory_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_inspecthistory_item.xml	(date 1576311467883)
+++ app/src/main/res/layout/layout_inspecthistory_item.xml	(date 1576311467883)
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_margin="@dimen/dp_4"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/item_type"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textColor="@color/black"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+    <TextView
+        android:id="@+id/item_content"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_2"
+        app:layout_constraintStart_toEndOf="@+id/item_type"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/item_note"
+        />
+    <TextView
+        android:id="@+id/item_note"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:singleLine="true"
+        app:layout_constraintStart_toStartOf="@+id/item_content"
+        app:layout_constraintTop_toBottomOf="@+id/item_content"
+        app:layout_constraintBottom_toBottomOf="parent"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/ui/own/BaseRecordFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/ui/own/BaseRecordFragment.java	(date 1576066113370)
+++ app/src/main/java/com/furja/devicemanager/ui/own/BaseRecordFragment.java	(date 1576066113370)
@@ -0,0 +1,37 @@
+package com.furja.devicemanager.ui.own;
+
+import android.content.Context;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+
+import com.furja.devicemanager.beans.RecordDetailItem;
+
+/**
+ * OwnRepairDetailFragment和OwnRecordListFragment
+ * 的父类
+ */
+
+public class BaseRecordFragment extends Fragment {
+    protected Context mContext;
+    protected FragCommunionListener fragCommunionListener;
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        mContext=getContext();
+    }
+
+    public interface FragCommunionListener {
+        void viewDetail(RecordDetailItem detailItem);
+        void backToList();
+    }
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        fragCommunionListener=(FragCommunionListener)context;
+    }
+
+
+}
Index: app/src/main/res/layout/layout_item_solution.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_item_solution.xml	(date 1558074357428)
+++ app/src/main/res/layout/layout_item_solution.xml	(date 1558074357428)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content">
+    <CheckedTextView
+        android:id="@+id/check_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/ui/plan/FilterPlanFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/ui/plan/FilterPlanFragment.java	(date 1576829481368)
+++ app/src/main/java/com/furja/devicemanager/ui/plan/FilterPlanFragment.java	(date 1576829481368)
@@ -0,0 +1,149 @@
+package com.furja.devicemanager.ui.plan;
+
+import android.os.Bundle;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.EditText;
+import android.widget.TextView;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.PlanFilter;
+import com.furja.devicemanager.utils.Utils;
+
+import java.util.Collection;
+import java.util.List;
+import java.util.Map;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import butterknife.OnClick;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ *计划筛选器
+ */
+public class FilterPlanFragment extends Fragment {
+
+    @BindView(R.id.deptName_text)
+    TextView text_deptName;
+    @BindView(R.id.planState_text)
+    TextView text_planState;
+    @BindView(R.id.deviceName_edit)
+    EditText edit_deviceName;
+    @BindView(R.id.deviceNumber_edit)
+    EditText edit_deviceNumber;
+    BasePlanFragment.FragExchange fragExchange;
+    PlanFilter planFilter;
+    List<String> deptNames;
+    Collection<String> planStates;
+    Utils utils;
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View dialogView
+                = inflater.inflate(R.layout.filter_drawerlayout,
+                    container, false);
+        ButterKnife.bind(this,dialogView);
+        planFilter=new PlanFilter();
+
+        utils=new Utils();
+        Map<Integer,String> planMap=utils.getPlanMap();
+        planStates=planMap.values();
+        return dialogView;
+    }
+
+    @OnClick({R.id.btn_makeSure,R.id.linear_dept,R.id.linear_planState})
+    public void onClick(View view)
+    {
+        switch (view.getId())
+        {
+            case R.id.btn_makeSure:
+                planFilter
+                        .setDeviceName(getStringofEdit(edit_deviceName.getText()));
+                planFilter
+                        .setDeviceNumber(getStringofEdit(edit_deviceNumber.getText()));
+                planFilter
+                        .setSettingPlace(getStringofEdit(text_deptName.getText()));
+                String planState=getStringofEdit(text_planState.getText());
+                planFilter.setPlanState(utils.getPlanState(planState));
+                fragExchange.setPlanFilter(planFilter);
+                fragExchange.onBackPressed();
+                break;
+
+            case R.id.linear_dept:
+                if(deptNames.isEmpty())
+                {
+                    showToast("无使用部门的待选项");
+                    break;
+                }
+                new MaterialDialog.Builder(getContext())
+                        .title("选择设备使用部门")
+                        .items(deptNames)
+                        .itemsCallbackSingleChoice(0, new MaterialDialog.ListCallbackSingleChoice() {
+                            @Override
+                            public boolean onSelection(MaterialDialog dialog, View itemView, int which, CharSequence text) {
+                                showLog(text+"");
+                                text_deptName.setText(text);
+                                return false;
+                            }
+                        }).build().show();
+                break;
+
+            case R.id.linear_planState:
+                new MaterialDialog.Builder(getContext())
+                        .title("筛选计划状态")
+                        .items(planStates)
+                        .itemsCallbackSingleChoice(0, new MaterialDialog.ListCallbackSingleChoice() {
+                            @Override
+                            public boolean onSelection(MaterialDialog dialog, View itemView, int which, CharSequence text) {
+                                showLog(text+"");
+                                text_planState.setText(text);
+                                return false;
+                            }
+                        }).build().show();
+                break;
+        }
+    }
+
+
+    /**
+     * 获取editText的Stirng,需判空
+     * @param charSequence
+     * @return
+     */
+    public String getStringofEdit(CharSequence charSequence)
+    {
+        if(TextUtils.isEmpty(charSequence))
+            return "";
+        else
+            return charSequence.toString();
+    }
+
+
+
+
+    public BasePlanFragment.FragExchange getFragExchange() {
+        return fragExchange;
+    }
+
+    public void setFragExchange(BasePlanFragment.FragExchange fragExchange) {
+        this.fragExchange = fragExchange;
+    }
+
+    public List<String> getDeptNames() {
+        return deptNames;
+    }
+
+    public void setDeptNames(List<String> deptNames) {
+        this.deptNames = deptNames;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/ui/plan/PlanListActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/ui/plan/PlanListActivity.java	(date 1576907237241)
+++ app/src/main/java/com/furja/devicemanager/ui/plan/PlanListActivity.java	(date 1576907237241)
@@ -0,0 +1,280 @@
+package com.furja.devicemanager.ui.plan;
+
+import android.content.Intent;
+import android.os.Bundle;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentTransaction;
+import androidx.appcompat.app.ActionBar;
+import androidx.appcompat.app.AppCompatActivity;
+import android.text.TextUtils;
+import android.view.KeyEvent;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.BaseAdapter;
+import android.widget.SpinnerAdapter;
+
+import com.alibaba.fastjson.JSON;
+import com.furja.devicemanager.ui.InspectFragmentDev;
+import com.furja.devicemanager.ui.MaintainFragmentDev;
+import com.furja.devicemanager.ui.RepairDetailFragmentDev;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.InspectPlan;
+import com.furja.devicemanager.beans.MaintainPlan;
+import com.furja.devicemanager.beans.PlanFilter;
+import com.furja.devicemanager.beans.RepairOrderItem;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import butterknife.ButterKnife;
+
+import static com.furja.devicemanager.utils.Constants.KEY_PLAN_ITEM;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 保养计划列表的Activity
+ */
+
+public class PlanListActivity extends AppCompatActivity implements BasePlanFragment.FragExchange{
+    MaintainPlanFragment maintainPlanFragment;
+    Fragment prevFragment,tempFragment; //上一个Fragment和当前的Fragment
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_plan_list);
+        ButterKnife.bind(this);
+        analyse(getIntent());
+        getSupportActionBar()
+                .setDisplayHomeAsUpEnabled(true);
+    }
+    /**
+     * 添加Spinner至Tab
+     */
+    public void addSpinnerToTab() {
+        ActionBar actionBar=getSupportActionBar();
+        if(actionBar.getNavigationMode()
+                ==android.app.ActionBar.NAVIGATION_MODE_LIST)
+            return;
+        actionBar.setNavigationMode(android.app.ActionBar.NAVIGATION_MODE_LIST);
+        List<String> spinnerList=new ArrayList<String>();
+        spinnerList.add("今日可执行计划");
+        spinnerList.add("今日可审核计划");
+        spinnerList.add("今日到期计划");
+        spinnerList.add("明日可执行计划");
+        spinnerList.add("明日到期计划");
+        spinnerList.add("已过期计划");
+        // 定义一个下拉列表数据适配器
+        SpinnerAdapter mSpinnerAdapter
+                = new ArrayAdapter<String>(this,android.R.layout.simple_spinner_dropdown_item, spinnerList);
+        ActionBar.OnNavigationListener mOnNavigationListener = new ActionBar.OnNavigationListener() {
+
+            @Override
+            public boolean onNavigationItemSelected(int position, long itemId) {
+//                execFilter(position);
+                List<MaintainPlan> planList=maintainPlanFragment.getPlanList();
+                showLog("选择了Position:"+position);
+                if(planList!=null)
+                    if(maintainPlanFragment!=null)
+                        maintainPlanFragment.execFilter(position);
+                return true;
+            }
+        };
+        actionBar.setListNavigationCallbacks(mSpinnerAdapter,
+                mOnNavigationListener);
+    }
+
+    /**
+     * 清除Spinner
+     */
+    @Override
+    public void clearSpinner() {
+        try {
+            ActionBar  actionBar=getSupportActionBar();
+            actionBar
+                    .setNavigationMode(ActionBar.NAVIGATION_MODE_STANDARD);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    private void analyse(Intent intent) {
+        if(intent==null)
+            return;
+        String dataString=intent.getDataString();
+        String itemString=intent.getStringExtra(KEY_PLAN_ITEM);
+        if(!TextUtils.isEmpty(dataString))
+        {
+            if(dataString.contains("InspectPlan"))
+            {
+                if(TextUtils.isEmpty(itemString))
+                    viewFragment(null,new InspectPlanFragment());
+                else
+                {
+                    InspectPlan inspectPlan
+                            = JSON.parseObject(itemString,InspectPlan.class);
+                    InspectFragmentDev fragment=new InspectFragmentDev();
+                    fragment.setInspectPlan(inspectPlan);
+                    viewFragment(null,fragment);
+                }
+            }
+            else if(dataString.contains("MaintainPlan"))
+            {
+                if(TextUtils.isEmpty(itemString))
+                {
+                    maintainPlanFragment=new MaintainPlanFragment();
+                    viewFragment(null,maintainPlanFragment);
+                }
+                else
+                {
+                    MaintainPlan maintainPlan
+                            = JSON.parseObject(itemString,MaintainPlan.class);
+                    MaintainFragmentDev fragment=new MaintainFragmentDev();
+                    List<MaintainPlan> planList=new ArrayList<MaintainPlan>();
+                    planList.add(maintainPlan);
+                    fragment.setPlanList(planList);
+                    viewFragment(null,fragment);
+                }
+            }
+            else if(dataString.contains("RepairOrder"))
+            {
+                if(!TextUtils.isEmpty(itemString))
+                {
+                    RepairDetailFragmentDev detailFragment
+                            =new RepairDetailFragmentDev();
+                    RepairOrderItem repairOrderItem
+                            =JSON.parseObject(itemString,RepairOrderItem.class);
+                    detailFragment.setCur_orderItem(repairOrderItem);
+                    viewFragment(null,detailFragment);
+                }
+            }
+        }
+    }
+
+    /**
+     * 切换Fragment
+     * @param to
+     */
+    public void viewFragment(Fragment from,Fragment to)
+    {
+        FragmentManager fm=getSupportFragmentManager();
+        FragmentTransaction fts = fm.beginTransaction();
+        if(from==to)
+            return;
+        prevFragment=from;
+        tempFragment=to;
+        if(from!=null)
+            fts.hide(from);
+        String tag="InspectPlanFragment";
+        String title="点检计划";
+        if(to instanceof MaintainPlanFragment)
+        {
+            tag="MaintainPlanFragment";
+            title="";
+        }
+        else
+        if(to instanceof MaintainFragmentDev)
+        {
+            tag="MaintainFragmentDev";
+            title="设备管理";
+        }
+        if(to.isAdded())
+        {
+            fts.show(to);
+        }
+        else
+        {
+            fts.add(R.id.record_frame, to,tag);
+        }
+        setBarTitle(title);
+        fts.commit();
+    }
+
+    /**
+     * 设置状态栏标题
+     * @param title
+     */
+    public void setBarTitle(String title)
+    {
+        getSupportActionBar().setTitle(title);
+    }
+
+    @Override
+    public void setPlanFilter(PlanFilter filter) {
+        if(prevFragment instanceof BasePlanFragment)
+        {
+            BasePlanFragment basePlanFragment=(BasePlanFragment)prevFragment;
+            basePlanFragment.setPlanFilter(filter);
+        }
+    }
+
+    public class MyAdapter extends BaseAdapter implements SpinnerAdapter{
+        private List<String> mDatas;
+        public MyAdapter(List<String> datas)
+        {
+            this.mDatas=datas;
+        }
+        @Override
+        public int getCount() {
+            return 0;
+        }
+
+        @Override
+        public Object getItem(int i) {
+            return null;
+        }
+
+        @Override
+        public long getItemId(int i) {
+            return 0;
+        }
+
+        @Override
+        public View getView(int i, View view, ViewGroup viewGroup) {
+            return null;
+        }
+    }
+
+    @Override
+    public boolean onKeyDown(int keyCode, KeyEvent event) {
+        if(keyCode==KeyEvent.KEYCODE_BACK)
+        {
+            onBackPressed();
+            return true;
+        }
+        return super.onKeyDown(keyCode, event);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if(item.getItemId()==R.id.action_complete
+                ||item.getItemId()==android.R.id.home)
+        {
+            showLog(getClass()+"在我这点了返回");
+            onBackPressed();
+        }
+        return super.onOptionsItemSelected(item);
+    }
+    @Override
+    public void onBackPressed()
+    {
+        if(prevFragment!=null)
+        {
+            if(tempFragment instanceof MaintainFragmentDev
+                    ||tempFragment instanceof InspectFragmentDev
+                        ||tempFragment instanceof FilterPlanFragment)
+            {
+                viewFragment(tempFragment,prevFragment);
+                return;
+            }
+        }
+        super.onBackPressed();
+    }
+
+
+
+}
Index: app/src/main/res/layout/layout_rulerchild_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_rulerchild_item.xml	(date 1576311467780)
+++ app/src/main/res/layout/layout_rulerchild_item.xml	(date 1576311467780)
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <TextView
+        android:id="@+id/label_check"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="@dimen/dp_24"
+        android:layout_marginTop="@dimen/dp_12"
+        android:layout_marginBottom="@dimen/dp_10"
+        app:layout_constraintHorizontal_weight="2"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toStartOf="@+id/edit_dimen"
+        />
+    <android.support.v7.widget.AppCompatEditText
+        android:id="@+id/edit_dimen"
+        android:inputType="numberDecimal"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginBottom="@dimen/dp_1"
+        android:background="@drawable/shape_input_box"
+        android:layout_marginEnd="@dimen/dp_6"
+        app:layout_constraintHorizontal_weight="3"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintStart_toEndOf="@+id/label_check"
+        app:layout_constraintEnd_toStartOf="@+id/btn_deleteChild"
+        />
+    <View
+        android:id="@+id/btn_deleteChild"
+        android:layout_width="@dimen/dp_24"
+        android:layout_height="@dimen/dp_24"
+        android:layout_marginEnd="@dimen/dp_6"
+        android:background="@mipmap/ic_delete_child"
+        app:layout_constraintTop_toTopOf="@+id/label_check"
+        app:layout_constraintBottom_toBottomOf="@+id/label_check"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toEndOf="@+id/edit_dimen"
+        />
+</androidx.constraintlayout.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/ui/plan/MaintainPlanFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/ui/plan/MaintainPlanFragment.java	(date 1576909071146)
+++ app/src/main/java/com/furja/devicemanager/ui/plan/MaintainPlanFragment.java	(date 1576909071146)
@@ -0,0 +1,219 @@
+package com.furja.devicemanager.ui.plan;
+
+import android.text.TextUtils;
+import android.view.View;
+
+import com.alibaba.fastjson.JSON;
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.furja.devicemanager.ui.MaintainFragmentDev;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.MaintainPlan;
+import com.furja.devicemanager.utils.Constants;
+import com.furja.devicemanager.utils.JSONParser;
+import com.furja.devicemanager.utils.Utils;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.List;
+
+import okhttp3.Call;
+
+import static com.furja.devicemanager.utils.Constants.FURJA_GET_MAINTAINPLAN;
+import static com.furja.devicemanager.utils.Utils.getCurDate;
+import static com.furja.devicemanager.utils.Utils.getTomorrowDate;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * 保养计划Fragment
+ */
+
+public class MaintainPlanFragment extends BasePlanFragment {
+
+    List<MaintainPlan> planList,mDatas;//其中mDatas是通过状态栏Spinner筛选后的数据集
+
+    List<String> spinnerList;
+    int position=0;
+    @Override
+    void initViewAndData() {
+        recyclerView.setAdapter(maintainPlanAdapter);
+        requestData();
+        maintainPlanAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {
+            @Override
+            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {
+                List<MaintainPlan> planList=adapter.getData();
+                MaintainPlan maintainPlan=planList.get(position);
+                MaintainFragmentDev fragment=new MaintainFragmentDev();
+                fragExchange.clearSpinner();
+                planList.clear();planList.add(maintainPlan);
+                fragment.setPlanList(planList);
+                fragExchange.viewFragment(MaintainPlanFragment.this,fragment);
+            }
+        });
+        showLog("构建MaintainPlanFragment");
+        fragExchange.addSpinnerToTab();
+    }
+
+
+    /**
+     * 筛选Filter
+     * @param position
+     */
+    public void execFilter(int position) {
+        if(planList==null)
+        {
+            showToast("无符合周期的保养计划");
+            return;
+        }
+        deptNames.clear();
+        this.position=position;
+        List<MaintainPlan> newData
+                =new ArrayList<>();
+        Date tomorrowDate=getTomorrowDate();
+        for(MaintainPlan plan:planList)
+        {
+            String nextDate=plan.getFNextMaintainDate();
+            switch (position)
+            {
+                case 0:
+                    if(plan.getFPlanState()== Constants.STATE_PLAN_NEEDRECORD)
+                        newData.add(plan);
+                    break;
+                case 1:
+                    if(plan.getFPlanState()== Constants.STATE_PLAN_NEEDCHECK)
+                        newData.add(plan);
+                    break;
+                case 2:
+                    if(!TextUtils.isEmpty(nextDate))
+                    {
+                        if(Utils.parseDate(nextDate)
+                                .compareTo(Utils.parseDate(getCurDate()))==0)
+                            newData.add(plan);
+                    }
+                    break;
+                case 3:
+
+                    if(!Utils.parseDate(plan.getFPlanEndDate()).before(tomorrowDate))
+                    {
+                        if(TextUtils.isEmpty(nextDate))
+                        {
+                            newData.add(plan);
+                        }
+                        else
+                        {
+                            Date nextMaintainDate=Utils.parseDate(nextDate);
+                            Calendar calendar=Calendar.getInstance();
+                            calendar.setTime(tomorrowDate);
+                            if(!tomorrowDate.after(nextMaintainDate)
+                                    &&Utils.isSameMonth(calendar,nextMaintainDate))
+                                newData.add(plan);  //明天在下次点检日期之前且在一个月
+                        }
+                    }
+                    break;
+                case 4:
+                    if(!Utils.parseDate(plan.getFPlanEndDate()).before(tomorrowDate))
+                    {
+                        if(!TextUtils.isEmpty(nextDate))
+                        {
+                            if(Utils.parseDate(nextDate)
+                                    .compareTo(tomorrowDate)==0)
+                                newData.add(plan);
+                        }
+                    }
+                    break;
+                case 5:
+                    if(plan.getFPlanState()==Constants.STATE_PLAN_OVER)
+                    break;
+            }
+
+            if(!deptNames.contains(plan.getFDeptName()))
+                deptNames.add(plan.getFDeptName());
+        }
+        maintainPlanAdapter.setNewData(newData);
+        mDatas=newData;
+        filterData();
+    }
+
+
+
+    @Override
+    public void requestData() {
+        maintainPlanAdapter.setEmptyView(R.layout.load_repairorder_view);
+        OkHttpUtils
+                .get()
+                .url(FURJA_GET_MAINTAINPLAN)
+                .addParams("devCode","0")
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        showLog(e.toString());
+                        if (++requestCount<3)
+                            requestData();
+                        else
+                        {
+                            maintainPlanAdapter.setEmptyView(R.layout.offline_empty_view);
+                        }
+                    }
+                    @Override
+                    public void onResponse(String s, int i) {
+                        requestCount=0;
+//                        showChartLog(getClass()+s);
+
+                        try {
+                            s= JSONParser.parserArray(s);
+                            planList= JSON.parseArray(s,MaintainPlan.class);
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            showToast("无对应的保养计划");
+                        }
+                        if(planList!=null)
+                        {
+                            execFilter(position);
+
+                        }
+                        maintainPlanAdapter.setEmptyView(R.layout.empty_view,recyclerView);
+                        refreshLayout.finishRefresh();
+                    }
+                });
+    }
+
+
+
+    public List<MaintainPlan> getPlanList() {
+        return planList;
+    }
+
+    public void setPlanList(List<MaintainPlan> planList) {
+        this.planList = planList;
+    }
+
+
+    @Override
+    void filterData() {
+        List<MaintainPlan> maintainPlans
+                =new ArrayList<MaintainPlan>();
+        if(mDatas==null||planFilter==null)
+            return;
+        for(MaintainPlan maintainPlan:mDatas)
+        {
+            if(planFilter.isMatch(maintainPlan))
+                maintainPlans.add(maintainPlan);
+        }
+        maintainPlanAdapter.setNewData(maintainPlans);
+    }
+
+    @Override
+    public void onHiddenChanged(boolean hidden) {
+        super.onHiddenChanged(hidden);
+        try {
+            if(!hidden)
+                fragExchange.addSpinnerToTab();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/ui/plan/BasePlanFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/ui/plan/BasePlanFragment.java	(date 1576829482163)
+++ app/src/main/java/com/furja/devicemanager/ui/plan/BasePlanFragment.java	(date 1576829482163)
@@ -0,0 +1,198 @@
+package com.furja.devicemanager.ui.plan;
+
+import android.content.Context;
+import android.os.Bundle;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.DividerItemDecoration;
+import androidx.recyclerview.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.Menu;
+import android.view.MenuInflater;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.InspectPlan;
+import com.furja.devicemanager.beans.MaintainPlan;
+import com.furja.devicemanager.beans.PlanFilter;
+import com.furja.devicemanager.utils.Utils;
+import com.furja.devicemanager.view.WrapLinearLayoutManager;
+import com.scwang.smartrefresh.header.MaterialHeader;
+import com.scwang.smartrefresh.layout.SmartRefreshLayout;
+import com.scwang.smartrefresh.layout.api.RefreshLayout;
+import com.scwang.smartrefresh.layout.listener.OnRefreshListener;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import butterknife.BindView;
+import butterknife.ButterKnife;
+
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 计划Fragment 的 基类
+ */
+public abstract class BasePlanFragment
+        extends Fragment {
+    @BindView(R.id.recycler_repairOrder)
+    RecyclerView recyclerView;
+    @BindView(R.id.refresh_repairOrder)
+    SmartRefreshLayout refreshLayout;
+    protected MaintainPlanAdapter maintainPlanAdapter;
+    protected InspectPlanAdapter inspectPlanAdapter;
+    protected int requestCount;
+    protected Context context;
+    FragExchange fragExchange;
+    List<String> deptNames;
+    PlanFilter planFilter;
+
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        fragExchange =(FragExchange)context;
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        context=getContext();
+        requestCount=0;
+        deptNames=new ArrayList<String>();
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.frag_repair_order, container, false);
+        ButterKnife.bind(this, view);
+        recyclerView
+                .setLayoutManager(new WrapLinearLayoutManager(context));
+        maintainPlanAdapter=new MaintainPlanAdapter(null);
+        inspectPlanAdapter=new InspectPlanAdapter(null);
+        maintainPlanAdapter.bindToRecyclerView(recyclerView);
+        inspectPlanAdapter.bindToRecyclerView(recyclerView);
+        setHasOptionsMenu(true);
+        initViewAndData();
+        refreshLayout.setRefreshHeader(new MaterialHeader(context).setShowBezierWave(false));
+        refreshLayout.setOnRefreshListener(new OnRefreshListener() {
+            @Override
+            public void onRefresh(RefreshLayout refreshlayout) {
+                requestData();
+            }
+        });
+        DividerItemDecoration itemDecoration
+                =new DividerItemDecoration(context,DividerItemDecoration.VERTICAL);
+        recyclerView.addItemDecoration(itemDecoration);
+        showLog("创建了BasePlanFragment");
+        return view;
+    }
+
+
+
+    /**
+     * 初始化数据及视图
+     */
+    abstract void initViewAndData();
+
+    /**
+     * 请求数据
+     */
+    abstract void requestData();
+    /**
+     * 请求数据
+     */
+    abstract void filterData();
+
+    protected class MaintainPlanAdapter extends BaseQuickAdapter<MaintainPlan,BaseViewHolder>
+    {
+        public MaintainPlanAdapter(@Nullable List<MaintainPlan> data) {
+            super(R.layout.repair_order_item,data);
+        }
+
+        @Override
+        protected void convert(BaseViewHolder helper, MaintainPlan item) {
+            helper.setText(R.id.order_title,item.getFDeviceName());
+            helper.setText(R.id.order_recordDate,"下次保养日期: "
+                    +item.getFormatDate(item.getFNextMaintainDate()))
+                    .setText(R.id.order_deviceSettingPlace,"设备编号: "+item.getFDeviceNumber());
+            helper.setText(R.id.order_troubleGrade,"保养类别: "+item.getFMaintainType());
+            helper.setText(R.id.order_billID,"计划编号: "+item.getFBillID());
+            helper.setText(R.id.order_orderContent,"使用部门: "+item.getFDeptName())
+                .setText(R.id.order_repairPersonnel,"保养周期: "+item.getFMaintainPeriod());
+            helper.setText(R.id.order_state, Utils.getPlanState(item.getFPlanState()));
+        }
+    }
+
+    protected class InspectPlanAdapter extends BaseQuickAdapter<InspectPlan,BaseViewHolder>
+    {
+        public InspectPlanAdapter(@Nullable List<InspectPlan> data) {
+            super(R.layout.repair_order_item,data);
+        }
+
+        @Override
+        protected void convert(BaseViewHolder helper, InspectPlan item) {
+            helper.setText(R.id.order_title,item.getFDeviceName());
+            helper.setText(R.id.order_recordDate,"下次点检日期: "
+                    +item.getFormatDate(item.getFNextInspectDate()))
+                    .setText(R.id.order_orderContent,"计划截止日期: "+item.getFormatDate(item.getFPlanEndDate()));
+            helper.setText(R.id.order_troubleGrade,"点检周期: "+item.getFInspectPeriod());
+            helper.setText(R.id.order_billID,"计划编号: "+item.getFBillID());
+            helper.setText(R.id.order_deviceSettingPlace,"使用部门: "+item.getFDeptName());
+            helper.setText(R.id.order_state, Utils.getPlanState(item.getFPlanState()));
+        }
+    }
+
+    @Override
+    public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {
+        inflater.inflate(R.menu.menu_filter,menu);
+        super.onCreateOptionsMenu(menu, inflater);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item) {
+        if(item.getItemId()==R.id.action_filter)
+        {
+            FilterPlanFragment planFragment
+                    =new FilterPlanFragment();
+            fragExchange.clearSpinner();
+            planFragment
+                    .setFragExchange(fragExchange);
+            planFragment
+                    .setDeptNames(deptNames);
+            fragExchange
+                    .viewFragment(this,planFragment);
+            fragExchange.setBarTitle("计划筛选");
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+
+
+    public PlanFilter getPlanFilter() {
+        return planFilter;
+    }
+
+    public void setPlanFilter(PlanFilter planFilter) {
+        this.planFilter = planFilter;
+        if(planFilter!=null)
+            filterData();
+    }
+
+
+
+    interface FragExchange
+    {
+        void viewFragment(Fragment from, Fragment fragment);
+        void addSpinnerToTab();
+        void clearSpinner();
+        void setBarTitle(String title);
+        void setPlanFilter(PlanFilter filter);
+        void onBackPressed();
+    }
+}
Index: app/src/main/res/layout/recycler_sop_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/recycler_sop_item.xml	(date 1569316404021)
+++ app/src/main/res/layout/recycler_sop_item.xml	(date 1569316404021)
@@ -0,0 +1,13 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_height="wrap_content"
+    android:layout_width="match_parent">
+    <com.github.chrisbanes.photoview.PhotoView
+        android:id="@+id/image_item"
+        android:scaleType="fitXY"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/json/PISpotCheckJSON.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/PISpotCheckJSON.java	(date 1576829481343)
+++ app/src/main/java/com/furja/devicemanager/json/PISpotCheckJSON.java	(date 1576829481343)
@@ -0,0 +1,243 @@
+package com.furja.devicemanager.json;
+
+import android.text.TextUtils;
+
+import com.alibaba.fastjson.JSON;
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.devicemanager.databases.PlasticInjectCheck;
+import com.furja.devicemanager.databases.PlasticInjectCheckChild;
+import com.furja.devicemanager.databases.PlasticInjectCheckChildDao;
+import com.furja.devicemanager.databases.PlasticInjectCheckDao;
+import com.furja.devicemanager.utils.Utils;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+import org.greenrobot.greendao.query.QueryBuilder;
+import java.util.Date;
+import java.util.List;
+import okhttp3.Call;
+import okhttp3.MediaType;
+import static com.furja.devicemanager.utils.Constants.PISPOTCHECK_UPLOAD_URL;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+/**
+ * 用于生成上传注塑车间开机点检参数集的JSON,携带上传方法
+ */
+
+public class PISpotCheckJSON {
+    @JSONField(name="FBarCode", ordinal = 1)
+    private String barCode;  // 设备条码
+    @JSONField(name="FCheckPersonelID", ordinal = 2)
+    private String personnelID;   //人员
+    @JSONField(format="yyyy-MM-dd HH:mm:ss",name = "FDate", ordinal = 3)
+    private Date date;
+    @JSONField(name="FPass", ordinal = 4)
+    private String isPass;
+    @JSONField(serialize=false)
+    private long interID;
+    @JSONField(serialize=false)
+    private PlasticInjectCheck piCheck;
+    @JSONField(serialize=false)
+    private int errorCounts=0;
+    @JSONField(name="DeviceManager_PI_SpotCheck_ChildItem", ordinal = 5)
+    private List<PlasticInjectCheckChild> PICheckChilds;
+    public PISpotCheckJSON(long interID)
+    {
+        this.interID=interID;
+        DaoSession daoSession
+                = DeviceManagerApp.getDaoSession();
+        PlasticInjectCheckDao dao
+                =daoSession.getPlasticInjectCheckDao();
+        QueryBuilder queryBuilder=dao.queryBuilder();
+        List<PlasticInjectCheck> PIChecks
+                =queryBuilder.where(PlasticInjectCheckDao.Properties.InterID.eq(interID))
+                .list();
+        if(PIChecks==null||PIChecks.size()==0)
+        {
+            showLog("没有这个对象");
+            return;
+        }
+        this.piCheck=PIChecks.get(0);
+        createJsonByPIcheck();
+    }
+
+    public String isPass() {
+        return isPass;
+    }
+
+    public void setPass(String pass) {
+        isPass = pass;
+    }
+
+    public interface UploadListener
+    {
+        void onSuccess();
+        void onFail();
+    }
+
+    public PISpotCheckJSON()
+    {
+    }
+
+
+    public PISpotCheckJSON(PlasticInjectCheck PIcheck)
+    {
+        this.piCheck=PIcheck;
+        createJsonByPIcheck();
+    }
+
+
+
+
+    /**
+     * 上传Json
+     */
+    public void uploadWithJson(UploadListener uploadListener)
+    {
+        upload(uploadListener);
+    }
+
+
+    /**
+     * 依据 PlasticInjectCheck 创建JSON
+     */
+    public void createJsonByPIcheck()
+    {
+        this.barCode=piCheck.getBarCode();
+        this.personnelID=piCheck.getPersonnelID();
+        this.date=piCheck.getDate();
+        this.interID=piCheck.getInterID();
+        this.isPass=piCheck.getPass()+"";
+        DaoSession daoSession
+                = DeviceManagerApp.getDaoSession();
+        PlasticInjectCheckChildDao dao
+                = daoSession.getPlasticInjectCheckChildDao();
+        QueryBuilder queryBuilder = dao.queryBuilder();
+        if(this.PICheckChilds==null)
+        {
+            this.PICheckChilds
+                    = queryBuilder.where(PlasticInjectCheckChildDao.Properties.InterID.eq(interID))
+                    .list();
+        }
+        if(PICheckChilds == null)
+        {
+            showLog("没有找到它的孩子");
+        }
+    }
+
+    /**
+     * 上传 json数据
+     */
+    public void upload(final UploadListener uploadListener)
+    {
+        String uploadUrl= PISPOTCHECK_UPLOAD_URL;       //注塑
+        String json=JSON.toJSONString(this);
+        if(TextUtils.isEmpty(barCode))
+            return;
+        showLog(json);
+        OkHttpUtils
+                .postString()
+                .url(uploadUrl)
+                .mediaType(MediaType.parse("application/json; charset=utf-8"))
+                .content(json)
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i)
+                    {
+                        errorCounts++;
+                        if(errorCounts<3)
+                            upload(uploadListener);
+                        else if(uploadListener!=null)
+                        {
+                            showToast("网络异常");
+                        }
+                    }
+                    @Override
+                    public void onResponse(String response, int i)
+                    {
+                        errorCounts=0;
+                        if(isUploadSuccess(response))
+                        {
+                            DaoSession daoSession
+                                    =DeviceManagerApp.getDaoSession();
+                            daoSession.getPlasticInjectCheckDao().delete(piCheck);  //上传成功后删除本地数据
+                            if(uploadListener!=null)
+                                uploadListener.onSuccess();
+                        }
+                        else
+                        {
+                            if(uploadListener!=null)
+                                uploadListener.onFail();
+                        }
+                    }
+                    private boolean isUploadSuccess(String response)
+                    {
+                        showLog(response);
+                        if(response.contains("数据提交成功"))
+                            return true;
+                        else
+                            return false;
+                    }
+                });
+    }
+
+    public PlasticInjectCheck getPiCheck() {
+        return piCheck;
+    }
+
+    public void setPiCheck(PlasticInjectCheck piCheck) {
+        this.piCheck = piCheck;
+    }
+
+    public List<PlasticInjectCheckChild> getPICheckChilds() {
+        return PICheckChilds;
+    }
+
+    public void setPICheckChilds(List<PlasticInjectCheckChild> PICheckChilds)
+    {
+        this.PICheckChilds = PICheckChilds;
+    }
+
+    public String getIsPass() {
+        return isPass;
+    }
+
+    public void setIsPass(String isPass) {
+        this.isPass = isPass;
+    }
+
+    public String getBarCode() {
+        return barCode;
+    }
+
+    public void setBarCode(String barCode) {
+        this.barCode = barCode;
+    }
+
+    public String getPersonnelID() {
+        return personnelID;
+    }
+
+    public void setPersonnelID(String personnelID) {
+        this.personnelID = personnelID;
+    }
+
+    public Date getDate() {
+        return date;
+    }
+
+    public void setDate(Date date) {
+        this.date = date;
+    }
+
+    public long getInterID() {
+        return interID;
+    }
+
+    public void setInterID(long interID) {
+        this.interID = interID;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/ui/plan/InspectPlanFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/ui/plan/InspectPlanFragment.java	(date 1576907237329)
+++ app/src/main/java/com/furja/devicemanager/ui/plan/InspectPlanFragment.java	(date 1576907237329)
@@ -0,0 +1,97 @@
+package com.furja.devicemanager.ui.plan;
+
+import android.view.View;
+
+import com.alibaba.fastjson.JSON;
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.furja.devicemanager.ui.InspectFragmentDev;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.InspectPlan;
+import com.furja.devicemanager.utils.JSONParser;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import okhttp3.Call;
+
+import static com.furja.devicemanager.utils.Constants.FURJA_GET_INSPECTPLAN;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 点检计划Fragment
+ */
+
+public class InspectPlanFragment extends BasePlanFragment {
+    List<InspectPlan> mDatas;
+
+    @Override
+    void initViewAndData() {
+        recyclerView.setAdapter(inspectPlanAdapter);
+        requestData();
+        inspectPlanAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {
+            @Override
+            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {
+                List<InspectPlan> planList=adapter.getData();
+                InspectPlan inspectPlan=planList.get(position);
+                InspectFragmentDev fragment=new InspectFragmentDev();
+                fragment.setInspectPlan(inspectPlan);
+                fragExchange.viewFragment(InspectPlanFragment.this,fragment);
+            }
+        });
+        fragExchange.clearSpinner();
+    }
+
+    /**
+     * 请求 点检计划
+     */
+    void requestData() {
+        inspectPlanAdapter.setEmptyView(R.layout.load_repairorder_view,recyclerView);
+        showLog("获取点检计划");
+        OkHttpUtils
+                .get()
+                .url(FURJA_GET_INSPECTPLAN)
+                .addParams("devCode","0")
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        if(++requestCount<3)
+                            requestData();
+                        else
+                            inspectPlanAdapter.setEmptyView(R.layout.offline_empty_view, recyclerView);
+                    }
+                    @Override
+                    public void onResponse(String s, int i){
+                        requestCount=0;
+                        s= JSONParser.parserArray(s);
+                        List<InspectPlan> planList
+                                =JSON.parseArray(s,InspectPlan.class);
+                        if(planList==null||planList.isEmpty())
+                            inspectPlanAdapter.setEmptyView(R.layout.empty_view, recyclerView);
+                        inspectPlanAdapter.setNewData(planList);
+                        mDatas=planList; deptNames.clear();
+                        for(InspectPlan plan:planList) {
+                            if(!deptNames.contains(plan.getFDeptName()))
+                                deptNames.add(plan.getFDeptName());
+                        }
+                        filterData();
+                        refreshLayout.finishRefresh();
+                    }
+                });
+    }
+
+    @Override
+    void filterData() {
+        List<InspectPlan> inspectPlans =new ArrayList<InspectPlan>();
+        if(mDatas==null||planFilter==null)
+            return;
+        for(InspectPlan inspectPlan:mDatas) {
+            if(planFilter.isMatch(inspectPlan))
+                inspectPlans.add(inspectPlan);
+        }
+        inspectPlanAdapter.setNewData(inspectPlans);
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/json/DeviceInfoJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/DeviceInfoJson.java	(date 1516349240000)
+++ app/src/main/java/com/furja/devicemanager/json/DeviceInfoJson.java	(date 1516349240000)
@@ -0,0 +1,110 @@
+package com.furja.devicemanager.json;
+
+import java.util.List;
+
+/**
+ * Created by zhangmeng on 2018/1/11.
+ */
+
+public class DeviceInfoJson {
+
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 数据获取成功!
+     * ErrData : [{"FItemID":46,"FBarCode":"D02","FDeviceDescription":"注塑机","FAreaMechanic":"宋大柱/张卫","FId":0,"FTitle":null,"FCheckType":null}]
+     */
+
+    private int ErrCode;
+    private List<ErrDataBean> ErrData;
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public List<ErrDataBean> getErrData() {
+        return ErrData;
+    }
+
+    public void setErrData(List<ErrDataBean> ErrData) {
+        this.ErrData = ErrData;
+    }
+
+    public static class ErrDataBean {
+        /**
+         * FItemID : 46
+         * FBarCode : D02
+         * FDeviceDescription : 注塑机
+         * FAreaMechanic : 宋大柱/张卫
+         * FId : 0
+         * FTitle : null
+         * FCheckType : null
+         */
+
+        private String FBarCode;
+        private String FDeviceDescription;
+        private String FAreaMechanic;
+        private int FId;
+        private Object FTitle;
+        private Object FCheckType;
+
+        public String getFBarCode() {
+            return FBarCode;
+        }
+
+        public void setFBarCode(String FBarCode) {
+            this.FBarCode = FBarCode;
+        }
+
+        public String getFDeviceDescription() {
+            return FDeviceDescription;
+        }
+
+        public void setFDeviceDescription(String FDeviceDescription) {
+            this.FDeviceDescription = FDeviceDescription;
+        }
+
+        public String getFAreaMechanic() {
+            return FAreaMechanic;
+        }
+
+        public void setFAreaMechanic(String FAreaMechanic) {
+            this.FAreaMechanic = FAreaMechanic;
+        }
+
+        public int getFId() {
+            return FId;
+        }
+
+        public void setFId(int FId) {
+            this.FId = FId;
+        }
+
+        public Object getFTitle() {
+            return FTitle;
+        }
+
+        public void setFTitle(Object FTitle) {
+            this.FTitle = FTitle;
+        }
+
+        public Object getFCheckType() {
+            return FCheckType;
+        }
+
+        public void setFCheckType(Object FCheckType) {
+            this.FCheckType = FCheckType;
+        }
+        @Override
+        public String toString()
+        {
+            String lineSeparator=System.lineSeparator();
+            return "设备条码:" + FBarCode + lineSeparator+
+                    "区域机修:" + FAreaMechanic ;
+        }
+}
+}
Index: app/src/main/java/com/furja/devicemanager/json/CheckRecordJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/CheckRecordJson.java	(date 1528772674000)
+++ app/src/main/java/com/furja/devicemanager/json/CheckRecordJson.java	(date 1528772674000)
@@ -0,0 +1,79 @@
+package com.furja.devicemanager.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+/**
+ * 更新 记录Json
+ */
+public class CheckRecordJson {
+    @JSONField(ordinal = 0)
+    private int FBillstatus;    //置于1为审核通过
+    @JSONField(ordinal = 4)
+    private int FCheckerID;
+    @JSONField(ordinal = 1)
+    private int FID;
+    @JSONField(ordinal = 2)
+    private int FPlanID;
+    @JSONField(ordinal = 6)
+    private String FCheckDate;
+    @JSONField(ordinal = 5)
+    private int FCheckPass;  //FCheckPass=0为拒绝,=1为通过
+    @JSONField(ordinal = 3)
+    private int FBillType;   //FBillType=1 是点检 FBillType=2 是保养
+
+    public int getFBillstatus() {
+        return FBillstatus;
+    }
+
+    public void setFBillstatus(int FBillstatus) {
+        this.FBillstatus = FBillstatus;
+    }
+
+    public int getFCheckerID() {
+        return FCheckerID;
+    }
+
+    public void setFCheckerID(int FCheckerID) {
+        this.FCheckerID = FCheckerID;
+    }
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public int getFPlanID() {
+        return FPlanID;
+    }
+
+    public void setFPlanID(int FPlanID) {
+        this.FPlanID = FPlanID;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public int getFBillType() {
+        return FBillType;
+    }
+
+    public void setFBillType(int FBillType) {
+        this.FBillType = FBillType;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public int getFCheckPass() {
+        return FCheckPass;
+    }
+
+    public void setFCheckPass(int FCheckPass) {
+        this.FCheckPass = FCheckPass;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/InspectRecordJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/InspectRecordJson.java	(date 1529560324000)
+++ app/src/main/java/com/furja/devicemanager/json/InspectRecordJson.java	(date 1529560324000)
@@ -0,0 +1,209 @@
+package com.furja.devicemanager.json;
+
+import android.text.TextUtils;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.devicemanager.beans.InspectPlan;
+import com.furja.devicemanager.beans.InspectProjectItem;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.List;
+/**
+ * 点检记录
+ */
+public class InspectRecordJson {
+    private    int  FID;
+    private    int  FClassTypeID;
+    private    String  FBillID;
+    private    int   FBillStatus;
+    private    int   FDeviceID;
+    private    String FBeginDate;
+    private    String FInspectNumber;
+    private    String FEndDate;
+    private    String FNote;
+    private    int  FBillerID;
+    private    String FBillDate;
+    private    int  FCheckerID;
+    private    String FCheckDate;
+    private    String FInspectName;
+    private    int  FInspectPlanID;
+    private    String FInspectPlanBillID;
+    private    int  FInspectID;
+
+    @JSONField(name = "ICDeviceInspectRecordEntry")
+    private    List<InspectProjectItem> inspectProjectItems;
+
+    public InspectRecordJson(InspectPlan inspectPlan)
+    {
+        String userId= DeviceManagerApp.getUserId();
+
+        setFClassTypeID(1002110);
+        setFInspectName(inspectPlan.getFInspectName());
+        setFInspectPlanID(inspectPlan.getFID());
+        setFInspectID(inspectPlan.getFInspectID());
+        setFDeviceID(inspectPlan.getFDeviceID());
+        setFInspectNumber(inspectPlan.getFInspectNumber());
+        setFInspectPlanBillID(inspectPlan.getFBillID());
+        setFNote(inspectPlan.getFNote());
+        SimpleDateFormat simpleDateFormat
+                =new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+        String date=simpleDateFormat.format(new Date(System.currentTimeMillis()));
+        setFBillDate(date);
+        setFBillID("");
+        if(!TextUtils.isEmpty(userId))
+        {
+            int billerID=Integer.valueOf(userId);
+            setFBillerID(billerID);
+            setFCheckerID(billerID);
+        }
+        setFCheckDate(date);
+        setFBillStatus(1);
+    }
+
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public int getFClassTypeID() {
+        return FClassTypeID;
+    }
+
+    public void setFClassTypeID(int FClassTypeID) {
+        this.FClassTypeID = FClassTypeID;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public String getFBeginDate() {
+        return FBeginDate;
+    }
+
+    public void setFBeginDate(String FBeginDate) {
+        this.FBeginDate = FBeginDate;
+    }
+
+    public String getFInspectNumber() {
+        return FInspectNumber;
+    }
+
+    public void setFInspectNumber(String FInspectNumber) {
+        this.FInspectNumber = FInspectNumber;
+    }
+
+    public String getFEndDate() {
+        return FEndDate;
+    }
+
+    public void setFEndDate(String FEndDate) {
+        this.FEndDate = FEndDate;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+
+    public int getFBillerID() {
+        return FBillerID;
+    }
+
+    public void setFBillerID(int FBillerID) {
+        this.FBillerID = FBillerID;
+    }
+
+    public String getFBillDate() {
+        return FBillDate;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public int getFCheckerID() {
+        return FCheckerID;
+    }
+
+    public void setFCheckerID(int FCheckerID) {
+        this.FCheckerID = FCheckerID;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public String getFInspectName() {
+        return FInspectName;
+    }
+
+    public void setFInspectName(String FInspectName) {
+        this.FInspectName = FInspectName;
+    }
+
+    public int getFInspectPlanID() {
+        return FInspectPlanID;
+    }
+
+    public void setFInspectPlanID(int FInspectPlanID) {
+        this.FInspectPlanID = FInspectPlanID;
+    }
+
+    public String getFInspectPlanBillID() {
+        return FInspectPlanBillID;
+    }
+
+    public void setFInspectPlanBillID(String FInspectPlanBillID) {
+        this.FInspectPlanBillID = FInspectPlanBillID;
+    }
+
+    public int getFInspectID() {
+        return FInspectID;
+    }
+
+    public void setFInspectID(int FInspectID) {
+        this.FInspectID = FInspectID;
+    }
+
+    public List<InspectProjectItem> getInspectProjectItems() {
+        return inspectProjectItems;
+    }
+
+    public void setInspectProjectItems(List<InspectProjectItem> inspectProjectItems) {
+        this.inspectProjectItems = inspectProjectItems;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/RepairRecordJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/RepairRecordJson.java	(date 1526283994000)
+++ app/src/main/java/com/furja/devicemanager/json/RepairRecordJson.java	(date 1526283994000)
@@ -0,0 +1,294 @@
+package com.furja.devicemanager.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.beans.RepairProjectItem;
+
+import java.util.List;
+
+/**
+ * 维修记录的json
+ */
+public class RepairRecordJson {
+    private int FID;
+    private String FBillID;
+    private int FClassTypeID;
+    private int FBillStatus;
+    private String FRepairWOBillID;
+    private int FDeviceID;
+    private String FRepairNumber;
+    private String FRepairName;
+    private String FEndDate;
+    private String FBeginDate;
+    private String FRepairContent;
+    private String FRequire;
+    private int FTimeUnit;
+    private double FPlanStopManHour;
+    private double FPlanRepairManHour;
+    private String FNote;
+    private int FBillerID;
+    private int FRepairID;
+    private int FRepairWOID;
+    private String FBillDate;
+    private int FCheckerID;
+    private String FCheckDate;
+    private int FRepairCatg;    //维修类别
+    private int FEntrust;       //是否外包维修
+    private int FRepairSubcntr;
+    private int FCurrency;
+    private double FPlanRepairFee;
+    private double FRepairFee;
+    private double FStopManhour;
+    private double FRepairManhour;
+    @JSONField(name = "ICDeviceRepairRecordProject")
+    List<RepairProjectItem> items;
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFClassTypeID() {
+        return FClassTypeID;
+    }
+
+    public void setFClassTypeID(int FClassTypeID) {
+        this.FClassTypeID = FClassTypeID;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+
+    public String getFRepairWOBillID() {
+        return FRepairWOBillID;
+    }
+
+    public void setFRepairWOBillID(String FRepairWOBillID) {
+        this.FRepairWOBillID = FRepairWOBillID;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public String getFRepairNumber() {
+        return FRepairNumber;
+    }
+
+    public void setFRepairNumber(String FRepairNumber) {
+        this.FRepairNumber = FRepairNumber;
+    }
+
+    public String getFRepairName() {
+        return FRepairName;
+    }
+
+    public void setFRepairName(String FRepairName) {
+        this.FRepairName = FRepairName;
+    }
+
+
+    public String getFEndDate() {
+        return FEndDate;
+    }
+
+    public void setFEndDate(String FEndDate) {
+        this.FEndDate = FEndDate;
+    }
+
+    public String getFBeginDate() {
+        return FBeginDate;
+    }
+
+    public void setFBeginDate(String FBeginDate) {
+        this.FBeginDate = FBeginDate;
+    }
+
+    public String getFRepairContent() {
+        return FRepairContent;
+    }
+
+    public void setFRepairContent(String FRepairContent) {
+        this.FRepairContent = FRepairContent;
+    }
+
+    public String getFRequire() {
+        return FRequire;
+    }
+
+    public void setFRequire(String FRequire) {
+        this.FRequire = FRequire;
+    }
+
+    public int getFTimeUnit() {
+        return FTimeUnit;
+    }
+
+    public void setFTimeUnit(int FTimeUnit) {
+        this.FTimeUnit = FTimeUnit;
+    }
+
+    public double getFPlanStopManHour() {
+        return FPlanStopManHour;
+    }
+
+    public void setFPlanStopManHour(double FPlanStopManHour) {
+        this.FPlanStopManHour = FPlanStopManHour;
+    }
+
+    public double getFPlanRepairManHour() {
+        return FPlanRepairManHour;
+    }
+
+    public void setFPlanRepairManHour(double FPlanRepairManHour) {
+        this.FPlanRepairManHour = FPlanRepairManHour;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+
+    public int getFBillerID() {
+        return FBillerID;
+    }
+
+    public void setFBillerID(int FBillerID) {
+        this.FBillerID = FBillerID;
+    }
+
+    public int getFRepairID() {
+        return FRepairID;
+    }
+
+    public void setFRepairID(int FRepairID) {
+        this.FRepairID = FRepairID;
+    }
+
+    public int getFRepairWOID() {
+        return FRepairWOID;
+    }
+
+    public void setFRepairWOID(int FRepairWOID) {
+        this.FRepairWOID = FRepairWOID;
+    }
+
+    public String getFBillDate() {
+        return FBillDate;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public int getFCheckerID() {
+        return FCheckerID;
+    }
+
+    public void setFCheckerID(int FCheckerID) {
+        this.FCheckerID = FCheckerID;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public int getFRepairCatg() {
+        return FRepairCatg;
+    }
+
+    public void setFRepairCatg(int FRepairCatg) {
+        this.FRepairCatg = FRepairCatg;
+    }
+
+    public int getFEntrust() {
+        return FEntrust;
+    }
+
+    public void setFEntrust(int FEntrust) {
+        this.FEntrust = FEntrust;
+    }
+
+    public int getFRepairSubcntr() {
+        return FRepairSubcntr;
+    }
+
+    public void setFRepairSubcntr(int FRepairSubcntr) {
+        this.FRepairSubcntr = FRepairSubcntr;
+    }
+
+    public int getFCurrency() {
+        return FCurrency;
+    }
+
+    public void setFCurrency(int FCurrency) {
+        this.FCurrency = FCurrency;
+    }
+
+    public double getFPlanRepairFee() {
+        return FPlanRepairFee;
+    }
+
+    public void setFPlanRepairFee(double FPlanRepairFee) {
+        this.FPlanRepairFee = FPlanRepairFee;
+    }
+
+    public double getFRepairFee() {
+        return FRepairFee;
+    }
+
+    public void setFRepairFee(double FRepairFee) {
+        this.FRepairFee = FRepairFee;
+    }
+
+    public double getFStopManhour() {
+        return FStopManhour;
+    }
+
+    public void setFStopManhour(double FStopManhour) {
+        this.FStopManhour = FStopManhour;
+    }
+
+    public double getFRepairManhour() {
+        return FRepairManhour;
+    }
+
+    public void setFRepairManhour(double FRepairManhour) {
+        this.FRepairManhour = FRepairManhour;
+    }
+
+    public List<RepairProjectItem> getItems() {
+        return items;
+    }
+
+    public void setItems(List<RepairProjectItem> items) {
+        this.items = items;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/RepairCheckJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/RepairCheckJson.java	(date 1525917900000)
+++ app/src/main/java/com/furja/devicemanager/json/RepairCheckJson.java	(date 1525917900000)
@@ -0,0 +1,163 @@
+package com.furja.devicemanager.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.beans.RepairProjectItem;
+
+import java.util.List;
+
+/**
+ * 维修验收的JSON
+ */
+public class RepairCheckJson {
+    private int FID;
+    private String FBillID;
+    private int FClassTypeID;
+    private int FBillStatus;
+    private int FRepairWOID;
+    private String FRepairWOBillID;
+    private int FDeviceID;
+    private String FNote;
+    private int FBillerID;
+    private int FCheckerID;
+    private String FBillDate;
+    private String FCheckDate;
+    private int FRepairCheckerID;
+    private String FRepairCheckDate;
+    private int FRepairCheckResult;
+    @JSONField(name = "ICDeviceRepairCheckEntry")
+    public List<RepairProjectItem> projectItemList;
+
+    public RepairCheckJson()
+    {
+        
+    }
+
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFClassTypeID() {
+        return FClassTypeID;
+    }
+
+    public void setFClassTypeID(int FClassTypeID) {
+        this.FClassTypeID = FClassTypeID;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public int getFRepairWOID() {
+        return FRepairWOID;
+    }
+
+    public void setFRepairWOID(int FRepairWOID) {
+        this.FRepairWOID = FRepairWOID;
+    }
+
+    public String getFRepairWOBillID() {
+        return FRepairWOBillID;
+    }
+
+    public void setFRepairWOBillID(String FRepairWOBillID) {
+        this.FRepairWOBillID = FRepairWOBillID;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+
+    public int getFBillerID() {
+        return FBillerID;
+    }
+
+    public void setFBillerID(int FBillerID) {
+        this.FBillerID = FBillerID;
+    }
+
+    public int getFCheckerID() {
+        return FCheckerID;
+    }
+
+    public void setFCheckerID(int FCheckerID) {
+        this.FCheckerID = FCheckerID;
+    }
+
+    public String getFBillDate() {
+        return FBillDate;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public int getFRepairCheckerID() {
+        return FRepairCheckerID;
+    }
+
+    public void setFRepairCheckerID(int FRepairCheckerID) {
+        this.FRepairCheckerID = FRepairCheckerID;
+    }
+
+    public String getFRepairCheckDate() {
+        return FRepairCheckDate;
+    }
+
+    public void setFRepairCheckDate(String FRepairCheckDate) {
+        this.FRepairCheckDate = FRepairCheckDate;
+    }
+
+    public int getFRepairCheckResult() {
+        return FRepairCheckResult;
+    }
+
+    public void setFRepairCheckResult(int FRepairCheckResult) {
+        this.FRepairCheckResult = FRepairCheckResult;
+    }
+
+    public List<RepairProjectItem> getProjectItemList() {
+        return projectItemList;
+    }
+
+    public void setProjectItemList(List<RepairProjectItem> projectItemList) {
+        this.projectItemList = projectItemList;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/PISpotCheckListJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/PISpotCheckListJson.java	(date 1515975454000)
+++ app/src/main/java/com/furja/devicemanager/json/PISpotCheckListJson.java	(date 1515975454000)
@@ -0,0 +1,112 @@
+package com.furja.devicemanager.json;
+
+import java.util.List;
+
+/**
+ * 获取注塑车间开机点检检查内容清单的json
+ */
+
+public class PISpotCheckListJson {
+
+
+    /**
+     * ErrCode : 100
+     * ErrMsg : 数据获取成功!
+     * ErrData : [{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":1,"FTitle":"机台标准工艺参数","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":2,"FTitle":"操作指导书","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":3,"FTitle":"首件样板","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":4,"FTitle":"首件样板签约时间","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":5,"FTitle":"首件报告","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":6,"FTitle":"模具导柱是否有润滑油","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":7,"FTitle":"模具滑块是否保养","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":8,"FTitle":"抽芯油缸电子开关是否良好","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":9,"FTitle":"顶针保护开关是否完好","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":10,"FTitle":"强制拉回螺丝是否松脱","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":11,"FTitle":"模具运水是否正常(绿色代表进水,红色代表回水)","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":12,"FTitle":"模温或冻水机是否正常","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":13,"FTitle":"机台是否露胶","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":14,"FTitle":"烤料温度是否正常","FCheckType":"3"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":15,"FTitle":"温控表同设定温度是否在偏差之内(+/-5度)","FCheckType":"3"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":16,"FTitle":"实际工艺参数跟标准工艺参数差异是否在偏差范围","FCheckType":"2"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":17,"FTitle":"交接班记录是否将本区域发生的异常状况交接清楚","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":18,"FTitle":"机台使用材料、颜色跟生产单是否一致","FCheckType":"1"},{"FItemID":0,"FBarCode":null,"FDeviceDescription":null,"FDeviceLocation":null,"FId":19,"FTitle":"机台上下周围卫生状况是否良好","FCheckType":"1"}]
+     */
+
+    private int ErrCode;
+    private List<ErrDataBean> ErrData;
+
+    public int getErrCode() {
+        return ErrCode;
+    }
+
+    public void setErrCode(int ErrCode) {
+        this.ErrCode = ErrCode;
+    }
+
+    public List<ErrDataBean> getErrData() {
+        return ErrData;
+    }
+
+    public void setErrData(List<ErrDataBean> ErrData) {
+        this.ErrData = ErrData;
+    }
+
+    public static class ErrDataBean {
+        /**
+         * FItemID : 0
+         * FBarCode : null
+         * FDeviceDescription : null
+         * FDeviceLocation : null
+         * FId : 1
+         * FTitle : 机台标准工艺参数
+         * FCheckType : 1
+         */
+
+        private int FItemID;
+        private Object FBarCode;
+        private Object FDeviceDescription;
+        private Object FDeviceLocation;
+        private int FId;
+        private String FTitle;
+        private String FCheckType;
+
+        public int getFItemID() {
+            return FItemID;
+        }
+
+        public void setFItemID(int FItemID) {
+            this.FItemID = FItemID;
+        }
+
+        public Object getFBarCode() {
+            return FBarCode;
+        }
+
+        public void setFBarCode(Object FBarCode) {
+            this.FBarCode = FBarCode;
+        }
+
+        public Object getFDeviceDescription() {
+            return FDeviceDescription;
+        }
+
+        public void setFDeviceDescription(Object FDeviceDescription) {
+            this.FDeviceDescription = FDeviceDescription;
+        }
+
+        public Object getFDeviceLocation() {
+            return FDeviceLocation;
+        }
+
+        public void setFDeviceLocation(Object FDeviceLocation) {
+            this.FDeviceLocation = FDeviceLocation;
+        }
+
+        public int getFId() {
+            return FId;
+        }
+
+        public void setFId(int FId) {
+            this.FId = FId;
+        }
+
+        public String getFTitle() {
+            return FTitle;
+        }
+
+        public void setFTitle(String FTitle) {
+            this.FTitle = FTitle;
+        }
+
+        public String getFCheckType() {
+            return FCheckType;
+        }
+
+        public void setFCheckType(String FCheckType) {
+            this.FCheckType = FCheckType;
+        }
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/MaintainRecordJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/MaintainRecordJson.java	(date 1534813950000)
+++ app/src/main/java/com/furja/devicemanager/json/MaintainRecordJson.java	(date 1534813950000)
@@ -0,0 +1,238 @@
+package com.furja.devicemanager.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.devicemanager.beans.MaintainPlan;
+import com.furja.devicemanager.beans.MaintainProjectItem;
+import com.furja.devicemanager.utils.Utils;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 保养记录的JSON
+ */
+public class MaintainRecordJson {
+    @JSONField(name = "FID")
+    private int FID;
+    @JSONField(name = "FClassTypeID")
+    private int FClassTypeID;
+    @JSONField(name = "FDeviceID")
+    private int FDeviceID;
+    @JSONField(name = "FMaintainType")
+    private int FMaintainType;
+    @JSONField(name = "FBillStatus")
+    private int FBillStatus;
+    @JSONField(name = "FMaintainPlanID")
+    private int FMaintainPlanID;
+    @JSONField(name = "FBeginDate")
+    private String FBeginDate;
+    @JSONField(name = "FEndDate")
+    private String FEndDate;
+    @JSONField(name = "FMaintainName")
+    private String FMaintainName;
+    @JSONField(name = "FBillerID")
+    private int FBillerID;
+    @JSONField(name = "FCheckerID")
+    private int FCheckerID;
+    @JSONField(name = "FMaintainID")
+    private int FMaintainID;
+    @JSONField(name="FMaintainPlanBillID")
+    private String FMaintainPlanBillID;
+    @JSONField(name = "FCheckDate")
+    private String FCheckDate;
+    @JSONField(name = "FBillID")
+    private String FBillID;
+    @JSONField(name = "FMaintainNumber")
+    private String FMaintainNumber;
+    @JSONField(name = "FBillDate")
+    private String FBillDate;
+    @JSONField(name = "FNote")
+    private String FNote;
+    @JSONField(name = "ICDeviceMaintainRecordEntry")
+    private List<MaintainProjectItem> projectItems;
+
+    public MaintainRecordJson(MaintainPlan plan)
+    {
+        this.FDeviceID=plan.getFDeviceID();
+        this.FMaintainType=plan.getMaintainType();
+        this.FMaintainPlanID= Integer.valueOf(plan.getFID());
+        this.FMaintainName=plan.getFMaintainName();
+        this.FMaintainPlanBillID=plan.getFBillID();
+        this.FMaintainID=plan.getFMaintainID();
+        this.FMaintainNumber=plan.getFMaintainNumber();
+        this.FClassTypeID=1002113;
+        this.FNote="";
+        this.FBillID="";
+        String userID=DeviceManagerApp.getUserId();
+        int billerID= Integer.valueOf(userID);
+        setFBillerID(billerID);
+        setFBillID("");
+        setFBillDate(Utils.getCurDate());
+        setFCheckerID(billerID);
+        setFCheckDate(getFBillDate());
+        setFBillStatus(1);
+    }
+
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public int getFMaintainType() {
+        return FMaintainType;
+    }
+
+    public void setFMaintainType(int FMaintainType) {
+        this.FMaintainType = FMaintainType;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public int getFMaintainPlanID() {
+        return FMaintainPlanID;
+    }
+
+    public void setFMaintainPlanID(int FMaintainPlanID) {
+        this.FMaintainPlanID = FMaintainPlanID;
+    }
+
+    public String getFBeginDate() {
+        return FBeginDate;
+    }
+
+    public void setFBeginDate(String FBeginDate) {
+        this.FBeginDate = FBeginDate;
+    }
+
+    public String getFEndDate() {
+        return FEndDate;
+    }
+
+    public void setFEndDate(String FEndDate) {
+        this.FEndDate = FEndDate;
+    }
+
+    public String getFMaintainName() {
+        return FMaintainName;
+    }
+
+    public void setFMaintainName(String FMaintainName) {
+        this.FMaintainName = FMaintainName;
+    }
+
+    public int getFBillerID() {
+        return FBillerID;
+    }
+
+    public void setFBillerID(int FBillerID) {
+        this.FBillerID = FBillerID;
+    }
+
+    public int getFCheckerID() {
+        return FCheckerID;
+    }
+
+    public void setFCheckerID(int FCheckerID) {
+        this.FCheckerID = FCheckerID;
+    }
+
+    public int getFMaintainID() {
+        return FMaintainID;
+    }
+
+    public void setFMaintainID(int FMaintainID) {
+        this.FMaintainID = FMaintainID;
+    }
+
+    public String getFMaintainPlanBillID() {
+        return FMaintainPlanBillID;
+    }
+
+    public void setFMaintainPlanBillID(String FMaintainPlanBillID) {
+        this.FMaintainPlanBillID = FMaintainPlanBillID;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public String getFMaintainNumber() {
+        return FMaintainNumber;
+    }
+
+    public void setFMaintainNumber(String FMaintainNumber) {
+        this.FMaintainNumber = FMaintainNumber;
+    }
+
+    public String getFBillDate() {
+        return FBillDate;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public int getFClassTypeID() {
+        return FClassTypeID;
+    }
+
+    public void setFClassTypeID(int FClassTypeID) {
+        this.FClassTypeID = FClassTypeID;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+    public List<MaintainProjectItem> getProjectItems() {
+        return projectItems;
+    }
+
+    /**
+     * 将projectLeader置空,以不上传该字段json
+     * @param projectItems
+     */
+    public void setProjectItems(List<MaintainProjectItem> projectItems) {
+        this.projectItems=new ArrayList<MaintainProjectItem>();
+        for(MaintainProjectItem item:projectItems)
+        {
+            item.setProjectLeader(null);
+            this.projectItems.add(item);
+        }
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/json/RepairLogJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/RepairLogJson.java	(date 1520404716000)
+++ app/src/main/java/com/furja/devicemanager/json/RepairLogJson.java	(date 1520404716000)
@@ -0,0 +1,38 @@
+package com.furja.devicemanager.json;
+
+import com.furja.devicemanager.beans.RepairFlow;
+import com.furja.devicemanager.databases.RepairRecord;
+
+/**
+ * RepairFragment记录的数据实例含评价、派单、接单等.
+ */
+
+public class RepairLogJson {
+    RepairRecord repairRecord;  //维修报告
+    String assignPersonnel; //指定的维修人员
+    RepairFlow repairFlow;
+
+    public RepairRecord getRepairRecord() {
+        return repairRecord;
+    }
+
+    public void setRepairRecord(RepairRecord repairRecord) {
+        this.repairRecord = repairRecord;
+    }
+
+    public String getAssignPersonnel() {
+        return assignPersonnel;
+    }
+
+    public void setAssignPersonnel(String assignPersonnel) {
+        this.assignPersonnel = assignPersonnel;
+    }
+
+    public RepairFlow getRepairFlow() {
+        return repairFlow;
+    }
+
+    public void setRepairFlow(RepairFlow repairFlow) {
+        this.repairFlow = repairFlow;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/MaintainRecordDsp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/MaintainRecordDsp.java	(date 1524470186000)
+++ app/src/main/java/com/furja/devicemanager/json/MaintainRecordDsp.java	(date 1524470186000)
@@ -0,0 +1,162 @@
+package com.furja.devicemanager.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+/**
+ * 获取指定人员的保养记录在移动端显示
+ */
+public class MaintainRecordDsp {
+    private String FBillID;
+    private int FBillStatus;
+    private String FDeviceNumber;
+    private int FMaintainPlanID;
+    private String FDeviceName;
+    private String FBeginDate;
+    private String FEndDate;
+    private String FMaintainName;
+    private String FBillerName;
+    private String FCheckerName;
+    private String FCheckDate;
+    private String FMaintainPlanBillID;
+    private String FDeviceDeptName;
+    private String FMaintainType_DSPName;
+    private String FMaintainNumber;
+    private String FBillDate;
+    private String FNote;
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public String getFDeviceNumber() {
+        return FDeviceNumber;
+    }
+
+    public void setFDeviceNumber(String FDeviceNumber) {
+        this.FDeviceNumber = FDeviceNumber;
+    }
+
+    public int getFMaintainPlanID() {
+        return FMaintainPlanID;
+    }
+
+    public void setFMaintainPlanID(int FMaintainPlanID) {
+        this.FMaintainPlanID = FMaintainPlanID;
+    }
+
+    public String getFDeviceName() {
+        return FDeviceName;
+    }
+
+    public void setFDeviceName(String FDeviceName) {
+        this.FDeviceName = FDeviceName;
+    }
+
+    public String getFBeginDate() {
+        return FBeginDate;
+    }
+
+    public void setFBeginDate(String FBeginDate) {
+        this.FBeginDate = FBeginDate;
+    }
+
+    public String getFEndDate() {
+        return FEndDate;
+    }
+
+    public void setFEndDate(String FEndDate) {
+        this.FEndDate = FEndDate;
+    }
+
+    public String getFMaintainName() {
+        return FMaintainName;
+    }
+
+    public void setFMaintainName(String FMaintainName) {
+        this.FMaintainName = FMaintainName;
+    }
+
+    public String getFBillerName() {
+        return FBillerName;
+    }
+
+    public void setFBillerName(String FBillerName) {
+        this.FBillerName = FBillerName;
+    }
+
+    public String getFCheckerName() {
+        return FCheckerName;
+    }
+
+    public void setFCheckerName(String FCheckerName) {
+        this.FCheckerName = FCheckerName;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public String getFMaintainPlanBillID() {
+        return FMaintainPlanBillID;
+    }
+
+    public void setFMaintainPlanBillID(String FMaintainPlanBillID) {
+        this.FMaintainPlanBillID = FMaintainPlanBillID;
+    }
+
+    public String getFDeviceDeptName() {
+        return FDeviceDeptName;
+    }
+
+    public void setFDeviceDeptName(String FDeviceDeptName) {
+        this.FDeviceDeptName = FDeviceDeptName;
+    }
+
+    public String getFMaintainType_DSPName() {
+        return FMaintainType_DSPName;
+    }
+
+    public void setFMaintainType_DSPName(String FMaintainType_DSPName) {
+        this.FMaintainType_DSPName = FMaintainType_DSPName;
+    }
+
+    public String getFMaintainNumber() {
+        return FMaintainNumber;
+    }
+
+    public void setFMaintainNumber(String FMaintainNumber) {
+        this.FMaintainNumber = FMaintainNumber;
+    }
+
+    public String getFBillDate() {
+        return FBillDate;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/json/RepairWoJson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/json/RepairWoJson.java	(date 1525397606000)
+++ app/src/main/java/com/furja/devicemanager/json/RepairWoJson.java	(date 1525397606000)
@@ -0,0 +1,369 @@
+package com.furja.devicemanager.json;
+
+import com.alibaba.fastjson.annotation.JSONField;
+import com.furja.devicemanager.beans.RepairProjectItem;
+
+import java.util.List;
+
+/**
+ * 维修工单
+ */
+public class RepairWoJson {
+    private int FID;
+    private String FBillID;
+    private int FClassTypeID;
+    private int FBillStatus;
+    private int FRepairPlanID;
+    private String FRepairApplyBillID;
+    private String FRepairPlanBillID;
+    private int FDeviceID;
+    private String FRepairNumber;
+    private String FRepairName;
+    private String FPlanBeginDate;
+    private String FPlanEndDate;
+    private String FEndDate;
+    private String FBeginDate;
+    private String FRepairContent;
+    private String FRequire;
+    private int FTimeUnit;
+    private double FPlanStopManHour;
+    private double FPlanRepairManHour;
+    private String FNote;
+    private int FBillerID;
+    private int FRepairID;
+    private int FRepairApplyID;
+    private String FBillDate;
+    private int FCheckerID;
+    private String FCheckDate;
+    private int FRepairCatg;    //维修类别
+    private int FEntrust;
+    private int FRepairSubcntr;
+    private int FCurrency;
+    private double FPlanRepairFee;
+    private double FRepairFee;
+    private double FStopManhour;
+    private double FRepairManhour;
+    @JSONField(name = "ICDeviceRepairWOProject")
+    List<RepairProjectItem> items;
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFClassTypeID() {
+        return FClassTypeID;
+    }
+
+    public void setFClassTypeID(int FClassTypeID) {
+        this.FClassTypeID = FClassTypeID;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public int getFRepairPlanID() {
+        return FRepairPlanID;
+    }
+
+    public void setFRepairPlanID(int FRepairPlanID) {
+        this.FRepairPlanID = FRepairPlanID;
+    }
+
+    public String getFRepairApplyBillID() {
+        return FRepairApplyBillID;
+    }
+
+    public void setFRepairApplyBillID(String FRepairApplyBillID) {
+        this.FRepairApplyBillID = FRepairApplyBillID;
+    }
+
+    public String getFRepairPlanBillID() {
+        return FRepairPlanBillID;
+    }
+
+    public void setFRepairPlanBillID(String FRepairPlanBillID) {
+        this.FRepairPlanBillID = FRepairPlanBillID;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public String getFRepairNumber() {
+        return FRepairNumber;
+    }
+
+    public void setFRepairNumber(String FRepairNumber) {
+        this.FRepairNumber = FRepairNumber;
+    }
+
+    public String getFRepairName() {
+        return FRepairName;
+    }
+
+    public void setFRepairName(String FRepairName) {
+        this.FRepairName = FRepairName;
+    }
+
+    public String getFPlanBeginDate() {
+        return FPlanBeginDate;
+    }
+
+    public void setFPlanBeginDate(String FPlanBeginDate) {
+        this.FPlanBeginDate = FPlanBeginDate;
+    }
+
+    public String getFPlanEndDate() {
+        return FPlanEndDate;
+    }
+
+    public void setFPlanEndDate(String FPlanEndDate) {
+        this.FPlanEndDate = FPlanEndDate;
+    }
+
+    public String getFEndDate() {
+        return FEndDate;
+    }
+
+    public void setFEndDate(String FEndDate) {
+        this.FEndDate = FEndDate;
+    }
+
+    public String getFBeginDate() {
+        return FBeginDate;
+    }
+
+    public void setFBeginDate(String FBeginDate) {
+        this.FBeginDate = FBeginDate;
+    }
+
+    public String getFRepairContent() {
+        return FRepairContent;
+    }
+
+    public void setFRepairContent(String FRepairContent) {
+        this.FRepairContent = FRepairContent;
+    }
+
+    public String getFRequire() {
+        return FRequire;
+    }
+
+    public void setFRequire(String FRequire) {
+        this.FRequire = FRequire;
+    }
+
+    public int getFTimeUnit() {
+        return FTimeUnit;
+    }
+
+    public void setFTimeUnit(int FTimeUnit) {
+        this.FTimeUnit = FTimeUnit;
+    }
+
+    public double getFPlanStopManHour() {
+        return FPlanStopManHour;
+    }
+
+    public void setFPlanStopManHour(double FPlanStopManHour) {
+        this.FPlanStopManHour = FPlanStopManHour;
+    }
+
+    public double getFPlanRepairManHour() {
+        return FPlanRepairManHour;
+    }
+
+    public void setFPlanRepairManHour(double FPlanRepairManHour) {
+        this.FPlanRepairManHour = FPlanRepairManHour;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+
+    public int getFBillerID() {
+        return FBillerID;
+    }
+
+    public void setFBillerID(int FBillerID) {
+        this.FBillerID = FBillerID;
+    }
+
+    public int getFRepairID() {
+        return FRepairID;
+    }
+
+    public void setFRepairID(int FRepairID) {
+        this.FRepairID = FRepairID;
+    }
+
+    public int getFRepairApplyID() {
+        return FRepairApplyID;
+    }
+
+    public void setFRepairApplyID(int FRepairApplyID) {
+        this.FRepairApplyID = FRepairApplyID;
+    }
+
+    public String getFBillDate() {
+        return FBillDate;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public int getFCheckerID() {
+        return FCheckerID;
+    }
+
+    public void setFCheckerID(int FCheckerID) {
+        this.FCheckerID = FCheckerID;
+    }
+
+    public String getFCheckDate() {
+        return FCheckDate;
+    }
+
+    public void setFCheckDate(String FCheckDate) {
+        this.FCheckDate = FCheckDate;
+    }
+
+    public int getFRepairCatg() {
+        return FRepairCatg;
+    }
+
+    public void setFRepairCatg(int FRepairCatg) {
+        this.FRepairCatg = FRepairCatg;
+    }
+
+    public int getFEntrust() {
+        return FEntrust;
+    }
+
+    public void setFEntrust(int FEntrust) {
+        this.FEntrust = FEntrust;
+    }
+
+    public int getFRepairSubcntr() {
+        return FRepairSubcntr;
+    }
+
+    public void setFRepairSubcntr(int FRepairSubcntr) {
+        this.FRepairSubcntr = FRepairSubcntr;
+    }
+
+    public int getFCurrency() {
+        return FCurrency;
+    }
+
+    public void setFCurrency(int FCurrency) {
+        this.FCurrency = FCurrency;
+    }
+
+    public double getFPlanRepairFee() {
+        return FPlanRepairFee;
+    }
+
+    public void setFPlanRepairFee(double FPlanRepairFee) {
+        this.FPlanRepairFee = FPlanRepairFee;
+    }
+
+    public double getFRepairFee() {
+        return FRepairFee;
+    }
+
+    public void setFRepairFee(double FRepairFee) {
+        this.FRepairFee = FRepairFee;
+    }
+
+    public double getFStopManhour() {
+        return FStopManhour;
+    }
+
+    public void setFStopManhour(double FStopManhour) {
+        this.FStopManhour = FStopManhour;
+    }
+
+    public double getFRepairManhour() {
+        return FRepairManhour;
+    }
+
+    public void setFRepairManhour(double FRepairManhour) {
+        this.FRepairManhour = FRepairManhour;
+    }
+
+    public List<RepairProjectItem> getItems() {
+        return items;
+    }
+
+    public void setItems(List<RepairProjectItem> items) {
+        this.items = items;
+    }
+
+    @Override
+    public String toString() {
+        return "RepairWoJson{" +
+                "FID=" + FID +
+                ", FBillID='" + FBillID + '\'' +
+                ", FClassTypeID=" + FClassTypeID +
+                ", FBillStatus=" + FBillStatus +
+                ", FRepairPlanID=" + FRepairPlanID +
+                ", FRepairApplyBillID='" + FRepairApplyBillID + '\'' +
+                ", FRepairPlanBillID='" + FRepairPlanBillID + '\'' +
+                ", FDeviceID=" + FDeviceID +
+                ", FRepairNumber='" + FRepairNumber + '\'' +
+                ", FRepairName='" + FRepairName + '\'' +
+                ", FPlanBeginDate='" + FPlanBeginDate + '\'' +
+                ", FPlanEndDate='" + FPlanEndDate + '\'' +
+                ", FEndDate='" + FEndDate + '\'' +
+                ", FBeginDate='" + FBeginDate + '\'' +
+                ", FRepairContent='" + FRepairContent + '\'' +
+                ", FRequire='" + FRequire + '\'' +
+                ", FTimeUnit=" + FTimeUnit +
+                ", FPlanStopManHour=" + FPlanStopManHour +
+                ", FPlanRepairManHour=" + FPlanRepairManHour +
+                ", FNote='" + FNote + '\'' +
+                ", FBillerID=" + FBillerID +
+                ", FRepairID=" + FRepairID +
+                ", FRepairApplyID=" + FRepairApplyID +
+                ", FBillDate='" + FBillDate + '\'' +
+                ", FCheckerID=" + FCheckerID +
+                ", FCheckDate='" + FCheckDate + '\'' +
+                ", FRepairCatg=" + FRepairCatg +
+                ", FEntrust=" + FEntrust +
+                ", FRepairSubcntr=" + FRepairSubcntr +
+                ", FCurrency=" + FCurrency +
+                ", FPlanRepairFee=" + FPlanRepairFee +
+                ", FRepairFee=" + FRepairFee +
+                ", FStopManhour=" + FStopManhour +
+                ", FRepairManhour=" + FRepairManhour +
+                ", items=" + items +
+                '}';
+    }
+}
Index: app/src/main/java/com/furja/overall/FurjaApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/FurjaApp.java	(date 1576914086920)
+++ app/src/main/java/com/furja/overall/FurjaApp.java	(date 1576914086920)
@@ -0,0 +1,211 @@
+package com.furja.overall;
+
+import android.accounts.NetworkErrorException;
+import android.app.Application;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+import android.os.IBinder;
+
+import com.furja.common.CloudUserWithOrg;
+import com.furja.overall.beans.Message;
+
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.overall.services.ChatService;
+import com.furja.utils.MyCrashHandler;
+import com.furja.common.Preferences;
+import com.furja.common.User;
+import com.furja.devicemanager.databases.DaoMaster;
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.overall.receiver.NetworkChangeReceiver;
+import com.furja.utils.Utils;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.log.LoggerInterceptor;
+
+import java.util.concurrent.TimeUnit;
+
+import io.reactivex.Observable;
+import io.reactivex.functions.Consumer;
+import io.reactivex.schedulers.Schedulers;
+import io.sentry.Sentry;
+import okhttp3.OkHttpClient;
+
+import static com.furja.utils.Constants.LOG_TAG;
+import static com.furja.utils.Utils.getDeviceID;
+import static com.furja.utils.Utils.getIPAddress;
+import static com.furja.utils.Utils.showLog;
+
+
+/**
+ * 主Application
+ */
+
+public class FurjaApp extends Application {
+    private static User user;
+    private static FurjaApp instance;
+    private static CloudUserWithOrg cloudUser;
+    DeviceManagerApp deviceManagerApp;
+    ChatService chatService;
+    ServiceConnection serviceConnection;
+
+
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        lazyInit();
+    }
+
+    /**
+     * 延迟1S懒加载
+     */
+    private void lazyInit() {
+        Context context=getApplicationContext();
+        instance=(FurjaApp)context;
+        Utils.setContext(context);
+        registerNetWorkListener();
+        Observable.timer(2L,TimeUnit.SECONDS)
+                .subscribe(i->{
+                    initSomeFrameWork();
+                    MyCrashHandler.init(context);
+                    deviceManagerApp=DeviceManagerApp.getInstance();
+                });
+    }
+
+    public static String getUserName() {
+        if(user!=null)
+            return user.getUserName();
+        return "请先登录";
+    }
+
+    /**
+     * 注册网络状态变化的监听Receiver
+     */
+    private void registerNetWorkListener() {
+        NetworkChangeReceiver.init(this);
+    }
+
+
+    /**
+     * 登录成功后将员工用户信息存储,并视图连接至服务器
+     * @param user
+     */
+    public static void setUserAndSave(User user) {
+        FurjaApp.user = user;
+        if(user!=null) {
+            Preferences.saveUser(user); //添加user信息
+            io.sentry.event.User user1
+                    =new io.sentry.event.User(getDeviceID(),user.getUserName(),getIPAddress(),"");
+            Sentry.getContext().setUser(user1);
+        }
+    }
+
+    /**
+     * 注销账户
+     */
+    public void logout() {
+        if(user!=null&&chatService!=null)  {
+            Message<User> message=new Message<>(101,"注销账号",user);
+            chatService.sendMsg(message);
+        }
+    }
+
+    /**
+     * 初始化使用的开源库
+     */
+    private void initSomeFrameWork() {
+        OkHttpClient okHttpClient = new OkHttpClient.Builder()
+                .addInterceptor(new LoggerInterceptor(LOG_TAG))
+                .connectTimeout(10000L, TimeUnit.MILLISECONDS)
+                .readTimeout(20000L, TimeUnit.MILLISECONDS)
+                //其他配置
+                .build();
+        OkHttpUtils.initClient(okHttpClient);
+    }
+
+    public static FurjaApp getInstance()
+    {
+        return instance;
+    }
+    public static User getUser() {
+        return user;
+    }
+
+    public static CloudUserWithOrg getCloudUser() {
+        return cloudUser;
+    }
+
+    public static void setCloudUser(CloudUserWithOrg cloudUser) {
+        FurjaApp.cloudUser = cloudUser;
+    }
+
+    public static Context getContext() {
+        return Utils.getContext();
+    }
+
+    /**
+     * 程序终止时解注册 网络状态监听器
+     */
+    @Override
+    public void onTerminate() {
+        super.onTerminate();
+        NetworkChangeReceiver.unregister();
+        deviceManagerApp.unbindService();
+        if(serviceConnection!=null)
+            unbindService(serviceConnection);
+    }
+
+    public static DaoSession getDaoSession() {
+        DaoMaster daoMaster=Utils.getDaoMaster();
+        return daoMaster.newSession();
+    }
+
+    /**
+     * APP异常时记录日志并重启
+     */
+    public void restartApp() {
+
+        Intent launchIntent = getPackageManager().getLaunchIntentForPackage(getPackageName());
+        launchIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+        Observable.just(launchIntent)
+                .delay(1,TimeUnit.SECONDS)
+                .subscribe(new Consumer<Intent>() {
+                    @Override
+                    public void accept(Intent intent) throws Exception {
+                        startActivity(intent);
+                        android.os.Process
+                                .killProcess(android.os.Process.myPid());
+                    }
+                });
+    }
+
+
+    /**
+     * 绑定推送服务
+     */
+    private void bindChatServices() {
+        Observable.just(new Intent(this, ChatService.class))
+                .observeOn(Schedulers.single())
+                .subscribe(intent -> {
+                    if(serviceConnection==null) {
+                        serviceConnection=new ServiceConnection() {
+                            @Override
+                            public void onServiceConnected(ComponentName componentName, IBinder iBinder) {
+                                ChatService.ChatBinder binder=
+                                        (ChatService.ChatBinder)iBinder;
+                                chatService=binder.getService();
+                            }
+
+                            @Override
+                            public void onServiceDisconnected(ComponentName componentName) {
+                                chatService=null;
+                                bindChatServices();
+                            }
+                        };
+                    }
+                    bindService(intent,serviceConnection,Context.BIND_AUTO_CREATE);
+                });
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/view/RepairProjectItemAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/RepairProjectItemAdapter.java	(date 1576067822120)
+++ app/src/main/java/com/furja/devicemanager/view/RepairProjectItemAdapter.java	(date 1576067822120)
@@ -0,0 +1,70 @@
+package com.furja.devicemanager.view;
+
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.widget.EditText;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.DetailItem;
+import com.furja.devicemanager.beans.RepairProjectItem;
+
+import java.util.List;
+
+/**
+ * 维修项目RecyclerView的适配器
+ */
+
+public class RepairProjectItemAdapter extends BaseQuickAdapter<DetailItem, BaseViewHolder> {
+    public RepairProjectItemAdapter(int layoutResId) {
+        super(layoutResId);
+    }
+
+    @Override
+    protected void convert(BaseViewHolder helper, final DetailItem item) {
+        helper.setText(R.id.item_label,item.getLabel());
+        helper.setText(R.id.item_edit,item.getDetail());
+        TextWatcher textWatcher=new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {
+            }
+
+            @Override
+            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {
+            }
+
+            @Override
+            public void afterTextChanged(Editable editable) {
+                item.setDetail(editable.toString());
+            }
+        };
+        EditText editText=helper.getView(R.id.item_edit);
+        if(DeviceManagerApp.isChecker())
+        {
+            editText.setFocusableInTouchMode(false);
+            editText.setFocusable(false);
+        }
+        else
+            editText.addTextChangedListener(textWatcher);
+    }
+
+    /**
+     * 将 List<DetailItem> 转为 RepairProjectItem
+     * @return
+     */
+    public RepairProjectItem getRepairProjectItem() {
+        List<DetailItem> detailItems
+                =getData();
+        if(detailItems==null||detailItems.isEmpty())
+            return null;
+        RepairProjectItem projectItem
+                =new RepairProjectItem();
+        projectItem.setDetailItems(detailItems);
+        projectItem.setFDesValueType(11606);
+        return projectItem;
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/view/PartsRecyclerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/PartsRecyclerAdapter.java	(date 1576065997982)
+++ app/src/main/java/com/furja/devicemanager/view/PartsRecyclerAdapter.java	(date 1576065997982)
@@ -0,0 +1,29 @@
+package com.furja.devicemanager.view;
+
+import androidx.annotation.Nullable;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+
+import java.util.List;
+
+/**
+ * 备材耗件
+ */
+
+public class PartsRecyclerAdapter extends BaseQuickAdapter {
+    public PartsRecyclerAdapter(@Nullable List data) {
+        super(data);
+    }
+
+    @Override
+    protected void convert(BaseViewHolder helper, Object item) {
+
+    }
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/RepairProjectAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/RepairProjectAdapter.java	(date 1576067821278)
+++ app/src/main/java/com/furja/devicemanager/view/RepairProjectAdapter.java	(date 1576067821278)
@@ -0,0 +1,115 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import androidx.annotation.Nullable;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import android.text.TextUtils;
+
+import com.chad.library.adapter.base.BaseItemDraggableAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.DetailItem;
+import com.furja.devicemanager.beans.RepairProjectItem;
+import com.furja.devicemanager.utils.Constants;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+/**
+ * 维修项目的Recycleview适配器
+ */
+public class RepairProjectAdapter extends BaseItemDraggableAdapter<RepairProjectItem,BaseViewHolder> {
+    List<RepairProjectItemAdapter> adapters;
+    int projectSign;
+
+    public RepairProjectAdapter(int layoutResId, List<RepairProjectItem> data) {
+        super(layoutResId, data);
+        adapters=new ArrayList<RepairProjectItemAdapter>();
+        projectSign=Constants.TAG_ADD_PROJECT;
+    }
+
+
+    @Override
+    protected void convert(BaseViewHolder helper, RepairProjectItem item) {
+        Context context=helper.itemView.getContext();
+        RecyclerView recyclerView
+                =helper.getView(R.id.recyclerView);
+        RepairProjectItemAdapter adapter
+                =adapters.get(helper.getLayoutPosition());
+        recyclerView
+                .setLayoutManager(new LinearLayoutManager(context,LinearLayoutManager.VERTICAL,false));
+        if(adapter!=null)
+        {
+            List<String> details
+                    =item.toStringList();
+            List<DetailItem> detailItems
+                    =getRepairProjectList(details);
+            if(projectSign!= Constants.TAG_ADD_PROJECT)
+            {
+                DetailItem detailItem
+                        =new DetailItem("实际值*","");
+                String factValue=item.getFFactValue();
+                if(!TextUtils.isEmpty(factValue))
+                    detailItem.setDetail(factValue);
+                detailItems.add(detailItem);
+            }
+            adapter.setNewData(detailItems);
+            recyclerView
+                    .setAdapter(adapter);
+        }
+    }
+
+    @Override
+    public void setNewData(@Nullable List<RepairProjectItem> data) {
+        super.setNewData(data);
+        for(int i=0;i<data.size();i++)
+        {
+            RepairProjectItemAdapter adapter
+                    =new RepairProjectItemAdapter(R.layout.repair_project_item);
+            adapters.add(adapter);
+        }
+    }
+
+
+    public List<RepairProjectItem> getItems() {
+        List<RepairProjectItem> items
+                =new ArrayList<RepairProjectItem>();
+        for(RepairProjectItemAdapter adapter:adapters)
+        {
+            RepairProjectItem item=adapter.getRepairProjectItem();
+            item.setFIndex(items.size()+1);
+            items.add(item);
+        }
+        return items;
+    }
+    /**
+     * 获取维修项目视图
+     */
+    private List<DetailItem> getRepairProjectList(List<String> details) {
+        List<DetailItem> repairItems
+                =new ArrayList<DetailItem>();
+        if(details==null)
+            details= Collections.EMPTY_LIST;
+        String[] titles
+                =new String[]{"维修项目名称*","维修操作说明","项目维修要求","目标值","目标上限","目标下限","项目备注"};
+        for(int i=0;i<titles.length;i++)
+        {
+            String title=titles[i],detail="";
+            if(details.size()>i)
+                detail=details.get(i);
+            DetailItem detailItem
+                    =new DetailItem(title,detail);
+            repairItems.add(detailItem);
+        }
+        return repairItems;
+    }
+    public int getProjectSign() {
+        return projectSign;
+    }
+
+    public void setProjectSign(int projectSign) {
+        this.projectSign = projectSign;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/RepairOrderAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/RepairOrderAdapter.java	(date 1576067820261)
+++ app/src/main/java/com/furja/devicemanager/view/RepairOrderAdapter.java	(date 1576067820261)
@@ -0,0 +1,42 @@
+package com.furja.devicemanager.view;
+
+import android.content.res.Resources;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.RepairOrderItem;
+import com.furja.devicemanager.utils.Constants;
+
+/**
+ * 维修模块视图 的RecycleViewAdapter
+ */
+
+public class RepairOrderAdapter extends BaseQuickAdapter<RepairOrderItem,BaseViewHolder> {
+    public RepairOrderAdapter()
+    {
+        super(R.layout.repair_order_item);
+    }
+    public RepairOrderAdapter(int layoutResId) {
+        super(layoutResId);
+    }
+
+    @Override
+    protected void convert(BaseViewHolder helper, RepairOrderItem item) {
+        Resources resource=helper.itemView.getResources();
+
+        helper.setText(R.id.order_repairPersonnel,"维修类别: "+item.getFRepairGrade());
+        helper.setText(R.id.order_title,item.getFDeviceName())
+                .setText(R.id.order_deviceSettingPlace,"设备编号: "+item.getFDeviceNumber())
+                .setText(R.id.order_orderContent,"使用部门: "+item.getFSettingPlace())
+                .setText(R.id.order_billID,"报修时间: "+item.getFBillDate())
+                .setText(R.id.order_troubleGrade,"维修单号: "+item.getFRepairWOBillID())
+                .setText(R.id.order_recordDate,"维修内容: "+item.getFRepairContent());
+        if(item.getFRepairState()== Constants.FILTER_REPAIRORDER_CHECK)
+            helper
+                .setText(R.id.order_state,"已维修待验收");
+        if(item.getFRepairState()==Constants.FILTER_REPAIRORDER_REPAIR)
+            helper
+                    .setText(R.id.order_state,"待维修");
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/MyDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/MyDecoration.java	(date 1576065997572)
+++ app/src/main/java/com/furja/devicemanager/view/MyDecoration.java	(date 1576065997572)
@@ -0,0 +1,34 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import android.graphics.Rect;
+import androidx.recyclerview.widget.DividerItemDecoration;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import android.view.View;
+
+/**
+ * 分割线
+ */
+
+public class MyDecoration extends DividerItemDecoration {
+    private Context mContext;
+    public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;
+    public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;
+
+
+    public MyDecoration(Context context, int orientation) {
+        super(context, orientation);
+    }
+
+
+    //由于Divider也有长宽高，每一个Item需要向下或者向右偏移
+    @Override
+    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
+
+        outRect.set(0, 0, 0, 0);
+//        super.getItemOffsets(outRect,view,parent,state);
+    }
+
+
+}
Index: app/src/main/java/com/furja/devicemanager/view/ClearableEditTextWithIcon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/ClearableEditTextWithIcon.java	(date 1576067820134)
+++ app/src/main/java/com/furja/devicemanager/view/ClearableEditTextWithIcon.java	(date 1576067820134)
@@ -0,0 +1,136 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+
+import com.furja.overall.R;
+
+import java.lang.reflect.Method;
+
+/**
+ * 可清空显示并可带图标的输入EditText
+ */
+
+public class ClearableEditTextWithIcon extends androidx.appcompat.widget.AppCompatEditText implements View.OnTouchListener, TextWatcher {
+
+    // 删除符号
+    Drawable deleteImage = getResources().getDrawable(R.mipmap.nim_icon_edit_delete);
+
+    Drawable icon;
+
+    public ClearableEditTextWithIcon(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        init();
+    }
+
+    public ClearableEditTextWithIcon(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init();
+    }
+
+    public ClearableEditTextWithIcon(Context context) {
+        super(context);
+        init();
+    }
+
+    private void init() {
+        ClearableEditTextWithIcon.this.setOnTouchListener(this);
+        ClearableEditTextWithIcon.this.addTextChangedListener(this);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入显示的图标资源id
+     *
+     * @param id
+     */
+    public void setIconResource(int id) {
+        icon = getResources().getDrawable(id);
+        icon.setBounds(0, 0, icon.getIntrinsicWidth(), icon.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入删除图标资源id
+     * @param id
+     */
+    public void setDeleteImage(int id) {
+        deleteImage = getResources().getDrawable(id);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    void manageClearButton() {
+        if (this.getText().toString().equals(""))
+            removeClearButton();
+        else
+            addClearButton();
+    }
+
+    void removeClearButton() {
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], null, this.getCompoundDrawables()[3]);
+    }
+
+    void addClearButton() {
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], deleteImage,
+                this.getCompoundDrawables()[3]);
+    }
+
+    /**
+     * 禁用输入法即只允许条码扫码
+     */
+    public void disableShowInput(){
+        ClearableEditTextWithIcon editText = ClearableEditTextWithIcon.this;
+        Class<ClearableEditTextWithIcon> cls = ClearableEditTextWithIcon.class;
+        Method method;
+        try {
+            method = cls.getMethod("setShowSoftInputOnFocus",boolean.class);
+            method.setAccessible(true);
+            method.invoke(editText,false);
+        }catch (Exception e) {
+        }
+        try {
+            method = cls.getMethod("setSoftInputShownOnFocus",boolean.class);
+            method.setAccessible(true);
+            method.invoke(editText,false);
+        }catch (Exception e) {
+        }
+
+    }
+
+    @Override
+    public boolean onTouch(View v, MotionEvent event) {
+        ClearableEditTextWithIcon et = ClearableEditTextWithIcon.this;
+        if (et.getCompoundDrawables()[2] == null)
+            return false;
+        if (event.getAction() != MotionEvent.ACTION_UP)
+            return false;
+        if (event.getX() > et.getWidth() - et.getPaddingRight() - deleteImage.getIntrinsicWidth()) {
+            et.setText("");
+            ClearableEditTextWithIcon.this.removeClearButton();
+        }
+        return false;
+    }
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+        ClearableEditTextWithIcon.this.manageClearButton();
+    }
+
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+    }
+
+    @Override
+    public void afterTextChanged(Editable s) {
+
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/view/PISpotCheckAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/PISpotCheckAdapter.java	(date 1576829481826)
+++ app/src/main/java/com/furja/devicemanager/view/PISpotCheckAdapter.java	(date 1576829481826)
@@ -0,0 +1,103 @@
+package com.furja.devicemanager.view;
+
+import androidx.annotation.Nullable;
+import android.text.TextUtils;
+import android.widget.TextView;
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.chad.library.adapter.base.MultipleItemRvAdapter;
+import com.chad.library.adapter.base.util.MultiTypeDelegate;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.SpotCheckItem;
+import java.util.List;
+
+import static com.furja.devicemanager.beans.SpotCheckItem.TYPE_ONLYHAVE;
+import static com.furja.devicemanager.beans.SpotCheckItem.TYPE_TEMPERATURE;
+import static com.furja.devicemanager.beans.SpotCheckItem.TYPE_TIMEANDTEMP;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 点检适配器
+ */
+public class PISpotCheckAdapter extends MultipleItemRvAdapter<SpotCheckItem, BaseViewHolder> {
+   public int position_noSet=-1;  //没有设置温度或时间
+    public PISpotCheckAdapter(int layoutResId, @Nullable List<SpotCheckItem> data)
+    {
+        super( data);
+        this.mLayoutResId=layoutResId;
+        setMultiTypeDelegate(new MultiTypeDelegate<SpotCheckItem>() {
+            @Override
+            protected int getItemType(SpotCheckItem entity) {
+                //根据你的实体类来判断布局类型
+                return entity.getItemType();
+            }
+        });
+        getMultiTypeDelegate()
+                .registerItemType(TYPE_TEMPERATURE, R.layout.recycler_pi_temp);
+        getMultiTypeDelegate()
+                .registerItemType(TYPE_ONLYHAVE, R.layout.recycler_pi_spotcheck);
+        getMultiTypeDelegate()
+                .registerItemType(TYPE_TIMEANDTEMP,R.layout.recycler_pi_timeandtemp);
+    }
+
+    @Override
+    protected int getViewType(SpotCheckItem spotCheckItem) {
+        return spotCheckItem.getItemType();
+    }
+
+    @Override
+    public void registerItemProvider() {
+
+    }
+
+    @Override
+    protected void convert(final BaseViewHolder helper, final SpotCheckItem item) {
+        switch (item.getItemType())
+        {
+            case TYPE_TIMEANDTEMP:
+                helper.setText(R.id.temp_Label,"温度:"+item.getTemperature()+" ℃")
+                        .setText(R.id.coolTime_Label,"冷却:"+item.getCoolTime()+" S")
+                        .setText(R.id.cycleTime_Label,"周期:"+item.getCycleTime()+" S");
+                helper.addOnClickListener(R.id.temp_Label)
+                        .addOnClickListener(R.id.coolTime_Label)
+                        .addOnClickListener(R.id.cycleTime_Label);
+                break;
+            case TYPE_ONLYHAVE:
+                helper.setChecked(R.id.check_has_Switch,item.getHave());
+                helper.addOnClickListener(R.id.check_has_Switch);
+                break;
+            case TYPE_TEMPERATURE:
+                helper.setText(R.id.temp_Label,"温度:"+item.getTemperature()+"℃");
+                helper.addOnClickListener(R.id.temp_Label);
+                break;
+        }
+        TextView view=helper.getView(R.id.label_remark);
+        if(TextUtils.isEmpty(item.getRemark_content()))
+            view.setCompoundDrawablesWithIntrinsicBounds(0,0,R.mipmap.ic_remark,0);
+        else
+            view.setCompoundDrawablesWithIntrinsicBounds(0,0,R.mipmap.ic_remark_have,0);
+        helper.setText(R.id.check_Title,item.getCheck_Title());
+        helper.addOnClickListener(R.id.label_remark);
+        if(helper.getAdapterPosition()-getHeaderLayoutCount()==position_noSet)
+        {
+            showLog("positionNoSet:"+position_noSet);
+            helper.itemView.setBackgroundResource(R.drawable.shape_timeandtemp_noset);
+        }
+        else
+            helper.itemView.setBackgroundResource(R.drawable.recycler_background);
+    }
+
+    @Override
+    public void onBindViewHolder(BaseViewHolder holder, int position) {
+        super.onBindViewHolder(holder,position);
+    }
+    public int getPosition_noSet() {
+        return position_noSet;
+    }
+
+    public void setPosition_noSet(int position_noSet) {
+        this.position_noSet = position_noSet;
+        notifyDataSetChanged();
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/view/NonSlideViewPager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/NonSlideViewPager.java	(date 1576065996094)
+++ app/src/main/java/com/furja/devicemanager/view/NonSlideViewPager.java	(date 1576065996094)
@@ -0,0 +1,37 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.viewpager.widget.ViewPager;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+
+/**
+ *自定义禁止左右滑动的ViewPager
+ */
+
+public class NonSlideViewPager extends ViewPager{
+    public NonSlideViewPager(@NonNull Context context) {
+        super(context);
+    }
+
+    public NonSlideViewPager(@NonNull Context context, @Nullable AttributeSet attrs) {
+        super(context, attrs);
+    }
+
+    /**
+     * 禁止ViewPager滑动
+     * @param ev
+     * @return
+     */
+    @Override
+    public boolean onInterceptTouchEvent(MotionEvent ev) {
+        return false;
+    }
+
+    @Override
+    public boolean onTouchEvent(MotionEvent arg0) {
+        return false;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/RecyclerDetailAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/RecyclerDetailAdapter.java	(date 1576067820185)
+++ app/src/main/java/com/furja/devicemanager/view/RecyclerDetailAdapter.java	(date 1576067820185)
@@ -0,0 +1,36 @@
+package com.furja.devicemanager.view;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+
+/**
+ * 单个维修单详情的记录
+ */
+public class RecyclerDetailAdapter extends BaseQuickAdapter<String,BaseViewHolder> {
+    public String[] labels;
+    public RecyclerDetailAdapter(int layoutResId) {
+        super(layoutResId);
+    }
+
+    /**
+     * @param layoutResId
+     * @param planElseRecord 计划或记录(保养/维修)
+     */
+    public RecyclerDetailAdapter(int layoutResId,boolean planElseRecord)
+    {
+        this(layoutResId);
+        if(!planElseRecord)
+            labels=new String[]{"设备名称","设备条码","维修单号","设备状态","报修人员",
+                "故障描述","报修时间","维修时间","维修人员","工作描述","验证人员","验证时间"};
+        else            //浏览计划
+            labels=new String[]{"设备名称","设备条码","所在部门","保养级别"
+                    ,"循环方式","循环周期","上次保养时间",
+                    "下次保养时间","保养部位","保养标准","维保人员","计划描述"};
+    }
+    @Override
+    protected void convert(BaseViewHolder helper, String item) {
+        helper.setText(R.id.detail_Label,labels[helper.getAdapterPosition()]);
+        helper.setText(R.id.detail_content,item);
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/WrapLinearLayoutManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/WrapLinearLayoutManager.java	(date 1576065997428)
+++ app/src/main/java/com/furja/devicemanager/view/WrapLinearLayoutManager.java	(date 1576065997428)
@@ -0,0 +1,24 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+/**
+ * Created by zhangmeng on 2018/5/29.
+ */
+
+public class WrapLinearLayoutManager extends LinearLayoutManager {
+    public WrapLinearLayoutManager(Context context) {
+        super(context,LinearLayoutManager.VERTICAL,false);
+    }
+
+    @Override
+    public void onLayoutChildren(RecyclerView.Recycler recycler, RecyclerView.State state) {
+        try {
+            super.onLayoutChildren(recycler, state);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/SparePagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/SparePagerAdapter.java	(date 1576067823431)
+++ app/src/main/java/com/furja/devicemanager/view/SparePagerAdapter.java	(date 1576067823431)
@@ -0,0 +1,80 @@
+package com.furja.devicemanager.view;
+
+import androidx.viewpager.widget.PagerAdapter;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.SparePartsItem;
+import java.util.List;
+
+/**
+ * 备件耗材的PagerAdapter
+ */
+
+public class SparePagerAdapter extends PagerAdapter {
+    private List<View> viewPages;
+
+    public SparePagerAdapter(List<View> viewPages)
+    {
+        this.viewPages=viewPages;
+    }
+
+    @Override
+    public int getCount() {
+        if(viewPages==null)
+            return 0;
+        else
+            return viewPages.size();
+    }
+
+
+
+
+    @Override
+    public boolean isViewFromObject(View view, Object object) {
+        return view==object;
+    }
+
+    @Override
+    public void destroyItem(ViewGroup container, int position, Object object) {
+        container.removeView(viewPages.get(position));//删除页卡
+    }
+    @Override
+    public Object instantiateItem(ViewGroup container, int position) {
+        View view=viewPages.get(position);
+        container.addView(view);
+        RecyclerView recyclerView=view.findViewById(R.id.recycler_spareList);
+        recyclerView
+                .setLayoutManager(new LinearLayoutManager(container.getContext()));
+        SparePartsItem item=new SparePartsItem();
+        RecyclerAdapter recyclerAdapter=new RecyclerAdapter(item);
+        recyclerView.setAdapter(recyclerAdapter);
+
+        return view;
+    }
+
+    private class RecyclerAdapter extends BaseQuickAdapter<String,BaseViewHolder>
+    {
+        String[] stringArray
+                =new String[]{"备件代码","备件名称","规格型号","标准用量"
+                            ,"基本计量单位","基本单位标准用量","基本单位实际用量"};
+        public RecyclerAdapter(SparePartsItem item)
+        {
+            super(R.layout.repairdetail_layout,item.toStringList());
+        }
+
+        @Override
+        protected void convert(BaseViewHolder helper, String item)
+        {
+            helper.setText(R.id.detail_Label,
+                    stringArray[helper.getAdapterPosition()]);
+            helper.setText(R.id.detail_content,item);
+
+        }
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/view/PIViewPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/PIViewPagerAdapter.java	(date 1576829481577)
+++ app/src/main/java/com/furja/devicemanager/view/PIViewPagerAdapter.java	(date 1576829481577)
@@ -0,0 +1,338 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import androidx.annotation.NonNull;
+import androidx.viewpager.widget.PagerAdapter;
+import android.text.TextUtils;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.inputmethod.EditorInfo;
+import android.widget.TextView;
+
+import com.afollestad.materialdialogs.DialogAction;
+import com.afollestad.materialdialogs.MaterialDialog;
+
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.SpotCheckItem;
+import com.furja.devicemanager.presenter.PIViewPagerPresenter;
+import com.furja.devicemanager.services.MyCrashHandler;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import static com.furja.devicemanager.beans.SpotCheckItem.*;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+
+public class PIViewPagerAdapter extends PagerAdapter {
+    private Context context;
+    private List<View> viewPages;
+    private int position_noSet; //没有填写必填项或没有设置
+    private PIViewPagerPresenter.ScanListener scanListener;
+    private String barCode;     //设备条码或检查条目的条码
+    private PIViewPagerPresenter presenter;
+    public PIViewPagerAdapter(List<View> viewPages)
+    {
+        this.viewPages=viewPages;
+    }
+    public PIViewPagerAdapter(PIViewPagerPresenter.ScanListener listener)
+    {
+        setScanListener(listener);
+        this.context=listener.getContext();
+        scanListener.setScanOverLister(new ScanOverListener());
+        showLog("啥情况");
+        presenter=new PIViewPagerPresenter(listener);
+    }
+
+    @Override
+    public Object instantiateItem(ViewGroup container, int position) {
+        showLog("container:"+position);
+        View curView=viewPages.get(position);
+        curView.setTag(position);
+        container.addView(curView);
+        List<SpotCheckItem> spotCheckItems=presenter.getSpotCheckItems();
+        if(spotCheckItems!=null&&spotCheckItems.size()>position)
+        {
+            SpotCheckItem item=spotCheckItems.get(position);
+            LayoutInflater layoutInflater=LayoutInflater.from(context);
+            switch (item.getItemType())
+            {
+                case TYPE_ONLYHAVE:
+                    presenter.setOnlyHaveView(curView,item);
+                    break;
+                case TYPE_TIMEANDTEMP:
+                    presenter.setTimeAndTempView(curView,item);
+                    break;
+                case TYPE_TEMPERATURE:
+                    presenter.setTemperatureView(curView,item);
+                    break;
+                case TYPE_LOG_DATE:
+                    presenter.setSignTimeView(curView,item);
+                    break;
+            }
+            presenter.setTitleAndRemarkView(item, curView);
+        }
+        return curView;
+    }
+
+    @Override
+    public int getCount() {
+        if(viewPages==null)
+            return 0;
+        return viewPages.size();
+    }
+    @Override
+    public boolean isViewFromObject(View view, Object object) {
+        return view==object;
+    }
+
+    @Override
+    public void destroyItem(ViewGroup container, int position, Object object) {
+        container.removeView(viewPages.get(position));//删除页卡
+    }
+
+    public void setViewPages(List<View> viewPages) {
+        this.viewPages = viewPages;
+    }
+
+    public List<SpotCheckItem> getSpotCheckItems() {
+        return presenter.getSpotCheckItems();
+    }
+
+    public void setNewData(List<SpotCheckItem> newData) {
+        if(viewPages==null)
+            viewPages=new ArrayList<View>();
+        else
+            viewPages.clear();
+        presenter.setSpotCheckItems(newData);
+        presenter.setCurrPosition(-1);
+        resumeViewPagers(newData);
+    }
+
+    /**SpotCheckItems生成ViewPagers
+     * 依据
+     * @param newData
+     */
+    private void resumeViewPagers(List<SpotCheckItem> newData) {
+        for(SpotCheckItem item:newData)
+        {
+            View curView=null;
+            LayoutInflater layoutInflater
+                    =LayoutInflater.from(context);
+            switch (item.getItemType())
+            {
+                case TYPE_ONLYHAVE:
+                    curView=layoutInflater.inflate(R.layout.recycler_pi_spotcheck,null);
+                    break;
+                case TYPE_TIMEANDTEMP:
+                    curView=layoutInflater.inflate(R.layout.recycler_pi_timeandtemp,null);
+                    break;
+                case TYPE_TEMPERATURE:
+                    curView=layoutInflater.inflate(R.layout.recycler_pi_temp,null);
+                    break;
+                case TYPE_LOG_DATE:
+                    curView=layoutInflater.inflate(R.layout.recycler_pi_signtime,null);
+                    break;
+            }
+            viewPages.add(curView);
+        }
+        notifyDataSetChanged();
+    }
+
+    @Override
+    public int getItemPosition(@NonNull Object object) {
+        View view = (View)object;
+
+        int currentPage = scanListener.getCurrentItem(); // Get current page index
+        if(currentPage == (Integer)view.getTag())
+            return POSITION_NONE;
+        else
+            return super.getItemPosition(object);
+    }
+
+    public void setPosition_noSet(int position_noSet) {
+        this.position_noSet = position_noSet;
+    }
+
+    public void setEmptyView(View emptyView) {
+        if(viewPages==null)
+            viewPages=new ArrayList<View>();
+        viewPages.clear();
+        viewPages.add(emptyView);
+        notifyDataSetChanged();
+    }
+
+
+
+
+    /**
+     * 条码录入框体输入完成监听
+     */
+    public class ScanOverListener implements View.OnKeyListener,TextView.OnEditorActionListener {
+
+        private long lastTimeMillis=System.currentTimeMillis();    //上次校验条码的时间
+
+        @Override
+        public boolean onKey(View view, int i, KeyEvent keyEvent) {
+            if (keyEvent.getKeyCode() == KeyEvent.KEYCODE_ENTER) {
+                if (System.currentTimeMillis() - lastTimeMillis > 1000)
+                    lastTimeMillis = System.currentTimeMillis();
+                else
+                    return false;
+                if (TextUtils.isEmpty(scanListener.getScanedBarCode()))
+                    return false;
+                else {
+                    String input_BarCode = scanListener.getScanedBarCode().toString();
+                    showLog(input_BarCode);
+                    setBarCode(input_BarCode);
+                }
+            }
+            return false;
+        }
+
+        @Override
+        public boolean onEditorAction(TextView textView, int i, KeyEvent keyEvent)
+        {
+            showLog("到这里了");
+            if (i == EditorInfo.IME_ACTION_DONE) {
+                if (System.currentTimeMillis() - lastTimeMillis > 1000)
+                    lastTimeMillis = System.currentTimeMillis();
+                else
+                    return false;
+                if (TextUtils.isEmpty(scanListener.getScanedBarCode()))
+                    return false;
+                else
+                {
+                    String input_BarCode=scanListener.getScanedBarCode().toString();
+                    showLog(input_BarCode);
+                    setBarCode(input_BarCode);
+                }
+            }
+            return false;
+        }
+    }
+
+    public PIViewPagerPresenter.ScanListener getScanListener() {
+        return scanListener;
+    }
+
+    public void setScanListener(PIViewPagerPresenter.ScanListener scanListener) {
+        this.scanListener = scanListener;
+    }
+
+    /**
+     * 扫码录入,开始亮题目
+     * @param barCode
+     */
+    public void setBarCode(String barCode) {
+        this.barCode = barCode;
+        String regex="^[A-Za-z][0-9][0-9]";
+        Pattern pattern= Pattern.compile(regex);
+        Matcher matcher=pattern.matcher(barCode);
+        String deviceCode=scanListener.getDeviceBarCode();
+        if(matcher.matches())   //如果符合正则表达式则是设备条码
+        {
+            if(TextUtils.isEmpty(deviceCode))
+            {
+                scanListener.requestDeviceInfo(barCode);
+            }
+            else
+            {
+                if(!barCode.equals(deviceCode))
+                    try {
+                        showConfirmDialog(barCode);
+                    } catch (Exception e) {
+                        MyCrashHandler
+                                .getInstance()
+                                .uploadError(e.fillInStackTrace());
+                    }
+
+            }
+            return;
+        }
+        if(TextUtils.isEmpty(deviceCode))
+        {
+            showToast("须先扫描设备条码方可开始点检");
+            scanListener.clearBarCodeEdit();
+            return;
+        }
+        if (canSelectCheckItem(barCode))
+            return;
+        showToast("条码不匹配,请重新录入");
+    }
+
+    /**
+     * 当前设备未点检完成而转扫其他条码,弹框确认
+     * @param barCode
+     */
+    private void showConfirmDialog(final String barCode) throws Exception{
+        View view=viewPages.get(scanListener.getCurrentItem());
+        Context context= view.getContext();
+        new MaterialDialog.Builder(context)
+                .title("你扫了非当前机台的设备条码")
+                .content(scanListener.getDeviceBarCode()+"设备尚未点检完成,是否放弃本次点检而点检其他设备")
+                .positiveText("继续点检"+scanListener.getDeviceBarCode())
+                .negativeText("点检新设备"+barCode)
+                .onNegative(new MaterialDialog.SingleButtonCallback() {
+                    @Override
+                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {
+                        scanListener.spotCheckNext();
+                        scanListener.requestDeviceInfo(barCode);
+                    }
+                })
+                .onPositive(new MaterialDialog.SingleButtonCallback() {
+                    @Override
+                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {
+                        scanListener.clearBarCodeEdit();
+                    }
+                })
+                .build().show();
+    }
+
+    /**
+     * 判断检查内容条码并跳转至指定Position
+     * @param barCode
+     * @return
+     */
+    private boolean canSelectCheckItem(String barCode) {
+        List<SpotCheckItem> spotCheckItems
+                =presenter.getSpotCheckItems();
+        int position=0;
+        showLog("获取到:"+barCode);
+        barCode=barCode.toUpperCase();
+        if(barCode.contains("CK"))
+        {
+            barCode=barCode.replace("CK","");
+            try {
+                position=Integer.valueOf(barCode);
+                presenter.setScanItem(position-1);
+            } catch (NumberFormatException e) {
+                showToast("所录入的代码格式错误");
+                return false;
+            }
+            return true;
+        }
+        if(spotCheckItems==null)
+        {
+            spotCheckItems=new ArrayList<>();
+        }
+        for(int i=0;i<spotCheckItems.size();i++)
+        {
+            SpotCheckItem item=spotCheckItems.get(i);
+            String title=item.getCheck_Title();
+            if(title.contains(barCode))
+            {
+                presenter.setScanItem(i);
+                return true;
+            }
+        }
+        return false;
+    }
+
+
+}
Index: app/src/main/java/com/furja/devicemanager/view/MyAutoAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/MyAutoAdapter.java	(date 1576065996311)
+++ app/src/main/java/com/furja/devicemanager/view/MyAutoAdapter.java	(date 1576065996311)
@@ -0,0 +1,16 @@
+package com.furja.devicemanager.view;
+
+import android.content.Context;
+import androidx.annotation.NonNull;
+import android.widget.ArrayAdapter;
+
+/**
+ * AutoCompleteTextView的适配器
+ */
+
+public class MyAutoAdapter extends ArrayAdapter {
+    public MyAutoAdapter(@NonNull Context context, int resource) {
+        super(context, resource);
+    }
+
+}
Index: app/src/main/java/com/furja/devicemanager/view/BasePlanAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/view/BasePlanAdapter.java	(date 1576067820075)
+++ app/src/main/java/com/furja/devicemanager/view/BasePlanAdapter.java	(date 1576067820075)
@@ -0,0 +1,28 @@
+package com.furja.devicemanager.view;
+
+import android.annotation.SuppressLint;
+import androidx.annotation.Nullable;
+import android.widget.TextView;
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.overall.R;
+import com.furja.devicemanager.beans.DetailItem;
+import java.util.List;
+
+/**
+ * 保养计划视图
+ */
+public class BasePlanAdapter extends BaseQuickAdapter<DetailItem,BaseViewHolder> {
+    public BasePlanAdapter(@Nullable List<DetailItem> data) {
+        super(R.layout.repairdetail_layout,data);
+    }
+
+    @SuppressLint("NewApi")
+    @Override
+    protected void convert(BaseViewHolder helper, DetailItem item) {
+        helper.setText(R.id.detail_Label,item.getLabel());
+        TextView textLabel=helper.getView(R.id.detail_Label);
+        TextView textContent=helper.getView(R.id.detail_content);
+        helper.setText(R.id.detail_content,item.getDetail());
+    }
+}
Index: app/src/main/res/menu/menu_fresh.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_fresh.xml	(date 1533283062000)
+++ app/src/main/res/menu/menu_fresh.xml	(date 1533283062000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_fresh"
+        android:orderInCategory="100"
+        android:label="@string/action_fresh"
+        android:title="@string/action_fresh"
+        app:showAsAction="always" />
+</menu>
\ No newline at end of file
Index: app/src/main/java/com/furja/overall/ui/NaviActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/NaviActivity.java	(date 1576286947895)
+++ app/src/main/java/com/furja/overall/ui/NaviActivity.java	(date 1576286947895)
@@ -0,0 +1,190 @@
+package com.furja.overall.ui;
+
+import android.content.Intent;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import androidx.annotation.NonNull;
+import com.google.android.material.navigation.NavigationView;
+import androidx.core.view.GravityCompat;
+import androidx.drawerlayout.widget.DrawerLayout;
+import androidx.appcompat.app.ActionBarDrawerToggle;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.appcompat.widget.Toolbar;
+import android.view.MenuItem;
+import android.view.View;
+
+import com.afollestad.materialdialogs.MaterialDialog;
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.furja.devicemanager.ui.DevManageActivity;
+import com.furja.overall.R;
+import com.furja.overall.beans.NaviItem;
+import com.furja.utils.AutoUpdateUtils;
+import com.furja.overall.view.NaviRecyclerAdapter;
+import com.furja.verify.ui.ProductVerifyActivity;
+import com.furja.fixturemanager.ui.WorkFixActivity;
+import java.util.ArrayList;
+import java.util.List;
+import butterknife.BindView;
+import butterknife.ButterKnife;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 导航页
+ */
+public class NaviActivity extends BaseActivity implements NavigationView.OnNavigationItemSelectedListener{
+
+    @BindView(R.id.recycler_navi)
+    RecyclerView recycler_navi;
+    NaviRecyclerAdapter recyclerAdapter;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState)
+    {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_navi);
+        ButterKnife.bind(this);
+
+        recyclerAdapter=new NaviRecyclerAdapter(R.layout.navigation_item);
+        GridLayoutManager layoutManager
+                =new GridLayoutManager(this,2);
+        recycler_navi.setLayoutManager(layoutManager);
+        recycler_navi.setAdapter(recyclerAdapter);
+        recyclerAdapter.bindToRecyclerView(recycler_navi);
+        initNaviView();
+        loadRecyclerData();
+
+        //检查更新
+        AutoUpdateUtils updateUtils
+                =new AutoUpdateUtils(this,true);
+        updateUtils.checkUpdate();
+    }
+
+
+    private void loadRecyclerData() {
+        List<NaviItem>  naviItems
+                =new ArrayList<NaviItem>();
+        NaviItem naviItem=new NaviItem();
+        naviItem.setaClass(BadLogActivity.class);
+        naviItem.setTitle("质检助手");
+        naviItem.setIconID(R.mipmap.qc_launcher);
+        naviItems.add(naviItem);
+        NaviItem naviItem1=new NaviItem();
+        naviItem1.setaClass(DevManageActivity.class);
+        naviItem1.setIconID(R.mipmap.devmanager_launcher);
+        naviItem1.setTitle("设备管理");
+        naviItems.add(naviItem1);
+        naviItem1=new NaviItem();
+        naviItem1.setaClass(ProductVerifyActivity.class);
+        naviItem1.setIconID(R.mipmap.verify_jy_launcher);
+        naviItem1.setTitle("成品校验");
+        naviItems.add(naviItem1);
+        naviItem1=new NaviItem();
+        naviItem1.setaClass(ChartActivity.class);
+        naviItem1.setIconID(R.mipmap.ic_chart_launcher);
+        naviItem1.setTitle("异常报表");
+        naviItems.add(naviItem1);
+        naviItem=new NaviItem();
+        naviItem.setaClass(ChatActivity.class);
+        naviItem.setTitle("聊天模块");
+        naviItem.setIconID(R.mipmap.ic_chat_launcher);
+        naviItems.add(naviItem);
+        naviItem=new NaviItem();
+        naviItem.setaClass(WorkFixActivity.class);
+        naviItem.setTitle("工装管理");
+        naviItem.setIconID(R.mipmap.workfix_launcher);
+        naviItems.add(naviItem);
+        recyclerAdapter.setNewData(naviItems);
+        recyclerAdapter.setOnItemClickListener(new BaseQuickAdapter.OnItemClickListener() {
+            @Override
+            public void onItemClick(BaseQuickAdapter adapter, View view, int position) {
+                NaviItem item=recyclerAdapter.getItem(position);
+                if(item.getTitle().contains("更新"))
+                {
+
+                }
+                else{
+                    Intent intent=new Intent(NaviActivity.this,item.getaClass());
+                    startActivity(intent);
+                }
+            }
+        });
+    }
+
+    /**
+     * 加载导航视图
+     */
+    private void initNaviView() {
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        drawer.addDrawerListener(toggle);
+        toggle.syncState();
+
+        NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
+        navigationView.setNavigationItemSelectedListener(this);
+        toolbar.collapseActionView();
+    }
+
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+        int id = item.getItemId();
+
+        if (id == R.id.nav_camera) {
+            // Handle the camera action
+        } else if (id == R.id.nav_gallery) {
+
+        } else if (id == R.id.nav_slideshow) {
+
+        } else if (id == R.id.nav_manage) {
+
+        } else if (id == R.id.nav_share) {
+
+        } else if (id == R.id.nav_about) {
+            new MaterialDialog.Builder(this)
+                    .title("关于")
+                    .iconRes(R.mipmap.ic_update)
+                    .content(getVerInfo())
+                    .backgroundColorRes(R.color.color_dialogBg)
+                    .positiveText("检查更新")
+                    .onPositive((dialog, which) -> {
+                        AutoUpdateUtils utils
+                                =new AutoUpdateUtils(NaviActivity.this,false);
+                        utils.checkUpdate();
+                    }).show();
+
+        }
+        showLog("你点击了:"+id);
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+    public String getVerInfo()
+    {
+        String versionInfo=System.getProperty("line.separator");
+        try {
+            PackageInfo packageInfo=getPackageManager().getPackageInfo(
+                    getPackageName(), 0);
+            versionInfo+="    版本号: "+
+                    packageInfo.versionName;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return versionInfo;
+    }
+
+    @Override
+    public void onBackPressed() {
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        if (drawer.isDrawerOpen(GravityCompat.START)) {
+            drawer.closeDrawer(GravityCompat.START);
+        } else {
+            super.onBackPressed();
+        }
+    }
+}
Index: app/src/main/res/menu/menu_lineverify.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/menu_lineverify.xml	(date 1532131684000)
+++ app/src/main/res/menu/menu_lineverify.xml	(date 1532131684000)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+    <item
+        android:id="@+id/action_switch"
+        android:orderInCategory="100"
+        android:title="@string/action_switch"
+        app:showAsAction="collapseActionView" />
+</menu>
\ No newline at end of file
Index: app/src/main/java/com/furja/overall/receiver/NetworkChangeReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/receiver/NetworkChangeReceiver.java	(date 1576822388366)
+++ app/src/main/java/com/furja/overall/receiver/NetworkChangeReceiver.java	(date 1576822388366)
@@ -0,0 +1,143 @@
+package com.furja.overall.receiver;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.content.IntentFilter;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+import android.util.Log;
+
+import com.furja.utils.Constants;
+import com.furja.utils.SharpBus;
+
+import java.util.concurrent.Callable;
+import io.reactivex.Observable;
+import io.reactivex.functions.Consumer;
+import io.reactivex.schedulers.Schedulers;
+
+import static com.furja.utils.Constants.TAG_GOT_NETWORK;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 网络切换接收
+ */
+public class NetworkChangeReceiver extends BroadcastReceiver {
+    private static Context context;
+    private static NetworkChangeReceiver networkChangeReceiver;
+    private static boolean oldFlag = true;  //尚未获取到准确网络环境时为false
+    private static boolean isInnerNet=true;
+    private NetWorkListener netWorkListener;    //网络切换时调用其方法通知
+    public static void init(Context applicationContext)
+    {
+        context=applicationContext;
+        IntentFilter intentFilter=new IntentFilter();
+        intentFilter.addAction("android.net.conn.CONNECTIVITY_CHANGE");
+        getInstance();
+        context.registerReceiver(networkChangeReceiver,intentFilter);
+    }
+    public static NetworkChangeReceiver getInstance()
+    {
+        if(networkChangeReceiver==null)
+            networkChangeReceiver=new NetworkChangeReceiver();
+        return networkChangeReceiver;
+    }
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        ConnectivityManager connectivityManager= (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        NetworkInfo networkInfo=connectivityManager.getActiveNetworkInfo();
+        if(networkInfo==null||!networkInfo.isAvailable())
+            showLog("网络不可用");
+        else
+            pingAndSetCurNet();
+    }
+
+    /**
+     * ping 指定IP返回成功与否
+     * @param host
+     * @return
+     */
+    public static boolean ping(String host) {
+        String line = null;
+        Process process = null;
+        int pingCount=1;
+        String command = "ping -c " + pingCount + " " + host;
+        boolean isSuccess = false;
+        try {
+            process = Runtime.getRuntime().exec(command);
+            if (process == null) {
+                return false;
+            }
+            int status = process.waitFor();
+            if (status == 0) {
+                isSuccess = true;
+            } else {
+                isSuccess = false;
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            if (process != null) {
+                process.destroy();
+            }
+        }
+        return isSuccess;
+    }
+
+
+    public static void unregister() {
+        if(context!=null&&networkChangeReceiver!=null)
+            context.unregisterReceiver(networkChangeReceiver);
+    }
+
+    public static boolean isInnerNet() {
+        return isInnerNet;
+    }
+
+    public static void setIsInnerNet(boolean isInnerNet) {
+        NetworkChangeReceiver.isInnerNet = isInnerNet;
+        Constants.isInnerNet=isInnerNet;
+    }
+
+    /**
+     * ping 一下公司内网服务器,判断是否在内网
+     */
+    public  void pingAndSetCurNet()
+    {
+        Observable.fromCallable(new Callable<Boolean>() {
+            @Override
+            public Boolean call() throws Exception {
+                return ping("192.168.10.5");   //ping百度的IP
+            }})
+                .subscribeOn(Schedulers.newThread())
+                .subscribe(new Consumer<Boolean>() {
+                    @Override
+                    public void accept(Boolean isInnerNet) throws Exception {
+                        if(oldFlag){
+                            SharpBus.getInstance().post(TAG_GOT_NETWORK,TAG_GOT_NETWORK);
+                        }
+                        oldFlag=false;
+                        Log.e("NetworkChange","网络状态变化为内网:"+isInnerNet);
+                        setIsInnerNet(isInnerNet);
+                        Constants.isInnerNet=isInnerNet;
+                        toRemedy();
+                    }
+                });
+    }
+
+    /**
+     * 当网络恢复正常时进行一些补救操作->比如上传因网络异常未被上传的数据
+     */
+    private  void toRemedy() {
+
+        if(netWorkListener!=null)
+            netWorkListener.onChange(isInnerNet);
+    }
+    public static boolean isOldFlag() {
+        return oldFlag;
+    }
+    public interface NetWorkListener
+    {
+        void onChange(boolean isInnerNet);
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/MaintainState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/MaintainState.java	(date 1513840170000)
+++ app/src/main/java/com/furja/devicemanager/beans/MaintainState.java	(date 1513840170000)
@@ -0,0 +1,27 @@
+package com.furja.devicemanager.beans;
+
+/**
+ * 保养状态.
+ */
+
+public class MaintainState implements DeviceState {
+    @Override
+    public String getLastState() {
+        return "待保养";
+    }
+
+    @Override
+    public String getFinishState() {
+        return "已保养";
+    }
+
+    @Override
+    public String getCurrState() {
+        return "保养中";
+    }
+
+    @Override
+    public String[] getStringArray() {
+        return new String[]{getLastState(),getCurrState(),getFinishState()};
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/InspectProjectItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/InspectProjectItem.java	(date 1527041794000)
+++ app/src/main/java/com/furja/devicemanager/beans/InspectProjectItem.java	(date 1527041794000)
@@ -0,0 +1,92 @@
+package com.furja.devicemanager.beans;
+
+/**
+ * 点检记录项目实体
+ */
+
+public class InspectProjectItem {
+    private int  FID;
+    private int  FIndex;
+    private String  FProjectName;
+    private String  FInspectPosition;
+    private String  FInspectRequire;
+    private int  FChargeEmp;
+    private String FFNote;
+    private String  FInspectRecord;
+    private String chargeDspName;
+
+
+
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public int getFIndex() {
+        return FIndex;
+    }
+
+    public void setFIndex(int FIndex) {
+        this.FIndex = FIndex;
+    }
+
+    public String getFProjectName() {
+        return FProjectName;
+    }
+
+    public void setFProjectName(String FProjectName) {
+        this.FProjectName = FProjectName;
+    }
+
+    public String getFInspectPosition() {
+        return FInspectPosition;
+    }
+
+    public void setFInspectPosition(String FInspectPosition) {
+        this.FInspectPosition = FInspectPosition;
+    }
+
+    public String getFInspectRequire() {
+        return FInspectRequire;
+    }
+
+    public void setFInspectRequire(String FInspectRequire) {
+        this.FInspectRequire = FInspectRequire;
+    }
+
+    public int getFChargeEmp() {
+        return FChargeEmp;
+    }
+
+    public void setFChargeEmp(int FChargeEmp) {
+        this.FChargeEmp = FChargeEmp;
+    }
+
+    public String getFFNote() {
+        return FFNote;
+    }
+
+    public void setFFNote(String FFNote) {
+        this.FFNote = FFNote;
+    }
+
+    public String getFInspectRecord() {
+        return FInspectRecord;
+    }
+
+    public void setFInspectRecord(String FInspectRecord) {
+        this.FInspectRecord = FInspectRecord;
+    }
+
+    public String getChargeDspName() {
+        return chargeDspName;
+    }
+
+    public void setChargeDspName(String chargeDspName) {
+        this.chargeDspName = chargeDspName;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/DeviceAccount.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/DeviceAccount.java	(date 1525316126000)
+++ app/src/main/java/com/furja/devicemanager/beans/DeviceAccount.java	(date 1525316126000)
@@ -0,0 +1,65 @@
+package com.furja.devicemanager.beans;
+
+/**
+ * 设备信息,包含设备名称及设备所在区域
+ */
+
+public class DeviceAccount {
+    private String FDeviceName;           //设备名称
+    private String FModel;          //设备型号
+    private String FSpecification;  //设备规格
+    private String FSettingPlace;   //使用部门
+    private int FID;                //设备内码
+
+    /*
+     *设备详情
+     * @return
+     */
+    @Override
+    public String toString()
+    {
+        String lineSeparator=System.lineSeparator();
+        return "设备名称:" + FDeviceName + lineSeparator +
+                "使用部门:" + FSettingPlace;
+    }
+
+    public String getFDeviceName() {
+        return FDeviceName;
+    }
+
+    public void setFDeviceName(String FDeviceName) {
+        this.FDeviceName = FDeviceName;
+    }
+
+    public String getFModel() {
+        return FModel;
+    }
+
+    public void setFModel(String FModel) {
+        this.FModel = FModel;
+    }
+
+    public String getFSpecification() {
+        return FSpecification;
+    }
+
+    public void setFSpecification(String FSpecification) {
+        this.FSpecification = FSpecification;
+    }
+
+    public String getFSettingPlace() {
+        return FSettingPlace;
+    }
+
+    public void setFSettingPlace(String FSettingPlace) {
+        this.FSettingPlace = FSettingPlace;
+    }
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/InspectPlan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/InspectPlan.java	(date 1530599046000)
+++ app/src/main/java/com/furja/devicemanager/beans/InspectPlan.java	(date 1530599046000)
@@ -0,0 +1,293 @@
+package com.furja.devicemanager.beans;
+
+import android.text.TextUtils;
+import com.furja.devicemanager.utils.Utils;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.List;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_INTIME;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NEEDCHECK;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NEEDRECORD;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NOTPASSCHECK;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_OVER;
+
+/**
+ * 点检计划
+ */
+public class InspectPlan {
+    private int FID;
+    private String FInspectName;
+    private String FBillID;
+    private int FDeviceID;
+    private String FInspectPeriod;
+    private String FPlanBeginDate;
+    private String FPlanEndDate;
+    private String FLastInspectDate;
+    private String FNextInspectDate;
+    private int FInspectID;
+    private int FBillStatus;
+    private String FInspectNumber;
+    private String FNote;
+    private String FDeviceName;
+    private String FDeptName;
+    private String FDeviceModel;
+    private String FDeviceNumber;
+    private String FRecordEndDate;  //该计划最后一个尚未审核的点检记录得FEndDate
+    private int FPlanState;         //标识计划的状态,过期还是点检未审核
+    private int FRecordHasCheck;    //最后一个没有通过审核,若该值为1则是被打回,为0则是没有审核
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public String getFInspectName() {
+        return FInspectName;
+    }
+
+    public void setFInspectName(String FInspectName) {
+        this.FInspectName = FInspectName;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public String getFInspectPeriod() {
+        return FInspectPeriod;
+    }
+
+    public void setFInspectPeriod(String FInspectPeriod) {
+        this.FInspectPeriod = FInspectPeriod;
+    }
+
+    public String getFPlanBeginDate() {
+        return FPlanBeginDate;
+    }
+
+    public void setFPlanBeginDate(String FPlanBeginDate) {
+        this.FPlanBeginDate = FPlanBeginDate;
+    }
+
+    public String getFPlanEndDate() {
+        return FPlanEndDate;
+    }
+
+    public void setFPlanEndDate(String FPlanEndDate) {
+        this.FPlanEndDate = FPlanEndDate;
+    }
+
+    public String getFLastInspectDate() {
+        return FLastInspectDate;
+    }
+
+    public void setFLastInspectDate(String FLastInspectDate) {
+        this.FLastInspectDate = FLastInspectDate;
+    }
+
+    public String getFNextInspectDate() {
+        return FNextInspectDate;
+    }
+
+    public void setFNextInspectDate(String FNextInspectDate) {
+        this.FNextInspectDate = FNextInspectDate;
+    }
+
+    public int getFInspectID() {
+        return FInspectID;
+    }
+
+    public void setFInspectID(int FInspectID) {
+        this.FInspectID = FInspectID;
+    }
+
+    public int getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(int FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public String getFInspectNumber() {
+        return FInspectNumber;
+    }
+
+    public void setFInspectNumber(String FInspectNumber) {
+        this.FInspectNumber = FInspectNumber;
+    }
+
+    public String getFNote() {
+        return FNote;
+    }
+
+    public void setFNote(String FNote) {
+        this.FNote = FNote;
+    }
+
+    public String getFDeviceName() {
+        return FDeviceName;
+    }
+
+    public void setFDeviceName(String FDeviceName) {
+        this.FDeviceName = FDeviceName;
+    }
+
+    public String getFDeptName() {
+        return FDeptName;
+    }
+
+    public void setFDeptName(String FDeptName) {
+        this.FDeptName = FDeptName;
+    }
+
+    public String getFormatDate(String date)
+    {
+        if(TextUtils.isEmpty(date))
+            return "";
+        else
+        {
+            int key=date.indexOf(" ");
+            return date.substring(0,key);
+        }
+    }
+
+    public String getFDeviceModel() {
+        return FDeviceModel;
+    }
+
+    public void setFDeviceModel(String FDeviceModel) {
+        this.FDeviceModel = FDeviceModel;
+    }
+
+
+    /**
+     * 生成 不带设备信息点检计划
+     * @return
+     */
+    public List<String> toStringList()
+    {
+        List<String> stringList
+                =new ArrayList<>();
+        String name="每日点检";
+        if(!TextUtils.isEmpty(getFInspectName()))
+            name=getFInspectName();
+        stringList.add(getFDeviceName());
+        stringList.add(getFDeviceNumber());
+        stringList.add(getFDeviceModel());
+        stringList.add(getFDeptName());
+        stringList.add(name);
+        stringList.add(getFInspectPeriod());
+        stringList.add(getFormatDate(getFPlanBeginDate()));
+        stringList.add(getFormatDate(getFPlanEndDate()));
+        stringList.add(getFormatDate(getFLastInspectDate()));
+        stringList.add(getFormatDate(getFNextInspectDate()));
+        stringList.add(Utils.getPlanState(getFPlanState()));
+        return stringList;
+    }
+
+    public String getFDeviceNumber() {
+        return FDeviceNumber;
+    }
+
+    public void setFDeviceNumber(String FDeviceNumber) {
+        this.FDeviceNumber = FDeviceNumber;
+    }
+
+    public String getFRecordEndDate() {
+        return FRecordEndDate;
+    }
+
+    public void setFRecordEndDate(String FRecordEndDate) {
+        this.FRecordEndDate = FRecordEndDate;
+    }
+
+
+    /**
+     * 获取计划的状态
+     * @return
+     */
+    public int getFPlanState()
+    {
+        Date recordEndDate= Utils.parseDate(getFRecordEndDate());
+        Date nextMaintainDate= Utils.parseDate(FNextInspectDate);
+        Calendar calendar=Calendar.getInstance();
+        if(isAccordant(nextMaintainDate))
+        {
+            if(!isSameDay(calendar,recordEndDate))
+                return STATE_PLAN_NEEDRECORD;
+            else
+                if(calendar.getTime().after(recordEndDate))
+                {
+                    if(getFRecordHasCheck()<0)
+                        return STATE_PLAN_NEEDCHECK;    //有符合条件的保养记录但未审核
+                    else
+                    if(getFRecordHasCheck()==0)
+                        return STATE_PLAN_NOTPASSCHECK;
+                    else
+                        return STATE_PLAN_INTIME;
+                }
+                else
+                    return STATE_PLAN_NEEDRECORD;
+        }
+        else if(!Utils.getYMD_Date(calendar)
+                .after(nextMaintainDate))//当前日期在下次保养日期之前且不在同一天
+            return STATE_PLAN_INTIME;
+        else
+            return STATE_PLAN_OVER;
+    }
+
+    /**
+     * 将日期与现在的时间相比较
+     * 需满足->1:是否在同一个天 2:日期是否在现在的日期后面
+     * @param argu
+     * @return
+     */
+    public boolean isAccordant(Date argu)
+    {
+        Calendar calendar=Calendar.getInstance();
+        if(argu==null)
+            return true;
+        if(!Utils.getYMD_Date(calendar).after(argu)
+                &&isSameDay(calendar,argu))
+            return true;
+        return false;
+    }
+
+    public boolean isSameDay(Calendar calendar,Date date)
+    {
+        if(date==null)
+            return false;
+        Calendar arguCaledar=Calendar.getInstance();
+        arguCaledar.setTime(date);
+        return calendar.get(Calendar.DAY_OF_MONTH)
+                ==arguCaledar.get(Calendar.DAY_OF_MONTH);
+    }
+
+    public int getFRecordHasCheck() {
+        return FRecordHasCheck;
+    }
+
+    public void setFRecordHasCheck(int FRecordHasCheck) {
+        this.FRecordHasCheck = FRecordHasCheck;
+    }
+
+    public void setFPlanState(int FPlanState) {
+        this.FPlanState = FPlanState;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/MaintainProjectItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/MaintainProjectItem.java	(date 1524791908000)
+++ app/src/main/java/com/furja/devicemanager/beans/MaintainProjectItem.java	(date 1524791908000)
@@ -0,0 +1,128 @@
+package com.furja.devicemanager.beans;
+
+import com.alibaba.fastjson.annotation.JSONField;
+
+/**
+ * 保养项目单个Item实例
+ */
+public class MaintainProjectItem {
+    @JSONField(name="FEntryID")
+    private int FEntryID;
+    @JSONField(name="FIndex")
+    private int index;                  //序列
+    @JSONField(name="FID")
+    private int FID;                 //保养记录ID
+    @JSONField(name = "FChargeEmp")
+    private int chargeEmp;              //负责人代码
+    @JSONField(name = "FProjectName")
+    private String projectName;         //项目名称
+    @JSONField(name = "FMaintainRequire")
+    private String projectAsk;          //具体要求
+    private String projectLeader;       //负责人
+    @JSONField(name = "FFNote")
+    private String projectRemark;       //项目备注
+    @JSONField(name = "FStopTime")
+    private double stopDuration;        //停机时长
+    @JSONField(name = "FMaintainTime")
+    private double maintainDuration;    //保养用时
+    @JSONField(name = "FTimeUnit")
+    private int timeUnit=11082;
+    @JSONField(name = "FMaintainRecord")
+    private String FMaintainRecord="";
+
+    public int getFEntryID() {
+        return FEntryID;
+    }
+
+    public void setFEntryID(int FEntryID) {
+        this.FEntryID = FEntryID;
+    }
+
+    public int getIndex() {
+        return index;
+    }
+
+    public void setIndex(int index) {
+        this.index = index;
+    }
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public int getChargeEmp() {
+        return chargeEmp;
+    }
+
+    public void setChargeEmp(int chargeEmp) {
+        this.chargeEmp = chargeEmp;
+    }
+
+    public String getProjectName() {
+        return projectName;
+    }
+
+    public void setProjectName(String projectName) {
+        this.projectName = projectName;
+    }
+
+    public String getProjectAsk() {
+        return projectAsk;
+    }
+
+    public void setProjectAsk(String projectAsk) {
+        this.projectAsk = projectAsk;
+    }
+
+    public String getProjectLeader() {
+        return projectLeader;
+    }
+
+    public void setProjectLeader(String projectLeader) {
+        this.projectLeader = projectLeader;
+    }
+
+    public String getProjectRemark() {
+        return projectRemark;
+    }
+
+    public void setProjectRemark(String projectRemark) {
+        this.projectRemark = projectRemark;
+    }
+
+    public double getStopDuration() {
+        return stopDuration;
+    }
+
+    public void setStopDuration(double stopDuration) {
+        this.stopDuration = stopDuration;
+    }
+
+    public double getMaintainDuration() {
+        return maintainDuration;
+    }
+
+    public void setMaintainDuration(double maintainDuration) {
+        this.maintainDuration = maintainDuration;
+    }
+
+    public int getTimeUnit() {
+        return timeUnit;
+    }
+
+    public void setTimeUnit(int timeUnit) {
+        this.timeUnit = timeUnit;
+    }
+
+    public String getFMaintainRecord() {
+        return FMaintainRecord;
+    }
+
+    public void setFMaintainRecord(String FMaintainRecord) {
+        this.FMaintainRecord = FMaintainRecord;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/RecordDetailItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/RecordDetailItem.java	(date 1525219928000)
+++ app/src/main/java/com/furja/devicemanager/beans/RecordDetailItem.java	(date 1525219928000)
@@ -0,0 +1,283 @@
+package com.furja.devicemanager.beans;
+
+import android.text.TextUtils;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 我的 每个维修单的实体,分割成字符串装载
+ */
+
+public class RecordDetailItem {
+    public String deviceName;       //设备名称
+    public String deviceCode;       //设备二维码
+    public String repairNumber;     //维修单号
+    public String reportDate;       //报修时间
+    public String repairDate;       //维修时间
+    public String troubleDesp;      //故障描述
+    public String repairDesp;       //维修人员的工作描述
+    public String repairState;      //维修单据状态
+    public String reportPersonnel;  //报修人员
+    public String dispatchPersonnel;//派单人员
+    public String confirmPersonnel; //维修验证人员
+    public String repairPersonnel;  //维修人员
+    public String troubleLevelID;   //故障等级
+    public String troubleGradeID;   //故障类别
+    public float evaluateStar;        //评价星级
+    public String evaluateDetail;   //评价内容
+    public String dispatchDate;     //派工时间
+    public String confirmDate;      //验证时间
+    public String repairName;       //维修人员姓名
+    public String reportName;       //报修人员姓名
+    public String confirmName;      //验证人员姓名
+    public String dispatchName;     //派单人员姓名
+    public List<String> toStringList() {
+        List<String> stringList=new ArrayList<>();
+        stringList.add(deviceName);
+        stringList.add(deviceCode);
+        stringList.add(repairNumber);
+        stringList.add(repairState);
+        stringList.add(getReportName());
+        stringList.add(troubleDesp);
+        stringList.add(getReportDate());
+        stringList.add(getRepairDate());
+        stringList.add(getRepairName());
+        stringList.add(repairDesp);
+        if(!TextUtils.isEmpty(confirmDate))
+        {
+            stringList.add(getConfirmName());
+            stringList.add(getConfirmDate());
+        }
+        return stringList;
+    }
+
+
+    public List<String> testStringList() {
+        List<String> stringList=new ArrayList<>();
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("");
+        stringList.add("分撒发沙发沙发沙发沙发舒服撒路口监控萨福骄傲上飞机啊死哦发放");
+        return stringList;
+    }
+
+
+    public String getDeviceName() {
+        return deviceName;
+    }
+
+    public void setDeviceName(String deviceName) {
+        this.deviceName = deviceName;
+    }
+
+    public String getDeviceCode() {
+        return deviceCode;
+    }
+
+    public void setDeviceCode(String deviceCode) {
+        this.deviceCode = deviceCode;
+    }
+
+    public String getRepairNumber() {
+        return repairNumber;
+    }
+
+    public void setRepairNumber(String repairNumber) {
+        this.repairNumber = repairNumber;
+    }
+
+    public String getReportDate() {
+        return getDate(reportDate);
+    }
+
+    public void setReportDate(String reportDate) {
+        this.reportDate = reportDate;
+    }
+
+
+    public String getRepairDate() {
+        return getDate(repairDate);
+    }
+
+    public void setRepairDate(String repairDate) {
+        this.repairDate = repairDate;
+    }
+
+    public String getTroubleDesp() {
+        return troubleDesp;
+    }
+
+    public void setTroubleDesp(String troubleDesp) {
+        this.troubleDesp = troubleDesp;
+    }
+
+    public String getRepairDesp() {
+        return repairDesp;
+    }
+
+    public void setRepairDesp(String repairDesp) {
+        this.repairDesp = repairDesp;
+    }
+
+    public String getRepairState() {
+        return repairState;
+    }
+
+    public void setRepairState(String repairState) {
+        try {
+            int state
+                    =Integer.valueOf(repairState);
+            switch (state)
+            {
+                case 1:
+                    repairState="待派单";
+                    break;
+                case 2:
+                    repairState="待维修";
+                    break;
+                case 3:
+                    repairState="在维修";
+                    break;
+                case 4:
+                    repairState="已维修待验证";
+                    break;
+                case 5:
+                    repairState="已验证";
+                    break;
+            }
+        } catch (NumberFormatException e) {
+            e.printStackTrace();
+        } finally {
+            this.repairState = repairState;
+        }
+    }
+    public String getReportPersonnel() {
+        return reportPersonnel;
+    }
+
+    public void setReportPersonnel(String reportPersonnel) {
+        this.reportPersonnel = reportPersonnel;
+    }
+
+    public String getDispatchPersonnel() {
+        return dispatchPersonnel;
+    }
+
+    public void setDispatchPersonnel(String dispatchPersonnel) {
+        this.dispatchPersonnel = dispatchPersonnel;
+    }
+
+    public String getConfirmPersonnel() {
+        return confirmPersonnel;
+    }
+
+    public void setConfirmPersonnel(String confirmPersonnel) {
+        this.confirmPersonnel = confirmPersonnel;
+    }
+
+    public String getRepairPersonnel() {
+        return repairPersonnel;
+    }
+
+    public void setRepairPersonnel(String repairPersonnel) {
+        this.repairPersonnel = repairPersonnel;
+    }
+
+    public String getTroubleLevelID() {
+        return troubleLevelID;
+    }
+
+    public void setTroubleLevelID(String troubleLevelID) {
+        this.troubleLevelID = troubleLevelID;
+    }
+
+    public String getTroubleGradeID() {
+        return troubleGradeID;
+    }
+
+    public void setTroubleGradeID(String troubleGradeID) {
+        this.troubleGradeID = troubleGradeID;
+    }
+
+    public float getEvaluateStar() {
+        return evaluateStar;
+    }
+
+    public void setEvaluateStar(float evaluateStar) {
+        this.evaluateStar = evaluateStar;
+    }
+
+    public String getEvaluateDetail() {
+        return evaluateDetail;
+    }
+
+    public void setEvaluateDetail(String evaluateDetail) {
+        this.evaluateDetail = evaluateDetail;
+    }
+
+    public String getDate(String date) {
+        if(date==null)
+            return "";
+        int index=date.length();
+        if(date.lastIndexOf(".")!=-1)
+            index=date.lastIndexOf(".");
+        return date.substring(0,index);
+    }
+
+    public String getDispatchDate() {
+        return getDate(dispatchDate);
+    }
+
+    public void setDispatchDate(String dispatchDate) {
+        this.dispatchDate = dispatchDate;
+    }
+
+    public String getConfirmDate() {
+        return getDate(confirmDate);
+    }
+
+    public void setConfirmDate(String confirmDate) {
+        this.confirmDate = confirmDate;
+    }
+
+    public String getRepairName() {
+        return repairName;
+    }
+
+    public void setRepairName(String repairName) {
+        this.repairName = repairName;
+    }
+
+    public String getReportName() {
+        return reportName;
+    }
+
+    public void setReportName(String reportName) {
+        this.reportName = reportName;
+    }
+
+    public String getConfirmName() {
+        return confirmName;
+    }
+
+    public void setConfirmName(String confirmName) {
+        this.confirmName = confirmName;
+    }
+
+    public String getDispatchName() {
+        return dispatchName;
+    }
+
+    public void setDispatchName(String dispatchName) {
+        this.dispatchName = dispatchName;
+    }
+}
Index: app/src/main/java/com/furja/overall/ui/qc/InspectHistoryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/qc/InspectHistoryFragment.java	(date 1577003403319)
+++ app/src/main/java/com/furja/overall/ui/qc/InspectHistoryFragment.java	(date 1577003403319)
@@ -0,0 +1,97 @@
+package com.furja.overall.ui.qc;
+
+import android.accounts.NetworkErrorException;
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.chad.library.adapter.base.BaseQuickAdapter;
+import com.chad.library.adapter.base.BaseViewHolder;
+import com.furja.common.BaseFragment;
+import com.furja.common.WrapLinearLayoutManager;
+import com.furja.overall.R;
+import com.furja.overall.beans.InspectHistoryLog;
+import com.furja.utils.RetrofitBuilder;
+import com.furja.utils.RetrofitHelper;
+import com.furja.utils.RetryWhenUtils;
+import com.scwang.smartrefresh.header.MaterialHeader;
+import com.scwang.smartrefresh.layout.SmartRefreshLayout;
+
+import org.json.JSONException;
+
+import io.reactivex.android.schedulers.AndroidSchedulers;
+import io.reactivex.schedulers.Schedulers;
+import io.sentry.Sentry;
+
+import static com.furja.utils.Constants.INTERNET_ABNORMAL;
+import static com.furja.utils.Constants.SERVER_ABNORMAL;
+import static com.furja.utils.Constants.VERTX_TEST_URL;
+import static com.furja.utils.Constants.getVertxUrl;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+import static com.scwang.smartrefresh.layout.constant.RefreshState.Refreshing;
+
+public class InspectHistoryFragment extends BaseFragment {
+    RecyclerView recyclerView;
+    SmartRefreshLayout refreshLayout;
+    InspectHistoryAdapter historyAdapter;
+    public View onCreateView(@NonNull LayoutInflater inflater,
+                             ViewGroup container, Bundle savedInstanceState) {
+        View root = inflater.inflate(R.layout.fragment_inspecthistory, container, false);
+        recyclerView=root.findViewById(R.id.recycler_view);
+        refreshLayout=root.findViewById(R.id.refresh_recycler);
+        recyclerView.setLayoutManager(WrapLinearLayoutManager.wrap(mContext));
+        historyAdapter =new InspectHistoryAdapter(R.layout.layout_inspecthistory_item);
+        historyAdapter.bindToRecyclerView(recyclerView);
+        refreshLayout.setRefreshHeader(new MaterialHeader(mContext).setShowBezierWave(false));
+        refreshLayout.setOnRefreshListener(refreshlayout->{
+            acquireInspectHistory();
+        });
+        historyAdapter.setEmptyView(R.layout.loading_empty_view,recyclerView);
+        acquireInspectHistory();
+        return root;
+    }
+
+    private void acquireInspectHistory() {
+        RetrofitHelper helper= RetrofitBuilder.getHelperByUrl(VERTX_TEST_URL);
+        helper.getInspectHistory()
+                .subscribeOn(Schedulers.io())
+                .retryWhen(RetryWhenUtils.create())
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(response->{
+                    if(response.getCode()>0)
+                        historyAdapter.setNewData(response.getResult());
+                    else
+                        historyAdapter.setEmptyView(R.layout.nodata_empty_view,recyclerView);
+                    if(refreshLayout.getState()==Refreshing);
+                        refreshLayout.finishRefresh();
+                },error->{
+                    if(error instanceof JSONException)
+                        showToast(SERVER_ABNORMAL);
+                    else {
+                        showToast(INTERNET_ABNORMAL);
+                        Sentry.capture(error);
+                        error.printStackTrace();
+                    }
+                    if(refreshLayout.getState()==Refreshing)
+                        refreshLayout.finishRefresh();
+                    historyAdapter.setEmptyView(R.layout.empty_offline_layout,recyclerView);
+                });
+    }
+
+
+    public static class InspectHistoryAdapter extends BaseQuickAdapter<InspectHistoryLog, BaseViewHolder>{
+
+        public InspectHistoryAdapter(int layoutResId) {
+            super(layoutResId);
+        }
+
+        @Override
+        protected void convert(@NonNull BaseViewHolder helper, InspectHistoryLog item) {
+
+        }
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/MaintainPlan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/MaintainPlan.java	(date 1576907237685)
+++ app/src/main/java/com/furja/devicemanager/beans/MaintainPlan.java	(date 1576907237685)
@@ -0,0 +1,275 @@
+package com.furja.devicemanager.beans;
+
+import android.text.TextUtils;
+
+import com.furja.devicemanager.utils.Utils;
+
+import java.util.Calendar;
+import java.util.Date;
+
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_INTIME;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NEEDCHECK;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NEEDRECORD;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NOTPASSCHECK;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_OVER;
+import static com.furja.devicemanager.utils.Utils.isSameMonth;
+
+/**
+ * 保养计划
+ */
+public class MaintainPlan {
+    private String FID;
+    private String FMaintainName;
+    private String FMaintainType;
+    private String FMaintainPeriod;
+    private String FPlanBeginDate;
+    private String FPlanEndDate;
+    private String FLastMaintainDate;
+    private String FNextMaintainDate;
+    private int FDeviceID;
+    private int maintainType;
+    private String FBillID;
+    private int FMaintainID;
+    private String FBillStatus;
+    private String FMaintainNumber;
+    private String FDeviceName;
+    private String FDeptName;
+    private String FDeviceModel;
+    private String FDeviceNumber;
+    private String FRecordEndDate;  //该计划最后一个尚未审核的保养记录得FEndDate
+    private int FPlanState;         //标识计划的状态,过期还是保养未审核
+    private int FRecordHasCheck;    //最后一个没有通过审核,若该值为1则是被打回,为0则是没有审核
+    public String getFID() {
+        return FID;
+    }
+
+    public void setFID(String FID) {
+        this.FID = FID;
+    }
+
+    public String getFMaintainName() {
+        return FMaintainName;
+    }
+
+    public void setFMaintainName(String FMaintainName) {
+        this.FMaintainName = FMaintainName;
+    }
+
+    public String getFMaintainType() {
+        return FMaintainType;
+    }
+
+    public void setFMaintainType(String FMaintainType) {
+        this.FMaintainType = FMaintainType;
+    }
+
+    public String getFMaintainPeriod() {
+        return FMaintainPeriod;
+    }
+
+    public void setFMaintainPeriod(String FMaintainPeriod) {
+        this.FMaintainPeriod = FMaintainPeriod;
+    }
+
+    public String getFPlanBeginDate() {
+        return FPlanBeginDate;
+    }
+
+    public void setFPlanBeginDate(String FPlanBeginDate) {
+        this.FPlanBeginDate = FPlanBeginDate;
+    }
+
+    public String getFPlanEndDate() {
+        return FPlanEndDate;
+    }
+
+    public void setFPlanEndDate(String FPlanEndDate) {
+        this.FPlanEndDate = FPlanEndDate;
+    }
+
+    public String getFLastMaintainDate() {
+        return FLastMaintainDate;
+    }
+
+    public void setFLastMaintainDate(String FLastMaintainDate) {
+        this.FLastMaintainDate = FLastMaintainDate;
+    }
+
+    public String getFNextMaintainDate() {
+        return FNextMaintainDate;
+    }
+
+    public void setFNextMaintainDate(String FNextMaintainDate) {
+        this.FNextMaintainDate = FNextMaintainDate;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public int getMaintainType() {
+        return maintainType;
+    }
+
+    public void setMaintainType(int maintainType) {
+        this.maintainType = maintainType;
+    }
+
+    public String getFBillID() {
+        return FBillID;
+    }
+
+    public void setFBillID(String FBillID) {
+        this.FBillID = FBillID;
+    }
+
+    public int getFMaintainID() {
+        return FMaintainID;
+    }
+
+    public void setFMaintainID(int FMaintainID) {
+        this.FMaintainID = FMaintainID;
+    }
+
+    public String getFBillStatus() {
+        return FBillStatus;
+    }
+
+    public void setFBillStatus(String FBillStatus) {
+        this.FBillStatus = FBillStatus;
+    }
+
+    public String getFMaintainNumber() {
+        return FMaintainNumber;
+    }
+
+    public void setFMaintainNumber(String FMaintainNumber) {
+        this.FMaintainNumber = FMaintainNumber;
+    }
+
+    public String getFDeviceName() {
+        return FDeviceName;
+    }
+
+    public void setFDeviceName(String FDeviceName) {
+        this.FDeviceName = FDeviceName;
+    }
+
+    public String getFDeptName() {
+        return FDeptName;
+    }
+
+    public void setFDeptName(String FDeptName) {
+        this.FDeptName = FDeptName;
+    }
+
+    public String[] toStringArray()
+    {
+        return new String[]
+                {getFDeviceName(),getFDeviceNumber(),getFDeviceModel(),getFDeptName(),FMaintainPeriod,getFormatDate(FPlanBeginDate)
+                        ,getFormatDate(FPlanEndDate),getFormatDate(FLastMaintainDate),
+                        getFormatDate(FNextMaintainDate),Utils.getPlanState(getFPlanState())};
+    }
+
+    public String getFormatDate(String date)
+    {
+        if(TextUtils.isEmpty(date))
+            return "";
+        else
+        {
+            int key=date.indexOf(" ");
+            return date.substring(0,key);
+        }
+    }
+
+    public String getFDeviceModel() {
+        return FDeviceModel;
+    }
+
+    public void setFDeviceModel(String FDeviceModel) {
+        this.FDeviceModel = FDeviceModel;
+    }
+
+    public String getFDeviceNumber() {
+        return FDeviceNumber;
+    }
+
+    public void setFDeviceNumber(String FDeviceNumber) {
+        this.FDeviceNumber = FDeviceNumber;
+    }
+
+    public String getFRecordEndDate() {
+        return FRecordEndDate;
+    }
+
+    public void setFRecordEndDate(String FRecordEndDate) {
+        this.FRecordEndDate = FRecordEndDate;
+    }
+
+    public int getFPlanState()
+    {
+        Date recordEndDate= Utils.parseDate(getFRecordEndDate());
+        Date nextMaintainDate= Utils.parseDate(FNextMaintainDate);
+        Calendar calendar=Calendar.getInstance();
+        if(isAccordant(nextMaintainDate))
+        {
+            if(!isSameMonth(calendar,recordEndDate))
+                return STATE_PLAN_NEEDRECORD;
+            else
+                if(calendar.getTime()
+                        .after(recordEndDate))
+                {
+                    if(getFRecordHasCheck()<0)
+                        return STATE_PLAN_NEEDCHECK;    //有符合条件的保养记录但未审核
+                    else
+                        if(getFRecordHasCheck()==0)
+                            return STATE_PLAN_NOTPASSCHECK;
+                        else
+                            return STATE_PLAN_INTIME;
+                }
+                else
+                    return STATE_PLAN_NEEDRECORD;
+        }
+        else if(!Utils.getYMD_Date(calendar)
+                .after(nextMaintainDate))//当前日期在下次保养日期之前且不在一个月
+            return STATE_PLAN_INTIME;
+            else
+                return STATE_PLAN_OVER;
+    }
+
+    /**
+     * 将日期与现在的时间相比较
+     * 需满足->1:是否在同一个月 2:日期是否在现在的日期后面
+     * @param argu
+     * @return
+     */
+    public boolean isAccordant(Date argu)
+    {
+        Calendar calendar=Calendar.getInstance();
+        if(argu==null)
+            return true;
+        if(!Utils.getYMD_Date(calendar).after(argu)
+                &&isSameMonth(calendar,argu))
+            return true;
+        return false;
+    }
+
+
+
+    public int getFRecordHasCheck() {
+        return FRecordHasCheck;
+    }
+
+    public void setFRecordHasCheck(int FRecordHasCheck) {
+        this.FRecordHasCheck = FRecordHasCheck;
+    }
+
+
+    public void setFPlanState(int FPlanState) {
+        this.FPlanState = FPlanState;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/PlanFilter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/PlanFilter.java	(date 1527301440000)
+++ app/src/main/java/com/furja/devicemanager/beans/PlanFilter.java	(date 1527301440000)
@@ -0,0 +1,104 @@
+package com.furja.devicemanager.beans;
+
+import android.text.TextUtils;
+
+/**
+ * 计划筛选
+ */
+
+public class PlanFilter {
+    private String deviceName;
+    private String settingPlace;
+    private String deviceNumber;
+    private int planState=0;
+    /**
+     * 匹配MaintainPlan
+     * @param plan
+     * @return
+     */
+    public boolean isMatch(MaintainPlan plan)
+    {
+        if(plan==null)
+            return false;
+        if(!TextUtils.isEmpty(deviceName))
+        {
+            if(!deviceName.equals(plan.getFDeviceName()))
+                return false;
+        }
+        if(!TextUtils.isEmpty(deviceNumber))
+        {
+            if(!deviceNumber.equals(plan.getFDeviceModel()))
+                return false;
+        }
+        if(!TextUtils.isEmpty(settingPlace))
+        {
+            if(!settingPlace.equals(plan.getFDeptName()))
+                return false;
+        }
+        if(planState!=0)
+        {
+            if(planState!=plan.getFPlanState())
+                return false;
+        }
+        return true;
+    }
+
+    /**
+     * 匹配InspectPlan
+     * @param plan
+     * @return
+     */
+    public boolean isMatch(InspectPlan plan)
+    {
+        if(plan==null)
+            return false;
+        if(!TextUtils.isEmpty(deviceName))
+        {
+            if(!plan.getFDeviceName().contains(deviceName))
+                return false;
+        }
+        if(!TextUtils.isEmpty(deviceNumber))
+        {
+            if(!plan.getFDeviceNumber().contains(deviceNumber))
+                return false;
+        }
+        if(!TextUtils.isEmpty(settingPlace))
+        {
+            if(!settingPlace.equals(plan.getFDeptName()))
+                return false;
+        }
+        return true;
+    }
+
+    public String getDeviceName() {
+        return deviceName;
+    }
+
+    public void setDeviceName(String deviceName) {
+        this.deviceName = deviceName;
+    }
+
+    public String getSettingPlace() {
+        return settingPlace;
+    }
+
+    public void setSettingPlace(String settingPlace) {
+        this.settingPlace = settingPlace;
+    }
+
+    public String getDeviceNumber() {
+        return deviceNumber;
+    }
+
+    public void setDeviceNumber(String deviceNumber) {
+        this.deviceNumber = deviceNumber;
+    }
+
+    public int getPlanState() {
+        return planState;
+    }
+
+    public void setPlanState(int planState) {
+        this.planState = planState;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/SparePartsItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/SparePartsItem.java	(date 1522119862000)
+++ app/src/main/java/com/furja/devicemanager/beans/SparePartsItem.java	(date 1522119862000)
@@ -0,0 +1,127 @@
+package com.furja.devicemanager.beans;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 备件耗材Item的实例
+ */
+
+public class SparePartsItem {
+    private String partsCode;           //备件代码
+    private String partsName;           //备件名称
+    private String normModel;           //规格型号
+    private String measureUnit;         //计量单位
+    private String standardUse;         //标准用量
+    private String actualUse;           //实际用量
+    private String baseMeasureUnit;     //基本计量单位
+    private String baseStandardUse;     //基本单位标准用量
+    private String baseActualUse;       //基本单位实际用量
+    private String partsRemark;         //备件备注
+
+    public List<String> toStringList()
+    {
+        List<String> list
+                =new ArrayList<String>();
+        list.add(partsCode);
+        list.add(partsName);
+        list.add(normModel);
+        list.add(standardUse);
+        list.add(baseMeasureUnit);
+        list.add(baseStandardUse);
+        return list;
+    }
+
+    public String getPartsCode() {
+        return partsCode;
+    }
+
+    public void setPartsCode(String partsCode) {
+        this.partsCode = partsCode;
+    }
+
+    public String getPartsName() {
+        return partsName;
+    }
+
+    public void setPartsName(String partsName) {
+        this.partsName = partsName;
+    }
+
+    public String getNormModel() {
+        return normModel;
+    }
+
+    public void setNormModel(String normModel) {
+        this.normModel = normModel;
+    }
+
+    public String getMeasureUnit() {
+        return measureUnit;
+    }
+
+    public void setMeasureUnit(String measureUnit) {
+        this.measureUnit = measureUnit;
+    }
+
+    public String getStandardUse() {
+        return standardUse;
+    }
+
+    public void setStandardUse(String standardUse) {
+        this.standardUse = standardUse;
+    }
+
+    public String getActualUse() {
+        return actualUse;
+    }
+
+    public void setActualUse(String actualUse) {
+        this.actualUse = actualUse;
+    }
+
+    public String getBaseMeasureUnit() {
+        return baseMeasureUnit;
+    }
+
+    public void setBaseMeasureUnit(String baseMeasureUnit) {
+        this.baseMeasureUnit = baseMeasureUnit;
+    }
+
+    public String getBaseStandardUse() {
+        return baseStandardUse;
+    }
+
+    public void setBaseStandardUse(String baseStandardUse) {
+        this.baseStandardUse = baseStandardUse;
+    }
+
+    public String getBaseActualUse() {
+        return baseActualUse;
+    }
+
+    public void setBaseActualUse(String baseActualUse) {
+        this.baseActualUse = baseActualUse;
+    }
+
+    public String getPartsRemark() {
+        return partsRemark;
+    }
+
+    public void setPartsRemark(String partsRemark) {
+        this.partsRemark = partsRemark;
+    }
+
+    public void setDefaultValues() {
+        setActualUse("1");
+        setMeasureUnit("12");
+        setBaseActualUse("34");
+        setBaseMeasureUnit("基本的");
+        setBaseStandardUse("4");
+        setNormModel("342");
+        setPartsCode("2");
+        setPartsName("43");
+        setStandardUse("3");
+        setPartsRemark("2");
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/BasePlanItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/BasePlanItem.java	(date 1526603774000)
+++ app/src/main/java/com/furja/devicemanager/beans/BasePlanItem.java	(date 1526603774000)
@@ -0,0 +1,11 @@
+package com.furja.devicemanager.beans;
+
+/**
+ * 计划的基类
+ */
+
+public class BasePlanItem {
+
+
+
+}
Index: app/src/main/java/com/furja/devicemanager/beans/SpotCheckItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/SpotCheckItem.java	(date 1517561526000)
+++ app/src/main/java/com/furja/devicemanager/beans/SpotCheckItem.java	(date 1517561526000)
@@ -0,0 +1,132 @@
+package com.furja.devicemanager.beans;
+
+import com.chad.library.adapter.base.entity.MultiItemEntity;
+
+
+/**
+ * 注塑车间点检条目
+ */
+public class SpotCheckItem implements MultiItemEntity {
+    String check_Title;
+    String check_TitleId;     //检查内容的ID
+    boolean have;
+    String temperature=""; //温度
+    String coolTime="";    //冷却时间
+    String cycleTime="";   //周期时间
+    String signTime ="";           //首次样板签板时间
+    boolean isChecked;   //是否已经扫码且填写必填项,如温度冷却周期时间等
+    String remark_content="";   //备注,默认为空
+    int itemType;
+    public static final int TYPE_ONLYHAVE=1;    //仅需选择是否
+    public static final int TYPE_TIMEANDTEMP=2; //有温度和时间的记录
+    public static final int TYPE_TEMPERATURE=3; //温度记录
+    public static final int TYPE_LOG_DATE=4;//首次样板签板时间记录
+    public SpotCheckItem(String check_Title, int itemType,int index) {
+        check_TitleId=index+"";
+        this.itemType=itemType;
+        this.check_Title = check_Title;
+        this.have = false;
+        this.isChecked=false;
+    }
+
+
+    public String getCheck_TitleId() {
+        return check_TitleId;
+    }
+
+    public void setCheck_TitleId(String check_TitleId) {
+        this.check_TitleId = check_TitleId;
+    }
+
+
+    public String getRemark_content() {
+        return remark_content;
+    }
+
+    public void setRemark_content(String remark_content) {
+        this.remark_content = remark_content;
+    }
+    @Override
+    public int getItemType() {
+        return itemType;
+    }
+
+
+    public String getCheck_Title() {
+        return check_Title;
+    }
+
+    public void setCheck_Title(String check_Title) {
+        this.check_Title = check_Title;
+    }
+
+    public boolean isHave() {
+        return have;
+    }
+
+    public void setHave(boolean have) {
+        this.have = have;
+    }
+
+    public String getTemperature() {
+        return temperature;
+    }
+
+    public void setTemperature(String temperature) {
+        this.temperature = temperature;
+    }
+
+    public String getCoolTime() {
+        return coolTime;
+    }
+
+    public void setCoolTime(String coolTime) {
+        this.coolTime = coolTime;
+    }
+
+    public String getCycleTime() {
+        return cycleTime;
+    }
+
+    public void setCycleTime(String cycleTime) {
+        this.cycleTime = cycleTime;
+    }
+
+    public void setItemType(int itemType) {
+        this.itemType = itemType;
+    }
+
+
+    public boolean getHave() {
+        return this.have;
+    }
+
+    public boolean isChecked() {
+        return isChecked;
+    }
+
+    public void setChecked(boolean checked) {
+        isChecked = checked;
+    }
+
+    public String getSignTime() {
+        return signTime;
+    }
+
+    public void setSignTime(String signTime) {
+        this.signTime = signTime;
+    }
+
+    @Override
+    public String toString() {
+        return "SpotCheckItem{" +
+                "check_Title='" + check_Title + '\'' +
+                ", have=" + have +
+                ", temperature='" + temperature + '\'' +
+                ", coolTime='" + coolTime + '\'' +
+                ", cycleTime='" + cycleTime + '\'' +
+                ", signTime='" + signTime + '\'' +
+                ", remark_content='" + remark_content + '\'' +
+                '}';
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/DeviceState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/DeviceState.java	(date 1513840042000)
+++ app/src/main/java/com/furja/devicemanager/beans/DeviceState.java	(date 1513840042000)
@@ -0,0 +1,12 @@
+package com.furja.devicemanager.beans;
+
+/**
+ * 设备状态
+ */
+
+public interface DeviceState {
+    String getLastState();
+    String getFinishState();
+    String getCurrState();
+    String[] getStringArray();
+}
Index: app/src/main/java/com/furja/devicemanager/beans/RepairProjectItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/RepairProjectItem.java	(date 1576066113938)
+++ app/src/main/java/com/furja/devicemanager/beans/RepairProjectItem.java	(date 1576066113938)
@@ -0,0 +1,221 @@
+package com.furja.devicemanager.beans;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ *维修项目实例
+ */
+public class RepairProjectItem {
+    private int FID;
+    private int FIndex;
+    private String FProjectName;
+    private String FWorkDescription;
+    private String FRepairRequire;
+    private int FDesValueType;   //11606是文本
+    private String FDesValue;   //目标值
+    private String FUpperDesValue;
+    private String FLowerDesValue;
+    private String chargeEmp_dspName;
+    private String checkEmp_dspName;
+    private int FChargeEmp;
+    private int FCheckEmp;
+    private String FFNote;
+    private String FFactValue; //实际值
+    private String FCheckContent;   //检查内容
+    public RepairProjectItem()
+    {
+        setFProjectName("");
+        setFWorkDescription("");
+        setFRepairRequire("");
+        setFDesValue("");
+        setFUpperDesValue("");
+        setFLowerDesValue("");
+        setCheckEmp_dspName("");
+        setChargeEmp_dspName("");
+        setFFNote("");
+        setFID(0);
+        setFCheckContent("");
+    }
+
+    public List<String> toStringList()
+    {
+        List<String> stringList
+                =new ArrayList<>();
+        stringList.add(getFProjectName());
+        stringList.add(getFWorkDescription());
+        stringList.add(getFRepairRequire());
+        stringList.add(getFDesValue());
+        stringList.add(getFUpperDesValue());
+        stringList.add(getFLowerDesValue());
+        stringList.add(getFFNote());
+        return stringList;
+    }
+
+    public void setDetailItems(List<DetailItem> detailItems)
+    {
+        setFProjectName(detailItems.get(0).getDetail());
+        setFWorkDescription(detailItems.get(1).getDetail());
+        setFRepairRequire(detailItems.get(2).getDetail());
+        setFDesValue(detailItems.get(3).getDetail());
+        setFUpperDesValue(detailItems.get(4).getDetail());
+        setFLowerDesValue(detailItems.get(5).getDetail());
+        setFFNote(detailItems.get(6).getDetail());
+        if(detailItems.size()>7)
+            setFFactValue(detailItems.get(7).getDetail());
+        else
+            setFFactValue("");
+        setFCheckContent("");
+    }
+
+    @Override
+    public String toString() {
+        return "RepairProjectItem{" +
+                "FID=" + FID +
+                ", FIndex=" + FIndex +
+                ", FProjectName='" + FProjectName + '\'' +
+                ", FWorkDescription='" + FWorkDescription + '\'' +
+                ", FRepairRequire='" + FRepairRequire + '\'' +
+                ", FDesValueType='" + FDesValueType + '\'' +
+                ", FDesValue='" + FDesValue + '\'' +
+                ", FUpperDesValue='" + FUpperDesValue + '\'' +
+                ", FLowerDesValue='" + FLowerDesValue + '\'' +
+                ", chargeEmp_dspName='" + chargeEmp_dspName + '\'' +
+                ", checkEmp_dspName='" + checkEmp_dspName + '\'' +
+                ", FChargeEmp=" + FChargeEmp +
+                ", FCheckEmp=" + FCheckEmp +
+                ", FFNote='" + FFNote + '\'' +
+                ", FFactValue='" + FFactValue + '\'' +
+                '}';
+    }
+
+
+
+    public int getFID() {
+        return FID;
+    }
+
+    public void setFID(int FID) {
+        this.FID = FID;
+    }
+
+    public int getFIndex() {
+        return FIndex;
+    }
+
+    public void setFIndex(int FIndex) {
+        this.FIndex = FIndex;
+    }
+
+    public String getFProjectName() {
+        return FProjectName;
+    }
+
+    public void setFProjectName(String FProjectName) {
+        this.FProjectName = FProjectName;
+    }
+
+    public String getFWorkDescription() {
+        return FWorkDescription;
+    }
+
+    public void setFWorkDescription(String FWorkDescription) {
+        this.FWorkDescription = FWorkDescription;
+    }
+
+    public String getFRepairRequire() {
+        return FRepairRequire;
+    }
+
+    public void setFRepairRequire(String FRepairRequire) {
+        this.FRepairRequire = FRepairRequire;
+    }
+
+    public int getFDesValueType() {
+        return FDesValueType;
+    }
+
+    public void setFDesValueType(int FDesValueType) {
+        this.FDesValueType = FDesValueType;
+    }
+
+    public String getFDesValue() {
+        return FDesValue;
+    }
+
+    public void setFDesValue(String FDesValue) {
+        this.FDesValue = FDesValue;
+    }
+
+    public String getFUpperDesValue() {
+        return FUpperDesValue;
+    }
+
+    public void setFUpperDesValue(String FUpperDesValue) {
+        this.FUpperDesValue = FUpperDesValue;
+    }
+
+    public String getFLowerDesValue() {
+        return FLowerDesValue;
+    }
+
+    public void setFLowerDesValue(String FLowerDesValue) {
+        this.FLowerDesValue = FLowerDesValue;
+    }
+
+    public String getChargeEmp_dspName() {
+        return chargeEmp_dspName;
+    }
+
+    public void setChargeEmp_dspName(String chargeEmp_dspName) {
+        this.chargeEmp_dspName = chargeEmp_dspName;
+    }
+
+    public String getCheckEmp_dspName() {
+        return checkEmp_dspName;
+    }
+
+    public void setCheckEmp_dspName(String checkEmp_dspName) {
+        this.checkEmp_dspName = checkEmp_dspName;
+    }
+
+    public int getFChargeEmp() {
+        return FChargeEmp;
+    }
+
+    public void setFChargeEmp(int FChargeEmp) {
+        this.FChargeEmp = FChargeEmp;
+    }
+
+    public int getFCheckEmp() {
+        return FCheckEmp;
+    }
+
+    public void setFCheckEmp(int FCheckEmp) {
+        this.FCheckEmp = FCheckEmp;
+    }
+
+    public String getFFNote() {
+        return FFNote;
+    }
+
+    public void setFFNote(String FFNote) {
+        this.FFNote = FFNote;
+    }
+
+    public String getFFactValue() {
+        return FFactValue;
+    }
+
+    public void setFFactValue(String FFactValue) {
+        this.FFactValue = FFactValue;
+    }
+
+    public String getFCheckContent() {
+        return FCheckContent;
+    }
+
+    public void setFCheckContent(String FCheckContent) {
+        this.FCheckContent = FCheckContent;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/DetailItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/DetailItem.java	(date 1525744214000)
+++ app/src/main/java/com/furja/devicemanager/beans/DetailItem.java	(date 1525744214000)
@@ -0,0 +1,42 @@
+package com.furja.devicemanager.beans;
+
+import com.chad.library.adapter.base.entity.MultiItemEntity;
+
+/**
+ * 详情条目
+ */
+public class DetailItem implements MultiItemEntity {
+    private String label;
+    private String detail;
+    private int itemType;
+    public static int TYPE_AUTOTEXTVIEW=1;
+    public static int TYPE_EDITTEXT=2;
+    public DetailItem(String label, String detail) {
+        this.label = label;
+        this.detail = detail;
+    }
+
+    public String getLabel() {
+        return label;
+    }
+
+    public String getDetail() {
+        return detail;
+    }
+
+    public void setLabel(String label) {
+        this.label = label;
+    }
+
+    public void setDetail(String detail) {
+        this.detail = detail;
+    }
+
+    public int getItemType() {
+        return itemType;
+    }
+
+    public void setItemType(int itemType) {
+        this.itemType = itemType;
+    }
+}
Index: app/src/main/java/com/furja/overall/ui/OneFragmentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/overall/ui/OneFragmentActivity.java	(date 1576914696115)
+++ app/src/main/java/com/furja/overall/ui/OneFragmentActivity.java	(date 1576914696115)
@@ -0,0 +1,78 @@
+package com.furja.overall.ui;
+
+import android.os.Bundle;
+import android.text.TextUtils;
+import android.widget.TextView;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentTransaction;
+
+import com.furja.common.BaseFragment;
+import com.furja.overall.R;
+import com.furja.overall.ui.qc.InspectHistoryFragment;
+
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+public class OneFragmentActivity extends BaseActivity {
+    BaseFragment tempFragment;
+    TextView text_title;
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_onefragment);
+        text_title = findViewById(R.id.label_appName);
+        Toolbar toolbar = findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        analyseIntent();
+    }
+
+    /**
+     * 根据Intent跳转到不同的Fragment
+     */
+    private void analyseIntent() {
+        String dataString="";
+        if(getIntent()!=null)
+            dataString=getIntent().getDataString();
+        if(TextUtils.isEmpty(dataString)){
+            showToast("来错地方了");
+            finish();
+        }
+        else {
+            int index=dataString.lastIndexOf(".");
+            dataString=dataString.substring(index+1);
+            switch (dataString){
+                case "InspectHistoryFragment":
+                    InspectHistoryFragment historyFragment = new InspectHistoryFragment();
+                    transferFragment(historyFragment);
+                    text_title.setText("质检历史");
+                    break;
+                    default:
+                        showToast("来错地方了");
+                        finish();
+                        break;
+            }
+        }
+    }
+
+    public void transferFragment(BaseFragment to) {
+        FragmentManager fm = getSupportFragmentManager();
+        FragmentTransaction fts = fm.beginTransaction();
+        if(tempFragment!=null) {
+            if(tempFragment==to)
+                return;
+            fts.hide(tempFragment).commit();
+        }
+        this.tempFragment=to;
+        fts = fm.beginTransaction();
+        if(to.isAdded())
+            fts.show(to);
+        else
+            fts.add(R.id.content_frame, to,to.toString());
+        fts.commit();
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/RepairFlow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/RepairFlow.java	(date 1520391908000)
+++ app/src/main/java/com/furja/devicemanager/beans/RepairFlow.java	(date 1520391908000)
@@ -0,0 +1,102 @@
+package com.furja.devicemanager.beans;
+
+import java.util.Date;
+
+/**
+ * 维修验证时评价的实体
+ */
+
+public class RepairFlow {
+    private int itemID;
+    private float evaluateStar;  //评价星级
+    private String evaluateDetail;  //评价详情
+    private String repairFinish;    //true代表维修结束,false代表不行打回去重修
+    private String repairNumber;    //维修单号
+    private String dispatchPersonnel;    //派工人员
+    private String confirmPersonnel;    //验证人员
+    private String assignedPersonnel;   //被派修的人员
+    private Date dispatchDate;    //日期
+    private Date confirmDate;    //验证日期
+
+
+    public int getItemID() {
+        return itemID;
+    }
+
+    public void setItemID(int itemID) {
+        this.itemID = itemID;
+    }
+
+    public float getEvaluateStar() {
+        return evaluateStar;
+    }
+
+    public void setEvaluateStar(float evaluateStar) {
+        this.evaluateStar = evaluateStar;
+    }
+
+    public String getEvaluateDetail() {
+        return evaluateDetail;
+    }
+
+    public void setEvaluateDetail(String evaluateDetail) {
+        this.evaluateDetail = evaluateDetail;
+    }
+
+    public String getRepairFinish() {
+        return repairFinish;
+    }
+
+    public void setRepairFinish(String repairFinish) {
+        this.repairFinish = repairFinish;
+    }
+
+    public String getRepairNumber() {
+        return repairNumber;
+    }
+
+    public void setRepairNumber(String repairNumber) {
+        this.repairNumber = repairNumber;
+    }
+
+    public String getDispatchPersonnel() {
+        return dispatchPersonnel;
+    }
+
+    public void setDispatchPersonnel(String dispatchPersonnel) {
+        this.dispatchPersonnel = dispatchPersonnel;
+    }
+
+    public String getConfirmPersonnel() {
+        return confirmPersonnel;
+    }
+
+    public void setConfirmPersonnel(String confirmPersonnel) {
+        this.confirmPersonnel = confirmPersonnel;
+    }
+
+    public Date getDispatchDate() {
+        return dispatchDate;
+    }
+
+    public void setDispatchDate(Date dispatchDate) {
+        this.dispatchDate = dispatchDate;
+    }
+
+    public Date getConfirmDate() {
+        return confirmDate;
+    }
+
+    public void setConfirmDate(Date confirmDate) {
+        this.confirmDate = confirmDate;
+    }
+
+    public String getAssignedPersonnel() {
+        return assignedPersonnel;
+    }
+
+    public void setAssignedPersonnel(String assignedPersonnel) {
+        this.assignedPersonnel = assignedPersonnel;
+    }
+}
+
Index: app/src/main/res/layout/activity_onefragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_onefragment.xml	(date 1576914207991)
+++ app/src/main/res/layout/activity_onefragment.xml	(date 1576914207991)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <include
+        android:id="@+id/appBar"
+        layout="@layout/layout_bar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintBottom_toTopOf="@+id/content_frame"
+        />
+    <FrameLayout
+        android:id="@+id/content_frame"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layout_constraintVertical_weight="1"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/appBar"
+        app:layout_constraintBottom_toBottomOf="parent" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/furja/devicemanager/beans/SpotCheckState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/SpotCheckState.java	(date 1513840242000)
+++ app/src/main/java/com/furja/devicemanager/beans/SpotCheckState.java	(date 1513840242000)
@@ -0,0 +1,27 @@
+package com.furja.devicemanager.beans;
+
+/**
+ * 点检状态
+ */
+
+public class SpotCheckState implements DeviceState {
+    @Override
+    public String getLastState() {
+        return "待点检";
+    }
+
+    @Override
+    public String getFinishState() {
+        return "已点检";
+    }
+
+    @Override
+    public String getCurrState() {
+        return "点检中";
+    }
+
+    @Override
+    public String[] getStringArray() {
+        return new String[]{getLastState(),getCurrState(),getFinishState()};
+    }
+}
Index: app/src/main/java/com/furja/common/Preferences.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/common/Preferences.java	(date 1576825609857)
+++ app/src/main/java/com/furja/common/Preferences.java	(date 1576825609857)
@@ -0,0 +1,150 @@
+package com.furja.common;
+
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.text.TextUtils;
+
+import com.furja.overall.FurjaApp;
+
+import static com.furja.utils.Constants.TYPE_BADLOG_EMPTY;
+
+
+/**
+ * SharedPreference操作类
+ */
+
+public class Preferences {
+    private static final String KEY_USER = "user";
+    private static final String KEY_PASSWORD = "password";
+    private static final String KEY_SOURSEOFTYPE="sourceOftype";//工作场景
+    private static final String KEY_AUTO_LOGIN="autoLogin"; //是否自动登录
+    private static final String KEY_ALARM_ON="alarm_On";    //是否已经开启闹钟
+    private static final String KEY_MANUAL_SCROLL="manualScroll"; //是否手动登录
+    private static final String KEY_ALARM_INTERVAL="INTERVAL";    //是否已经开启闹钟
+    private static final String KEY_DEVICE_ID="DEVICE_ID";    //是否已经开启闹钟
+    private static Context context;
+    /**
+     * 设置静态Context
+     * @param contex
+     */
+    public static void setContext(Context contex)
+    {
+        context=contex;
+    }
+
+    /**
+     * 获取录入数据的方式,1为ButtonFragment视图
+     * 2为KeyBoard代码录入的Fragment视图
+     * @return
+     */
+    public static int getSourceType() {
+        if(TextUtils.isEmpty(getString(KEY_SOURSEOFTYPE)))
+            return TYPE_BADLOG_EMPTY;  //为空返回-1
+        else
+            return Integer.valueOf(getString(KEY_SOURSEOFTYPE));
+    }
+
+    public static String getDeviceID(){
+        return getString(KEY_DEVICE_ID);
+    }
+
+    public static void saveDeviceID(String deviceID){
+        saveString(KEY_DEVICE_ID,deviceID);
+    }
+
+    public static void saveSourceType(String type) {
+        saveString(KEY_SOURSEOFTYPE,type);
+    }
+
+    public static String getUsername() {
+        return getString(KEY_USER);
+    }
+
+    public static String getPassword() {
+        return getString(KEY_PASSWORD);
+    }
+
+    public static boolean isAutoLogin()
+    {
+        return Boolean.parseBoolean(getString(KEY_AUTO_LOGIN));
+    }
+
+    public static void saveAutoLogin(boolean isAutoLogined)
+    {
+        saveString(KEY_AUTO_LOGIN,isAutoLogined+"");
+    }
+
+    public static boolean isManualScroll()
+    {
+        return Boolean.parseBoolean(getString(KEY_MANUAL_SCROLL));
+    }
+
+    public static void saveManualScroll(boolean isManualScroll) {
+        saveString(KEY_MANUAL_SCROLL,isManualScroll+"");
+    }
+    public static int getAlarmInterval()
+    {
+        try{
+            int i=Integer.valueOf(getString(KEY_ALARM_INTERVAL));
+            return i;
+        }catch (Exception e){
+            return 50;
+        }
+    }
+
+    public static void saveAlarmInterval(String alarmInterval) {
+        saveString(KEY_ALARM_INTERVAL,alarmInterval);
+    }
+    public static boolean isAlarmOn()
+    {
+        return Boolean.parseBoolean(getString(KEY_ALARM_ON));
+    }
+
+    public static void saveAlarmOn(boolean isAlarmOn)
+    {
+        saveString(KEY_ALARM_ON,isAlarmOn+"");
+    }
+
+    private static void saveUsername(String user) {
+        saveString(KEY_USER,user);
+    }
+    /**
+     *保存密码
+     */
+    private static void saveUserPassword(String pass) {
+        saveString(KEY_PASSWORD,pass);
+    }
+
+
+
+    public static void saveString(String key, String value) {
+        SharedPreferences.Editor editor = getSharedPreferences().edit();
+        editor.putString(key, value);
+        editor.commit();
+    }
+
+    private static String getString(String key) {
+        return getSharedPreferences().getString(key, null);
+    }
+
+    public static SharedPreferences getSharedPreferences() {
+        if(context==null)
+            context= FurjaApp.getContext();
+        return context.getSharedPreferences("OverallManager", Context.MODE_PRIVATE);
+    }
+
+    public static void clear() {
+        SharedPreferences.Editor editor = getSharedPreferences().edit();
+        editor.clear();
+        editor.commit();
+    }
+
+    public static void saveUser(User user) {
+        saveUsername(user.getUserName());
+        saveUserPassword(user.getPassword());
+    }
+
+    public static void clearUser() {
+
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/beans/RepairOrderItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/RepairOrderItem.java	(date 1527077858000)
+++ app/src/main/java/com/furja/devicemanager/beans/RepairOrderItem.java	(date 1527077858000)
@@ -0,0 +1,323 @@
+package com.furja.devicemanager.beans;
+
+import com.furja.devicemanager.utils.Constants;
+
+/**
+ * 维修单列表的子元素,需要添加对应的机修人员
+ */
+public class RepairOrderItem {
+    private String FDeviceName;         //设备名称
+    private String FRepairContent;      //维修内容
+    private String FSettingPlace;       //设备部门
+    private String FBillDate;          //记录时间
+    private String FRepairWOBillID;      //维修工单单据BillID
+    private String FRepairGrade;         //维修类别
+    private int    FRepairState;         //维修状态
+    private String FRequire;             //维修要求
+    private double FPlanStopManHour;
+    private double FPlanRepairManHour;
+    private double FPlanRepairFee;      //计划维修费用
+    private int FRecordStatus;          //维修记录状态
+    private int FRepairWOID;            //维修工单ID
+    private int FBillerID;              //报修人员ID
+    private int FRepairBillerID;         //维修人员ID
+    private double FStopManhour;
+    private int FRepairCheckResult;
+    private double FRepairFee;
+    private double FRepairManhour;
+    private int FCheckStatus;
+    private String FRepairPerson;       //维修人
+    private String FApplicant;          //报修人名称
+    private String FRepairCheckNote;    //维修验收备注
+    private int FRepairCatg;            //维修类别
+    private int FDeviceID;              //设备ID
+    private int FRepairSubcntr;         //维修单位
+    private int FTimeUnit;              //时间单位
+    private int FEntrust;
+    private int FCurrency;
+    private String FDeviceNumber;
+    private String FRepairRecord;
+    public RepairOrderItem()
+    {
+
+    }
+
+    public String getFDeviceName() {
+        return FDeviceName;
+    }
+
+    public void setFDeviceName(String FDeviceName) {
+        this.FDeviceName = FDeviceName;
+    }
+
+    public String getFRepairContent() {
+        return FRepairContent;
+    }
+
+    public void setFRepairContent(String FRepairContent) {
+        this.FRepairContent = FRepairContent;
+    }
+
+    public String getFSettingPlace() {
+        return FSettingPlace;
+    }
+
+    public void setFSettingPlace(String FSettingPlace) {
+        this.FSettingPlace = FSettingPlace;
+    }
+
+    public void setFBillDate(String FBillDate) {
+        this.FBillDate = FBillDate;
+    }
+
+    public String getFRepairWOBillID() {
+        return FRepairWOBillID;
+    }
+
+    public void setFRepairWOBillID(String FRepairWOBillID) {
+        this.FRepairWOBillID = FRepairWOBillID;
+    }
+
+    public String getFRepairGrade() {
+        return FRepairGrade;
+    }
+
+    public void setFRepairGrade(String FRepairGrade) {
+        this.FRepairGrade = FRepairGrade;
+    }
+
+    public void setFRepairState(int FRepairState) {
+        this.FRepairState = FRepairState;
+    }
+
+    public String getFRequire() {
+        return FRequire;
+    }
+
+    public void setFRequire(String FRequire) {
+        this.FRequire = FRequire;
+    }
+
+    public double getFPlanStopManHour() {
+        return FPlanStopManHour;
+    }
+
+    public void setFPlanStopManHour(double FPlanStopManHour) {
+        this.FPlanStopManHour = FPlanStopManHour;
+    }
+
+    public double getFPlanRepairManHour() {
+        return FPlanRepairManHour;
+    }
+
+    public void setFPlanRepairManHour(double FPlanRepairManHour) {
+        this.FPlanRepairManHour = FPlanRepairManHour;
+    }
+
+    public double getFPlanRepairFee() {
+        return FPlanRepairFee;
+    }
+
+    public void setFPlanRepairFee(double FPlanRepairFee) {
+        this.FPlanRepairFee = FPlanRepairFee;
+    }
+
+    public int getFRecordStatus() {
+        return FRecordStatus;
+    }
+
+    public void setFRecordStatus(int FRecordStatus) {
+        this.FRecordStatus = FRecordStatus;
+    }
+
+    public int getFRepairWOID() {
+        return FRepairWOID;
+    }
+
+    public void setFRepairWOID(int FRepairWOID) {
+        this.FRepairWOID = FRepairWOID;
+    }
+
+    public int getFBillerID() {
+        return FBillerID;
+    }
+
+    public void setFBillerID(int FBillerID) {
+        this.FBillerID = FBillerID;
+    }
+
+    public int getFRepairBillerID() {
+        return FRepairBillerID;
+    }
+
+    public void setFRepairBillerID(int FRepairBillerID) {
+        this.FRepairBillerID = FRepairBillerID;
+    }
+
+    public double getFStopManhour() {
+        return FStopManhour;
+    }
+
+    public void setFStopManhour(double FStopManhour) {
+        this.FStopManhour = FStopManhour;
+    }
+
+    public int getFRepairCheckResult() {
+        return FRepairCheckResult;
+    }
+
+    public void setFRepairCheckResult(int FRepairCheckResult) {
+        this.FRepairCheckResult = FRepairCheckResult;
+    }
+
+    public double getFRepairFee() {
+        return FRepairFee;
+    }
+
+    public void setFRepairFee(double FRepairFee) {
+        this.FRepairFee = FRepairFee;
+    }
+
+    public double getFRepairManhour() {
+        return FRepairManhour;
+    }
+
+    public void setFRepairManhour(double FRepairManhour) {
+        this.FRepairManhour = FRepairManhour;
+    }
+
+    public int getFCheckStatus() {
+        return FCheckStatus;
+    }
+
+    public void setFCheckStatus(int FCheckStatus) {
+        this.FCheckStatus = FCheckStatus;
+    }
+
+    public String getFRepairPerson() {
+        return FRepairPerson;
+    }
+
+    public void setFRepairPerson(String FRepairPerson) {
+        this.FRepairPerson = FRepairPerson;
+    }
+
+    public String getFApplicant() {
+        return FApplicant;
+    }
+
+    public void setFApplicant(String FApplicant) {
+        this.FApplicant = FApplicant;
+    }
+
+    public String getFRepairCheckNote() {
+        return FRepairCheckNote;
+    }
+
+    public void setFRepairCheckNote(String FRepairCheckNote) {
+        this.FRepairCheckNote = FRepairCheckNote;
+    }
+
+    public int getFRepairCatg() {
+        return FRepairCatg;
+    }
+
+    public void setFRepairCatg(int FRepairCatg) {
+        this.FRepairCatg = FRepairCatg;
+    }
+
+    public int getFDeviceID() {
+        return FDeviceID;
+    }
+
+    public void setFDeviceID(int FDeviceID) {
+        this.FDeviceID = FDeviceID;
+    }
+
+    public int getFRepairSubcntr() {
+        return FRepairSubcntr;
+    }
+
+    public void setFRepairSubcntr(int FRepairSubcntr) {
+        this.FRepairSubcntr = FRepairSubcntr;
+    }
+
+    public int getFTimeUnit() {
+        return FTimeUnit;
+    }
+
+    public void setFTimeUnit(int FTimeUnit) {
+        this.FTimeUnit = FTimeUnit;
+    }
+
+    public int getFEntrust() {
+        return FEntrust;
+    }
+
+    public void setFEntrust(int FEntrust) {
+        this.FEntrust = FEntrust;
+    }
+
+    public int getFCurrency() {
+        return FCurrency;
+    }
+
+    public void setFCurrency(int FCurrency) {
+        this.FCurrency = FCurrency;
+    }
+
+    public String getFDeviceNumber() {
+        return FDeviceNumber;
+    }
+
+    public void setFDeviceNumber(String FDeviceNumber) {
+        this.FDeviceNumber = FDeviceNumber;
+    }
+
+    public String getFRepairRecord() {
+        return FRepairRecord;
+    }
+
+    public void setFRepairRecord(String FRepairRecord) {
+        this.FRepairRecord = FRepairRecord;
+    }
+
+    /**
+     * 获取 维修状态
+     * @return
+     */
+    public int getFRepairState() {
+        if(FRecordStatus==1)
+            return Constants.FILTER_REPAIRORDER_CHECK;
+        else
+            return Constants.FILTER_REPAIRORDER_REPAIR;
+    }
+
+    /**
+     * 截取 日期
+     * @return
+     */
+    public String getFBillDate() {
+        if(FBillDate==null)
+            return "";
+        int index=FBillDate.length();
+        if(FBillDate.lastIndexOf(".")!=-1)
+            index=FBillDate.lastIndexOf(".");
+        return FBillDate.substring(0,index);
+    }
+    @Override
+    public String toString() {
+        return "RepairOrderItem{" +
+                "FDeviceName='" + FDeviceName + '\'' +
+                ", FRepairContent='" + FRepairContent + '\'' +
+                ", FSettingPlace='" + FSettingPlace + '\'' +
+                ", FBillDate='" + FBillDate + '\'' +
+                ", FRepairWOBillID='" + FRepairWOBillID + '\'' +
+                ", FRepairGrade='" + FRepairGrade + '\'' +
+                ", FRepairState='" + FRepairState + '\'' +
+                ", FRepairWOID=" + FRepairWOID +
+                '}';
+    }
+
+
+}
Index: app/src/main/java/com/furja/devicemanager/beans/RepairState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/beans/RepairState.java	(date 1520411806000)
+++ app/src/main/java/com/furja/devicemanager/beans/RepairState.java	(date 1520411806000)
@@ -0,0 +1,70 @@
+package com.furja.devicemanager.beans;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 维修状态.
+ */
+
+public class RepairState {
+    public static List<String> states;
+    private int repairState;
+    public RepairState()
+    {
+        String[] stateStrings=new String[]{"待派单","待维修","在维修","已维修待验证","已验证"};
+        states=new ArrayList<>();
+        for(int i=0;i<stateStrings.length;i++)
+            states.add(stateStrings[i]);
+        this.repairState=0;
+    }
+
+    public void setRepairState(String state)
+    {
+        this.repairState=states.indexOf(state);
+    }
+    public int getStateIndex(String state)
+    {
+        return states.indexOf(state);
+    }
+    public String getNextState()
+    {
+        String result="";
+        repairState++;
+        if(repairState<states.size())
+            result=states.get(repairState);
+        return result;
+    }
+
+    public int getRepairState() {
+        return repairState;
+    }
+
+    /**
+     * 获取维修界面 按钮显示Label文本
+     * @return
+     */
+    public String getLabelOfState()
+    {
+        String label="接单";
+        switch (repairState)
+        {
+            case 0:
+                label="派单";
+                break;
+            case 1:
+                label="接单";
+                break;
+            case 2:
+                label="提交";
+                break;
+            case 3:
+                label="维修验证";
+                break;
+            case 4:
+                label="查看完毕";
+                break;
+        }
+        return label;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/utils/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/utils/Utils.java	(date 1576829370086)
+++ app/src/main/java/com/furja/devicemanager/utils/Utils.java	(date 1576829370086)
@@ -0,0 +1,498 @@
+package com.furja.devicemanager.utils;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.alibaba.fastjson.JSON;
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.devicemanager.beans.InspectPlan;
+import com.furja.devicemanager.beans.MaintainPlan;
+import com.furja.devicemanager.beans.RepairOrderItem;
+import com.furja.devicemanager.databases.DaoSession;
+import com.furja.devicemanager.databases.DeviceTrouble;
+import com.furja.devicemanager.databases.DeviceTroubleDao;
+import com.furja.devicemanager.databases.PlasticInjectCheck;
+import com.furja.devicemanager.databases.PlasticInjectCheckChild;
+import com.furja.devicemanager.databases.PlasticInjectCheckChildDao;
+import com.furja.devicemanager.databases.PlasticInjectCheckDao;
+import com.furja.devicemanager.databases.RepairRecord;
+import com.furja.devicemanager.databases.RepairRecordDao;
+import com.furja.devicemanager.json.PISpotCheckJSON;
+import com.furja.devicemanager.services.AppPushService;
+import com.furja.devicemanager.ui.plan.PlanListActivity;
+
+import org.greenrobot.greendao.query.QueryBuilder;
+
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Collections;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Set;
+
+import io.reactivex.Observable;
+import io.reactivex.functions.Consumer;
+import io.reactivex.schedulers.Schedulers;
+
+import static com.furja.devicemanager.DeviceManagerApp.getContext;
+import static com.furja.devicemanager.utils.Constants.FILTER_REPAIRORDER_CHECK;
+import static com.furja.devicemanager.utils.Constants.FILTER_REPAIRORDER_REPAIR;
+import static com.furja.devicemanager.utils.Constants.KEY_PLAN_ITEM;
+import static com.furja.devicemanager.utils.Constants.LOG_TAG;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_INTIME;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NEEDCHECK;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NEEDRECORD;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_NOTPASSCHECK;
+import static com.furja.devicemanager.utils.Constants.STATE_PLAN_OVER;
+
+/**
+ * 显示Log或Toast
+ */
+public class Utils {
+    private Map<Integer,String> planMap;
+    public Utils()
+    {
+        planMap=new HashMap<Integer,String>();
+        planMap.put(STATE_PLAN_NEEDRECORD,"计划尚未执行");
+        planMap.put(STATE_PLAN_NEEDCHECK,"已执行未审核");
+        planMap.put(STATE_PLAN_NOTPASSCHECK,"执行未通过审核");
+        planMap.put(STATE_PLAN_INTIME,"计划如期执行");
+        planMap.put(STATE_PLAN_OVER,"计划已经过期");
+    }
+    /*
+     *获取计划状态
+     */
+    public static String getPlanState(int state)
+    {
+        String label="计划如期执行";
+        switch (state)
+        {
+            case STATE_PLAN_INTIME:
+                return label;
+            case STATE_PLAN_NEEDCHECK:
+                return "已执行未审核";
+            case STATE_PLAN_NEEDRECORD:
+                return "计划尚未执行";
+            case STATE_PLAN_OVER:
+                return "计划已经过期";
+            case STATE_PLAN_NOTPASSCHECK:
+                return "计划未通过审核";
+        }
+        return label;
+
+    }
+
+    /*
+     *获取计划状态标识ID
+     */
+    public  int getPlanState(String state)
+    {
+        int planState=0;
+        Set<Map.Entry<Integer,String>>
+                mapSet=planMap.entrySet();
+        try {
+            for(Map.Entry<Integer,String> entry:mapSet)
+            {
+                if(entry.getValue().equals(state))
+                    return entry.getKey();
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return planState;
+    }
+
+
+    /**
+     * 获取年月日格式的Date
+     * @param cal
+     * @return
+     */
+    public static Date getYMD_Date(Calendar cal)
+    {
+        try
+        {
+            String cur
+                    =cal.get(Calendar.YEAR)+"-"+
+                    (cal.get(Calendar.MONTH)+1)+"-"+cal.get(Calendar.DAY_OF_MONTH);
+            SimpleDateFormat sim=new SimpleDateFormat("yyyy-MM-dd");
+            Date curDate=sim.parse(cur);
+            return curDate;
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+        return  cal.getTime();
+    }
+
+    /**
+     * 是否同月
+     * @param calendar
+     * @param date
+     * @return
+     */
+    public static boolean isSameMonth(Calendar calendar,Date date)
+    {
+        if(date==null)
+            return false;
+        Calendar arguCaledar=Calendar.getInstance();
+        arguCaledar.setTime(date);
+        return calendar.get(Calendar.MONTH)
+                ==arguCaledar.get(Calendar.MONTH)
+                &&
+                calendar.get(Calendar.YEAR)
+                        ==arguCaledar.get(Calendar.YEAR);
+    }
+
+    public static Date parseDate(String date)
+    {
+        if(TextUtils.isEmpty(date))
+            return null;
+        date=date.replace("/","-");
+        SimpleDateFormat dateFormat
+                =new SimpleDateFormat("yyyy-MM-dd");
+        try {
+            return dateFormat.parse(date);
+        } catch (ParseException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+
+    public static boolean isUploadSuccess(String response)
+    {
+
+
+        if(TextUtils.isEmpty(response))
+            return false;
+        if(response.contains("成功"))
+            return true;
+        return false;
+    }
+
+
+
+
+
+
+
+    /**
+     * 将数据库存储至本地
+     */
+    public static void saveInLocal(DeviceTrouble problem)
+    {
+        DaoSession daoSession=DeviceManagerApp.getDaoSession();
+        DeviceTroubleDao dao=daoSession.getDeviceTroubleDao();
+        dao.saveInTx(problem);
+    }
+
+    /**
+     * 将数据库存储至本地
+     */
+    public static void saveInLocal(RepairRecord record)
+    {
+        DaoSession daoSession=DeviceManagerApp.getDaoSession();
+        RepairRecordDao dao=daoSession.getRepairRecordDao();
+        dao.saveInTx(record);
+    }
+
+
+
+    /**
+     * 后台上传注塑点检报告
+     */
+    private  void toUploadPISpotCheck() {
+
+        Observable.just(queryNotUploadPISP())
+                .subscribeOn(Schedulers.io())
+                .observeOn(Schedulers.newThread())
+                .subscribe(new Consumer<List<PlasticInjectCheck>>() {
+                    @Override
+                    public void accept(List<PlasticInjectCheck> injectChecks) throws Exception {
+                        for(PlasticInjectCheck piCheck:injectChecks)
+                        {
+                            PISpotCheckJSON json
+                                    =new PISpotCheckJSON(piCheck);
+                            json.upload(null);
+                        }
+                    }
+                });
+
+    }
+
+
+    /**
+     * 查找未上传的注塑车间开机点检数据
+     * @return
+     */
+    private List<PlasticInjectCheck> queryNotUploadPISP() {
+        DaoSession daoSession
+                = DeviceManagerApp.getDaoSession();
+        PlasticInjectCheckDao dao
+                = daoSession.getPlasticInjectCheckDao();
+        QueryBuilder queryBuilder = dao.queryBuilder();
+        List<PlasticInjectCheck> list
+                = queryBuilder.where(PlasticInjectCheckDao.Properties.IsUpload.eq(false)).list();
+        if (list == null)
+            return Collections.emptyList();
+        else
+            return list;
+    }
+
+
+
+    /**
+     * 查找未上传的维修 数据
+     * @return
+     */
+    private List<RepairRecord> queryNotUploadRE()
+    {
+        DaoSession daoSession
+                = DeviceManagerApp.getDaoSession();
+        RepairRecordDao dao
+                = daoSession.getRepairRecordDao();
+        QueryBuilder queryBuilder = dao.queryBuilder();
+        List<RepairRecord> list
+                = queryBuilder.where(RepairRecordDao.Properties.IsUpload.eq(false)).list();
+        if (list == null)
+            return Collections.emptyList();
+        else
+            return list;
+    }
+
+
+
+    /**
+     * 储存注塑车间点检的子模块
+     * @param injectCheck
+     */
+    public static void saveInLocal(PlasticInjectCheckChild injectCheck)
+    {
+        DaoSession daoSession
+                = DeviceManagerApp.getDaoSession();
+        PlasticInjectCheckChildDao dao
+                = daoSession.getPlasticInjectCheckChildDao();
+        dao.saveInTx(injectCheck);
+    }
+
+    /**
+     * 保存注塑车间开机点检数据
+     * @param piCheck
+     */
+    public static void saveInLocal(PlasticInjectCheck piCheck) {
+
+        DaoSession daoSession
+                = DeviceManagerApp.getDaoSession();
+        PlasticInjectCheckDao dao
+                = daoSession.getPlasticInjectCheckDao();
+        dao.saveInTx(piCheck);
+
+    }
+
+    public static String getCurDate()
+    {
+        Date date=new Date(System.currentTimeMillis());
+        SimpleDateFormat simpleDateFormat
+                =new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
+        return simpleDateFormat.format(date);
+    }
+
+
+
+    /**
+     * 删除维修报告的本地数据,一般用于数据上传成功后使用
+     * @param record
+     */
+    public static void delete(RepairRecord record)
+    {
+        DaoSession daoSession=DeviceManagerApp.getDaoSession();
+        RepairRecordDao dao=daoSession.getRepairRecordDao();
+        dao.delete(record);
+    }
+
+    public void toUploadRemainLog() {
+        toUploadPISpotCheck();
+    }
+
+
+    /**
+     * 管理 MaintainPlan 的相关通知
+     * @param plan
+     */
+    public static void managerNotification(MaintainPlan plan) {
+        AppPushService pushServices
+                =DeviceManagerApp.getPushService();
+        Intent intent=new Intent(getContext(), PlanListActivity.class);
+        intent.putExtra(KEY_PLAN_ITEM, JSON.toJSONString(plan));
+        intent.setData(Uri.parse("MaintainPlan"));
+        if(pushServices==null)
+            return;
+        int id=0;
+        try {
+            id=Integer.valueOf(plan.getFID())*10+2;
+        }
+        catch (Exception e)
+        {
+            return;
+        }
+        com.furja.utils.Utils.cancel(id);
+
+        String nextDate=plan.getFNextMaintainDate();
+        Date tomorrowDate=getTomorrowDate();
+        if(!TextUtils.isEmpty(nextDate))
+        {
+            if(Utils.parseDate(nextDate)
+                    .compareTo(Utils.parseDate(getCurDate()))==0)
+            {
+                pushServices
+                        .showNotification(id,
+                                plan.getFMaintainType()+"计划今日到期: ["
+                                        +plan.getFDeviceNumber()+"] ["+
+                                        plan.getFDeviceName()+"]", Utils.getPlanState(plan.getFPlanState()),"保养",intent);
+            }
+            else if (!Utils.parseDate(plan.getFPlanEndDate())
+                    .before(tomorrowDate))
+                {
+                    if(Utils.parseDate(nextDate)
+                            .compareTo(tomorrowDate)==0)
+                        pushServices
+                                .showNotification(id,
+                                        plan.getFMaintainType()+"计划明日到期: ["
+                                                +plan.getFDeviceNumber()+"] ["+
+                                                plan.getFDeviceName()+"]",
+                                        Utils.getPlanState(plan.getFPlanState()),"保养",intent);;
+                }
+        }
+
+
+//        showMaintainNotify(plan, pushServices, intent, id);
+    }
+
+    /**
+     * 通知待执行待审核的计划提醒
+     * @param plan
+     * @param pushServices
+     * @param intent
+     * @param id
+     */
+    private static void showMaintainNotify(MaintainPlan plan, AppPushService pushServices, Intent intent, int id) {
+        switch (plan.getFPlanState())
+        {
+            case STATE_PLAN_NEEDRECORD:
+            case STATE_PLAN_NOTPASSCHECK:
+                pushServices
+                        .showNotification(id,
+                                plan.getFMaintainType()+"计划待执行: ["
+                                   +plan.getFDeviceNumber()+"] ["+
+                                   plan.getFDeviceName()+"]", Utils.getPlanState(plan.getFPlanState()),"保养",intent);
+                break;
+            case STATE_PLAN_NEEDCHECK:
+                pushServices
+                        .showNotification(id,
+                                plan.getFMaintainType()+"计划待审核: ["
+                                        +plan.getFDeviceNumber()+"] ["+
+                                        plan.getFDeviceName()+"]",
+                                Utils.getPlanState(plan.getFPlanState()),"保养",intent);
+                break;
+            case STATE_PLAN_INTIME:
+            case STATE_PLAN_OVER:
+                break;
+        }
+    }
+
+    public void cancel(int id)
+    {
+        com.furja.utils.Utils.cancel(id);
+    }
+
+    /**
+     * 管理 InspectPlan 的相关通知
+     * @param plan
+     */
+    public static void managerNotification(InspectPlan plan) {
+        AppPushService pushServices
+                =DeviceManagerApp.getPushService();
+        Intent intent=new Intent(getContext(), PlanListActivity.class);
+        intent.putExtra(KEY_PLAN_ITEM, JSON.toJSONString(plan));
+        intent.setData(Uri.parse("InspectPlan"));
+        if(pushServices==null)
+            return;
+        int id=plan.getFID()*10+1;
+        com.furja.utils.Utils.cancel(id);
+        switch (plan.getFPlanState())
+        {
+            case STATE_PLAN_NEEDRECORD:
+
+            case STATE_PLAN_NOTPASSCHECK:
+                break;
+            case STATE_PLAN_NEEDCHECK:
+                pushServices
+                        .showNotification(id,
+                                "点检计划待审核: ["
+                                        +plan.getFDeviceNumber()+"] ["+
+                                        plan.getFDeviceName()+"]",
+                                Utils.getPlanState(plan.getFPlanState()),"点检",intent);
+                break;
+            case STATE_PLAN_INTIME:
+
+            case STATE_PLAN_OVER:
+                break;
+        }
+    }
+    /**
+     * 管理 RepairOrderItem 的相关通知
+     * @param item
+     */
+    public static void managerNotification(RepairOrderItem item)
+    {
+        AppPushService pushServices
+                =DeviceManagerApp.getPushService();
+        Intent intent=new Intent(getContext(), PlanListActivity.class);
+        intent.putExtra(KEY_PLAN_ITEM, JSON.toJSONString(item));
+        intent.setData(Uri.parse("RepairOrder"));
+        int id=item.getFRepairWOID()*10+3;
+        switch (item.getFRepairState())
+        {
+            case FILTER_REPAIRORDER_CHECK:
+                pushServices
+                        .showNotification(id,
+                                "故障待验收: [" +item.getFSettingPlace()+"]"+"["
+                                        +item.getFDeviceNumber()+"] ["+
+                                        item.getFDeviceName()+"]","待验收的维修工单"
+                                            ,"维修",intent);
+                break;
+            case FILTER_REPAIRORDER_REPAIR:
+                pushServices
+                        .showNotification(id,
+                                "新故障待修: [" +item.getFSettingPlace()+"]"+"["
+                                +item.getFDeviceNumber()+"] ["+
+                                item.getFDeviceName()+"]",
+                                "工单待维修","维修",intent);
+        }
+    }
+
+    /**
+     * 获取明天日期
+     * @return
+     */
+    public static Date getTomorrowDate()
+    {
+        Calendar calendar=Calendar.getInstance();
+        calendar.add(Calendar.DAY_OF_MONTH,1);
+        Date date= Utils.getYMD_Date(calendar);
+        return date;
+    }
+
+    public Map<Integer, String> getPlanMap() {
+        return planMap;
+    }
+
+    public void setPlanMap(Map<Integer, String> planMap) {
+        this.planMap = planMap;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/utils/JSONParser.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/utils/JSONParser.java	(date 1528280624000)
+++ app/src/main/java/com/furja/devicemanager/utils/JSONParser.java	(date 1528280624000)
@@ -0,0 +1,31 @@
+package com.furja.devicemanager.utils;
+
+import android.text.TextUtils;
+
+import com.alibaba.fastjson.JSONObject;
+
+/**
+ * JSON剖析器,主要用于提取从服务器获取JSON的"ErrData"键值
+ */
+
+public class JSONParser {
+
+    public static String parserJSON(String json)
+    {
+        if(TextUtils.isEmpty(json))
+            return "";
+        JSONObject object=JSONObject.parseObject(json);
+        json=object.getString("ErrData");
+        json=json.replace("[","");
+        json=json.replace("]","");
+        return json;
+    }
+    public static String parserArray(String json)
+    {
+        if(TextUtils.isEmpty(json))
+            return "";
+        JSONObject object=JSONObject.parseObject(json);
+        json=object.getString("ErrData");
+        return json;
+    }
+}
Index: app/src/main/java/com/furja/devicemanager/services/AlarmReceiver.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/services/AlarmReceiver.java	(date 1576909071095)
+++ app/src/main/java/com/furja/devicemanager/services/AlarmReceiver.java	(date 1576909071095)
@@ -0,0 +1,194 @@
+package com.furja.devicemanager.services;
+
+import android.content.BroadcastReceiver;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Build;
+import android.text.TextUtils;
+
+import com.alibaba.fastjson.JSON;
+import com.furja.devicemanager.DeviceManagerApp;
+import com.furja.devicemanager.beans.InspectPlan;
+import com.furja.devicemanager.beans.MaintainPlan;
+import com.furja.devicemanager.beans.RepairOrderItem;
+import com.furja.devicemanager.utils.JSONParser;
+
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import java.util.List;
+
+import okhttp3.Call;
+
+import static com.furja.devicemanager.utils.Constants.FURJA_GET_INSPECTPLAN;
+import static com.furja.devicemanager.utils.Constants.FURJA_GET_MAINTAINPLAN;
+import static com.furja.devicemanager.utils.Constants.FURJA_GET_REPAIRORDERLIST;
+import static com.furja.devicemanager.utils.Utils.managerNotification;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * 定时任务接收器
+ */
+public class AlarmReceiver extends BroadcastReceiver {
+    AppPushService pushServices;
+    int requestCount=0;
+    int errorCount=0;
+    int requestOrderCount=0;
+    @Override
+    public void onReceive(Context context, Intent intent) {
+        showLog("接收到闹钟");
+        if(pushServices==null)
+            pushServices=DeviceManagerApp.getPushService();
+        if(intent!=null)
+        {
+            analyseIntent(intent);
+        }
+
+    }
+
+    /**
+     * 解析Intent
+     * @param intent
+     */
+    private void analyseIntent(Intent intent) {
+        String action=intent.getAction();
+        if(!TextUtils.isEmpty(action))
+        {
+            if(action.contains("ALARM"))
+            {
+                if(Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT)
+                    pushServices.setAlarm();
+                requestPlanList();
+            }
+        }
+
+    }
+
+    public void requestPlanList()
+    {
+        requestInspectPlan();
+        requestMainainPlan();
+        requestOrderList();
+    }
+    /**
+     * 获取保养计划
+     */
+    private void requestMainainPlan() {
+        OkHttpUtils
+                .get()
+                .url(FURJA_GET_MAINTAINPLAN)
+                .addParams("devCode","0")
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        showLog(e.toString());
+                        if (++errorCount<3)
+                            requestMainainPlan();
+
+                    }
+                    @Override
+                    public void onResponse(String s, int i) {
+                        requestCount=0;
+//                        showChartLog(getClass()+s);
+                        List<MaintainPlan> planList=null;
+                        try {
+                            s= JSONParser.parserArray(s);
+                            planList= JSON.parseArray(s,MaintainPlan.class);
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                        }
+                        if(planList!=null&&!planList.isEmpty()) {
+                            for(MaintainPlan plan:planList)
+                            {
+                                managerNotification(plan);
+                            }
+                        }
+                    }
+                });
+    }
+
+    /**
+     * 获取点检计划
+     */
+    private void requestInspectPlan() {
+        OkHttpUtils
+                .get()
+                .url(FURJA_GET_INSPECTPLAN)
+                .addParams("devCode","0")
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        if(++requestCount<3)
+                            requestInspectPlan();
+                    }
+                    @Override
+                    public void onResponse(String s, int i){
+//                        showChartLog(getClass()+s);
+                        try {
+                            s= JSONParser.parserArray(s);
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            return;
+                        }
+                        List<InspectPlan> planList
+                                = JSON.parseArray(s,InspectPlan.class);
+                        if(planList!=null&&!planList.isEmpty())
+                        {
+                            for(InspectPlan plan:planList)
+                            {
+                                managerNotification(plan);
+                            }
+                        }
+                    }
+                });
+    }
+
+    /**
+     * 请求维修单
+     */
+    private void requestOrderList() {
+        OkHttpUtils
+                .get()
+                .url(FURJA_GET_REPAIRORDERLIST)
+                .addParams("filterCode","2")
+                .addParams("userID", DeviceManagerApp.getUserId())
+                .build()
+                .execute(new StringCallback() {
+                    @Override
+                    public void onError(Call call, Exception e, int i) {
+                        requestOrderCount++;
+                        if(requestOrderCount<2)
+                            requestOrderList();
+
+                    }
+
+                    @Override
+                    public void onResponse(String s, int i)
+                    {
+                        try {
+                            s= JSONParser.parserArray(s);
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            return;
+                        }
+                        List<RepairOrderItem> planList
+                                = JSON.parseArray(s,RepairOrderItem.class);
+                        if(planList!=null&&!planList.isEmpty())
+                        {
+                            for(RepairOrderItem plan:planList)
+                            {
+                                managerNotification(plan);
+                            }
+                        }
+                    }
+                });
+    }
+
+
+
+
+
+
+}
Index: app/src/main/java/com/furja/devicemanager/utils/Constants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/utils/Constants.java	(date 1534903188000)
+++ app/src/main/java/com/furja/devicemanager/utils/Constants.java	(date 1534903188000)
@@ -0,0 +1,69 @@
+package com.furja.devicemanager.utils;
+/**
+ * 常量
+ */
+public class Constants {
+    public static final String LOG_TAG="device_manager";
+    public static final String EXCEPTION_LOG_URL="http://192.168.10.92:8377/";
+    public static final String FURJA_LOGIN_URL ="http://192.168.10.5:5050/bcwebservice/Service.asmx/";
+    public static final String FURJA_BARCODEINFO_URL ="http://192.168.8.46:8118/FJCommonInterface/GetBarCodeInfo/";
+    public static final String FURJA_UPLOAD_URL ="http://192.168.8.46:8118/FJBadTypeInterface/SendBadTypeLog/";
+    public static final String FURJA_DEVICE_INFO_GET="http://192.168.8.46:8118/FJDeviceManagerInterface/GetDeviceManagerData/";
+    public static final String PISPOTCHECK_UPLOAD_URL ="http://192.168.8.46:8118/FJDeviceManagerInterface/SendDeviceManagerCheck/";
+    public static final String FURJA_SEND_REPAIRLOG ="http://192.168.10.92:8378/sendRepairRecord";
+    public static final String FURJA_SEND_REPAIRWO ="http://192.168.8.46:8118/FJDeviceManagerInterface/SaveICDeviceRepairWO/";
+    public static final String FURJA_SEND_REPAIRRECORD ="http://192.168.8.46:8118/FJDeviceManagerInterface/SaveICDeviceRepairRecord/";
+    public static final String FURJA_SEND_REPAIRCHECK ="http://192.168.8.46:8118/FJDeviceManagerInterface/SaveICDeviceRepairCheck/";
+    public static final String FURJA_SEND_INSPECTRECORD = "http://192.168.8.46:8118/FJDeviceManagerInterface/SaveICDeviceInspectRecord/";
+    public static final String FURJA_SEND_MAINTAINRECORD ="http://192.168.8.46:8118/FJDeviceManagerInterface/SaveICDeviceMaintainRecord/";
+    public static final String FURJA_SEND_CHECKRECORD ="http://192.168.8.46:8118/FJDeviceManagerInterface/UpdateICDeviceInspectRecord/";
+
+
+    public static final String FURJA_GET_DEVICEACCOUNT="http://192.168.8.46:8118/FJDeviceManagerInterface/GetDeviceAccount/";
+    public static final String FURJA_GET_INSPECTPLAN = "http://192.168.8.46:8118/FJDeviceManagerInterface/GetInspectPlanByDevCode/";
+    public static final String FURJA_GET_REPAIRPROJECT ="http://192.168.8.46:8118/FJDeviceManagerInterface/GetRepairProjectByWOID/";
+    public static final String FURJA_GET_INSPECTPROJECT="http://192.168.8.46:8118/FJDeviceManagerInterface/GetInspectProjectByPlanID/";
+    public static final String FURJA_GET_MAINTAINPLAN="http://192.168.8.46:8118/FJDeviceManagerInterface/GetMaintainPlanByDevCode/";
+    public static final String FURJA_GET_MAINTAINPROJECT="http://192.168.8.46:8118/FJDeviceManagerInterface/GetMaintainProjectByPlanID/";
+    public static final String FURJA_GET_REPAIRORDERLIST ="http://192.168.8.46:8118/FJDeviceManagerInterface/GetRepairOrderList/";
+
+    public static final String CHAT_PUSH_URL="http://192.168.10.92:8378";
+    public static final String UPLOAD_FINISH="uploadfinish";
+    public static final String RESET_CONFIG="reset_config";
+    public static final String INTERNET_ABNORMAL="网络连接异常";
+    public static final String OPERATOR_LOGIN_ERROR="账号或密码错误";
+    public static final String CHAT_EVENT="chat_event";
+    public static final String PUSH_EVENT="push_event";
+    public static final String TRANSFER_EVENT="transfer_event";
+    public static final int CONNECTING_STATE=101;
+    public static final int CONNECTED_STATE=102;
+    public static final int UNCONNECTED_STATE=103;
+    public static final int CODE_MAINTAIN_RECORD =11;
+    public static final int CODE_INSPECT_RECORD=12;
+    public static final int CODE_REPAIR_RECORD=13;
+    public static final int CODE_REPAIR_DETAIL=14;
+
+    public static final int TAG_EDIT_PROJECT=5;
+    public static final int TAG_ADD_PROJECT=6;
+    public static final int TAG_CHECK_PROJECT=7;
+
+    public static final int FILTER_REPAIRORDER_REPAIR=1;   //维修单里要维修的
+    public static final int FILTER_REPAIRORDER_CHECK=2;    //维修单里要验收的
+    public static final int FILTER_REPAIRORDER_NOTEND=3;   //未验收完成的维修单
+    public static final int FILTER_REPAIRORDER_MYAPPLY=4;  //我报修的维修单
+    public static final int FILTER_REPAIRORDER_MYREPAIR=5; //我维修的维修单
+
+    public static final int STATE_PLAN_NEEDRECORD=27;   //计划到期需要实施
+    public static final int STATE_PLAN_NEEDCHECK=26;    //计划已实施需要审核
+    public static final int STATE_PLAN_OVER=25;         //计划未实施已过期
+    public static final int STATE_PLAN_INTIME=28;       //计划及时实施
+    public static final int STATE_PLAN_NOTPASSCHECK=29; //计划实施未通过审核
+
+    public static final String TAG_OWNREPAIRREPORT="TAG1";
+    public static final String TAG_OWNREPAIRRECORD="TAG2";
+    public static final String TAG_OWNASSIGNRECORD="TAG3";
+    public static final String TAG_OWNCONFIRMRECORD="TAG4";
+    public static final String KEY_PROJECT_ITEMS="ProjectItems";
+    public static final String KEY_PLAN_ITEM="PlanItems";
+
+}
Index: app/src/main/java/com/furja/devicemanager/services/AppPushService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/services/AppPushService.java	(date 1576829481459)
+++ app/src/main/java/com/furja/devicemanager/services/AppPushService.java	(date 1576829481459)
@@ -0,0 +1,95 @@
+package com.furja.devicemanager.services;
+
+import android.app.AlarmManager;
+import android.app.PendingIntent;
+import android.app.Service;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Binder;
+import android.os.Build;
+import android.os.IBinder;
+import androidx.annotation.Nullable;
+
+import com.furja.common.Preferences;
+
+import static android.app.PendingIntent.FLAG_UPDATE_CURRENT;
+import static com.furja.utils.Utils.showLog;
+
+/**
+ * APP推送通知服务,每5分钟推送一次
+ */
+public class AppPushService extends Service {
+    AlarmManager am;
+    PendingIntent pendingIntent;
+    /**
+     * 启动后设定闹钟定时获取计划
+     */
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        showLog("Services创建了");
+        am = (AlarmManager)getSystemService(Context.ALARM_SERVICE);
+
+        Intent intent
+                =new Intent(this, AlarmReceiver.class);
+        intent.setAction("com.furja.devicemanager.services.ALARM");
+        pendingIntent
+                =PendingIntent.getBroadcast(this,0,intent,FLAG_UPDATE_CURRENT);
+
+
+    }
+
+    /**
+     *推送通知,ID标识区分如下:
+     * 点检计划是计划ID*10+1;保养计划是计划ID*10+2;维修相关是其工单ID*10+3
+     */
+    public  void showNotification(int id,String text,String title,String info,Intent intent)
+    {
+        com.furja.utils.Utils
+                .showNotification(id,text,title,info,intent);
+    }
+
+
+    @Override
+    public int onStartCommand(Intent intent, int flags, int startId) {
+        setAlarm();
+        return START_STICKY;
+    }
+
+    /**
+     * 设置闹钟
+     */
+    public void setAlarm() {
+        showLog("开启闹钟");
+        try {
+            am.cancel(pendingIntent);   //取消闹钟
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        int minute= Preferences.getAlarmInterval();
+        if(Build.VERSION.SDK_INT <= Build.VERSION_CODES.KITKAT)
+            am.setRepeating(AlarmManager.ELAPSED_REALTIME,0,
+                    minute*60*1000,pendingIntent);
+        else
+            am.setWindow(AlarmManager.ELAPSED_REALTIME,0,
+                    minute*60*1000+System.currentTimeMillis(), pendingIntent);
+    }
+
+    @Nullable
+    @Override
+    public IBinder onBind(Intent intent) {
+        return new PushBinder();
+    }
+
+    public class PushBinder extends Binder
+    {
+        public AppPushService getPushService()
+        {
+            return AppPushService.this;
+        }
+    }
+
+
+
+
+}
Index: app/src/main/res/drawable/ic_inspecthistory_top.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_inspecthistory_top.xml	(date 1576908714008)
+++ app/src/main/res/drawable/ic_inspecthistory_top.xml	(date 1576908714008)
@@ -0,0 +1,11 @@
+<vector android:alpha="0.96" android:height="64dp"
+    android:viewportHeight="1024" android:viewportWidth="1024"
+    android:width="64dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#63D0A8" android:pathData="M610.16,132.31h-385.86c0,0 0,0 0,0 -26.21,0 -47.46,21.25 -47.46,47.46v640.73c0,13.1 5.3,24.96 13.9,33.56 8.57,8.59 20.42,13.9 33.51,13.9 0.01,0 0.03,0 0.04,0h522.07c0,0 0,0 0,0 26.21,0 47.46,-21.25 47.46,-47.46 0,0 0,0 0,0v-504.52l-183.67,-183.67z"/>
+    <path android:fillColor="#CAFFEC" android:pathData="M610.16,132.31h-6.18v142.39c0,0 0,0 0,0 0,26.21 21.25,47.46 47.46,47.46 0,0 0,0 0,0h142.39v-6.18l-183.67,-183.67z"/>
+    <path android:fillColor="#FFFFFF" android:pathData="M289.56,464.54h391.55c0.09,0 0.2,0 0.32,0 9.83,0 17.8,-7.97 17.8,-17.8 0,-9.83 -7.97,-17.8 -17.8,-17.8 -0.11,0 -0.22,0 -0.33,0h-391.53c-9.7,0.18 -17.49,8.08 -17.49,17.8s7.79,17.62 17.47,17.8zM681.11,535.73h-391.56c-9.64,0.25 -17.36,8.12 -17.36,17.8s7.72,17.55 17.33,17.8l391.57,0c9.64,-0.25 17.36,-8.12 17.36,-17.8 0,-9.67 -7.72,-17.55 -17.33,-17.8zM681.11,642.52h-391.56c-9.7,0.18 -17.49,8.08 -17.49,17.8s7.79,17.62 17.47,17.8h391.57c9.6,-0.3 17.26,-8.16 17.26,-17.8 0,-9.64 -7.66,-17.49 -17.23,-17.8zM289.56,357.76h189.84c9.7,-0.18 17.49,-8.08 17.49,-17.8s-7.79,-17.62 -17.47,-17.8h-189.86c-9.7,0.18 -17.49,8.08 -17.49,17.8s7.79,17.62 17.47,17.8z"/>
+    <path android:fillColor="#C8C6C4" android:pathData="M519.51,732.03c-0.02,94.57 78.76,171.26 175.97,171.28 97.22,0.01 176.04,-76.63 176.06,-171.21v-0.07c0,-94.57 -78.81,-171.25 -176.02,-171.25 -97.2,0.01 -176.01,76.68 -176.01,171.25z"/>
+    <path android:fillColor="#FFFFFF" android:pathData="M539.77,732.03c-0.02,83.69 69.71,151.55 155.72,151.57 86.03,0.03 155.79,-67.8 155.81,-151.5v-0.08c0,-83.69 -69.73,-151.54 -155.77,-151.54 -86.03,0.01 -155.76,67.85 -155.76,151.54z"/>
+    <path android:fillColor="#5B5144" android:pathData="M687.81,744.81c0,8.36 6.96,15.13 15.56,15.13 8.61,0 15.58,-6.77 15.58,-15.13 0,-8.36 -6.96,-15.15 -15.58,-15.15 -8.6,-0.01 -15.56,6.78 -15.56,15.15z"/>
+    <path android:fillColor="#5B5144" android:pathData="M709.6,730.24c0,3.36 -2.78,6.07 -6.23,6.07 -3.43,0 -6.22,-2.72 -6.22,-6.07v-81.84c0,-3.35 2.79,-6.06 6.22,-6.06 3.45,0 6.23,2.72 6.23,6.06v81.84zM690.27,752.35c1.09,-0.89 2.5,-1.44 4.03,-1.44 1.89,0 3.59,0.82 4.75,2.13 0.92,1.05 1.48,2.43 1.48,3.94 0,1.78 -0.78,3.37 -2.01,4.46l-0.19,0.15 -37.98,31.42c-1.09,0.9 -2.5,1.45 -4.04,1.45 -1.89,0 -3.58,-0.82 -4.74,-2.13 -0.93,-1.05 -1.49,-2.42 -1.49,-3.93 0,-1.78 0.78,-3.37 2.02,-4.46 0.07,-0.06 0.12,-0.1 0.18,-0.16l37.98,-31.43z"/>
+</vector>
Index: app/src/main/java/com/furja/devicemanager/services/MyCrashHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/furja/devicemanager/services/MyCrashHandler.java	(date 1576829481146)
+++ app/src/main/java/com/furja/devicemanager/services/MyCrashHandler.java	(date 1576829481146)
@@ -0,0 +1,100 @@
+package com.furja.devicemanager.services;
+
+import android.content.Context;
+import android.content.Intent;
+
+
+import com.furja.devicemanager.DeviceManagerApp;
+import com.zhy.http.okhttp.OkHttpUtils;
+import com.zhy.http.okhttp.callback.StringCallback;
+
+import java.io.PrintWriter;
+import java.io.StringWriter;
+import java.io.Writer;
+import java.lang.Thread.UncaughtExceptionHandler;
+
+import okhttp3.Call;
+
+import static com.furja.devicemanager.utils.Constants.EXCEPTION_LOG_URL;
+import static com.furja.utils.Utils.showLog;
+import static com.furja.utils.Utils.showToast;
+
+
+/**
+ * 未捕捉异常的日志上传
+ */
+
+public class MyCrashHandler implements UncaughtExceptionHandler {
+    private Context context;
+    public static MyCrashHandler crashHandler;
+    public static MyCrashHandler getInstance()
+    {
+        if(crashHandler==null)
+            crashHandler=new MyCrashHandler(DeviceManagerApp.getContext());
+        return crashHandler;
+    }
+    public MyCrashHandler(Context context1)
+    {
+        this.context=context1;
+    }
+    @Override
+    public void uncaughtException(Thread thread, Throwable ex) {
+        String string="DeviceManagerAPP>"+getStackTraceInfo(ex);
+        upload(string);
+        if(context==null)
+            return;
+        showToast("出现异常,即将重启");
+        Intent launchIntent = context.getPackageManager().getLaunchIntentForPackage(context.getPackageName());
+        launchIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+        context.startActivity(launchIntent);
+        try {
+            Thread.sleep(1000);
+            System.exit(0);
+        } catch (InterruptedException e) {
+            e.printStackTrace();
+        }
+    }
+
+    private  String getStackTraceInfo(final Throwable throwable) {
+        String trace = "";
+        try {
+            Writer writer = new StringWriter();
+            PrintWriter pw = new PrintWriter(writer);
+            throwable.printStackTrace(pw);
+            trace = writer.toString();
+            pw.close();
+        } catch (Exception e) {
+            return "";
+        }
+        showLog(trace);
+        return trace;
+    }
+
+    public void upload(String errorDetail)
+    {
+        try {
+            OkHttpUtils.post()
+                    .url(EXCEPTION_LOG_URL)
+                    .addParams("errorLog",errorDetail)
+                    .build()
+                    .execute(new StringCallback() {
+                        @Override
+                        public void onError(Call call, Exception e, int id) {
+
+                        }
+
+                        @Override
+                        public void onResponse(String response, int id) {
+
+                        }
+                    });
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    public  void uploadError(Throwable ex)
+    {
+        upload(getStackTraceInfo(ex));
+    }
+}
